{
  "version": 3,
  "sources": ["../../@atlaskit/editor-markdown-transformer/node_modules/entities/lib/maps/entities.json", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/common/entities.js", "../../mdurl/encode.js", "../../mdurl/decode.js", "../../mdurl/format.js", "../../mdurl/parse.js", "../../mdurl/index.js", "../../uc.micro/categories/Cf/regex.js", "../../uc.micro/index.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/common/utils.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/helpers/parse_link_label.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/helpers/parse_link_destination.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/helpers/parse_link_title.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/helpers/index.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/renderer.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/ruler.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/normalize.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/linkify.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/replacements.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/smartquotes.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/text_join.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/token.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_core/state_core.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/parser_core.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/table.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/code.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/fence.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/blockquote.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/hr.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/list.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/reference.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/common/html_blocks.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/common/html_re.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/html_block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/heading.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/lheading.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/paragraph.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_block/state_block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/parser_block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/text.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/linkify.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/newline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/escape.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/backticks.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/strikethrough.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/emphasis.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/link.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/image.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/autolink.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/html_inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/entity.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/balance_pairs.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/fragments_join.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/rules_inline/state_inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/parser_inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/node_modules/linkify-it/lib/re.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/node_modules/linkify-it/index.js", "../../punycode/punycode.es6.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/presets/default.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/presets/zero.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/presets/commonmark.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/lib/index.js", "../../@atlaskit/editor-markdown-transformer/node_modules/markdown-it/index.js", "../../markdown-it-table/dist/es/table.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/createPMSpecFactory.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/next-schema/generated/nodeTypes.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/expand.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/confluence-jira-issue.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/confluence-unsupported-block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/confluence-unsupported-inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/doc.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/blockquote.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/bullet-list.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/code-block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/hard-break.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/heading.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/rule.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/ordered-list.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/paragraph.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/confluence/emoji.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/emoji.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/image.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/uuid.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/colors.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/url.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/lch-color-inversion.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/mention.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/list-item.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/panel.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/text.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/unknown-block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/caption.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/media.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/media-group.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/media-inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/types/rich-media-common.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/parseDOM.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/media-single.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/editor-palette.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/tableNodes.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/decision-list.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/decision-item.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/task-list.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/task-item.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/date.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/placeholder.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/layout-section.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/layout-column.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/inline-card.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/block-card.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/unsupported-block.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/unsupported-inline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/status.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/nested-expand.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/embed-card.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/utils/extensions.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/extension.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/inline-extension.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/bodied-extension.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/nodes/multi-bodied-extension.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/groups.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/next-schema/generated/markTypes.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/em.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/code.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/strike.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/strong.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/underline.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/link.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/type-ahead-query.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/subsup.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/text-color.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/confluence-inline-comment.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/breakout.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/alignment.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/indentation.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/annotation.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/unsupported-mark.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/unsupported-node-attributes.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/data-consumer.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/fragment.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/border.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/marks/background-color.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/create-schema.js", "../../@atlaskit/editor-markdown-transformer/node_modules/@atlaskit/adf-schema/dist/esm/schema/default-schema.js", "../../@atlaskit/editor-markdown-transformer/dist/esm/index.js", "../../markdown-it-table/dist/es/index.js", "../../prosemirror-markdown/node_modules/markdown-it/lib/common/utils.mjs", "../../prosemirror-markdown/node_modules/mdurl/index.mjs", "../../prosemirror-markdown/node_modules/mdurl/lib/decode.mjs", "../../prosemirror-markdown/node_modules/mdurl/lib/encode.mjs", "../../prosemirror-markdown/node_modules/mdurl/lib/format.mjs", "../../prosemirror-markdown/node_modules/mdurl/lib/parse.mjs", "../../prosemirror-markdown/node_modules/uc.micro/index.mjs", "../../prosemirror-markdown/node_modules/uc.micro/properties/Any/regex.mjs", "../../prosemirror-markdown/node_modules/uc.micro/categories/Cc/regex.mjs", "../../prosemirror-markdown/node_modules/uc.micro/categories/Cf/regex.mjs", "../../prosemirror-markdown/node_modules/uc.micro/categories/P/regex.mjs", "../../prosemirror-markdown/node_modules/uc.micro/categories/S/regex.mjs", "../../prosemirror-markdown/node_modules/uc.micro/categories/Z/regex.mjs", "../../entities/lib/esm/generated/generated/decode-data-html.ts", "../../entities/lib/esm/generated/generated/decode-data-xml.ts", "../../entities/lib/esm/decode_codepoint.ts", "../../entities/lib/esm/decode.ts", "../../entities/lib/esm/generated/generated/encode-html.ts", "../../entities/lib/esm/escape.ts", "../../entities/lib/esm/index.ts", "../../prosemirror-markdown/node_modules/markdown-it/lib/helpers/index.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/helpers/parse_link_label.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/helpers/parse_link_destination.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/helpers/parse_link_title.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/renderer.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/ruler.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/token.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/state_core.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/normalize.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/block.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/inline.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/linkify.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/replacements.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/smartquotes.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_core/text_join.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/parser_core.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/state_block.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/table.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/code.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/fence.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/blockquote.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/hr.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/list.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/reference.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/common/html_blocks.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/common/html_re.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/html_block.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/heading.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/lheading.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_block/paragraph.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/parser_block.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/state_inline.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/text.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/linkify.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/newline.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/escape.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/backticks.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/strikethrough.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/emphasis.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/link.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/image.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/autolink.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/html_inline.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/entity.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/rules_inline/fragments_join.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/parser_inline.mjs", "../../prosemirror-markdown/node_modules/linkify-it/lib/re.mjs", "../../prosemirror-markdown/node_modules/linkify-it/index.mjs", "../../punycode.js/punycode.es6.js", "../../prosemirror-markdown/node_modules/markdown-it/lib/presets/default.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/presets/zero.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/presets/commonmark.mjs", "../../prosemirror-markdown/node_modules/markdown-it/lib/index.mjs", "../../prosemirror-markdown/dist/index.js", "../../@babel/runtime/helpers/esm/arrayWithoutHoles.js", "../../@babel/runtime/helpers/esm/iterableToArray.js", "../../@babel/runtime/helpers/esm/nonIterableSpread.js", "../../@babel/runtime/helpers/esm/toConsumableArray.js", "../../@atlaskit/editor-markdown-transformer/dist/esm/media.js"],
  "sourcesContent": ["{\"Aacute\":\"Á\",\"aacute\":\"á\",\"Abreve\":\"Ă\",\"abreve\":\"ă\",\"ac\":\"∾\",\"acd\":\"∿\",\"acE\":\"∾̳\",\"Acirc\":\"Â\",\"acirc\":\"â\",\"acute\":\"´\",\"Acy\":\"А\",\"acy\":\"а\",\"AElig\":\"Æ\",\"aelig\":\"æ\",\"af\":\"⁡\",\"Afr\":\"𝔄\",\"afr\":\"𝔞\",\"Agrave\":\"À\",\"agrave\":\"à\",\"alefsym\":\"ℵ\",\"aleph\":\"ℵ\",\"Alpha\":\"Α\",\"alpha\":\"α\",\"Amacr\":\"Ā\",\"amacr\":\"ā\",\"amalg\":\"⨿\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"⩕\",\"And\":\"⩓\",\"and\":\"∧\",\"andd\":\"⩜\",\"andslope\":\"⩘\",\"andv\":\"⩚\",\"ang\":\"∠\",\"ange\":\"⦤\",\"angle\":\"∠\",\"angmsdaa\":\"⦨\",\"angmsdab\":\"⦩\",\"angmsdac\":\"⦪\",\"angmsdad\":\"⦫\",\"angmsdae\":\"⦬\",\"angmsdaf\":\"⦭\",\"angmsdag\":\"⦮\",\"angmsdah\":\"⦯\",\"angmsd\":\"∡\",\"angrt\":\"∟\",\"angrtvb\":\"⊾\",\"angrtvbd\":\"⦝\",\"angsph\":\"∢\",\"angst\":\"Å\",\"angzarr\":\"⍼\",\"Aogon\":\"Ą\",\"aogon\":\"ą\",\"Aopf\":\"𝔸\",\"aopf\":\"𝕒\",\"apacir\":\"⩯\",\"ap\":\"≈\",\"apE\":\"⩰\",\"ape\":\"≊\",\"apid\":\"≋\",\"apos\":\"'\",\"ApplyFunction\":\"⁡\",\"approx\":\"≈\",\"approxeq\":\"≊\",\"Aring\":\"Å\",\"aring\":\"å\",\"Ascr\":\"𝒜\",\"ascr\":\"𝒶\",\"Assign\":\"≔\",\"ast\":\"*\",\"asymp\":\"≈\",\"asympeq\":\"≍\",\"Atilde\":\"Ã\",\"atilde\":\"ã\",\"Auml\":\"Ä\",\"auml\":\"ä\",\"awconint\":\"∳\",\"awint\":\"⨑\",\"backcong\":\"≌\",\"backepsilon\":\"϶\",\"backprime\":\"‵\",\"backsim\":\"∽\",\"backsimeq\":\"⋍\",\"Backslash\":\"∖\",\"Barv\":\"⫧\",\"barvee\":\"⊽\",\"barwed\":\"⌅\",\"Barwed\":\"⌆\",\"barwedge\":\"⌅\",\"bbrk\":\"⎵\",\"bbrktbrk\":\"⎶\",\"bcong\":\"≌\",\"Bcy\":\"Б\",\"bcy\":\"б\",\"bdquo\":\"„\",\"becaus\":\"∵\",\"because\":\"∵\",\"Because\":\"∵\",\"bemptyv\":\"⦰\",\"bepsi\":\"϶\",\"bernou\":\"ℬ\",\"Bernoullis\":\"ℬ\",\"Beta\":\"Β\",\"beta\":\"β\",\"beth\":\"ℶ\",\"between\":\"≬\",\"Bfr\":\"𝔅\",\"bfr\":\"𝔟\",\"bigcap\":\"⋂\",\"bigcirc\":\"◯\",\"bigcup\":\"⋃\",\"bigodot\":\"⨀\",\"bigoplus\":\"⨁\",\"bigotimes\":\"⨂\",\"bigsqcup\":\"⨆\",\"bigstar\":\"★\",\"bigtriangledown\":\"▽\",\"bigtriangleup\":\"△\",\"biguplus\":\"⨄\",\"bigvee\":\"⋁\",\"bigwedge\":\"⋀\",\"bkarow\":\"⤍\",\"blacklozenge\":\"⧫\",\"blacksquare\":\"▪\",\"blacktriangle\":\"▴\",\"blacktriangledown\":\"▾\",\"blacktriangleleft\":\"◂\",\"blacktriangleright\":\"▸\",\"blank\":\"␣\",\"blk12\":\"▒\",\"blk14\":\"░\",\"blk34\":\"▓\",\"block\":\"█\",\"bne\":\"=⃥\",\"bnequiv\":\"≡⃥\",\"bNot\":\"⫭\",\"bnot\":\"⌐\",\"Bopf\":\"𝔹\",\"bopf\":\"𝕓\",\"bot\":\"⊥\",\"bottom\":\"⊥\",\"bowtie\":\"⋈\",\"boxbox\":\"⧉\",\"boxdl\":\"┐\",\"boxdL\":\"╕\",\"boxDl\":\"╖\",\"boxDL\":\"╗\",\"boxdr\":\"┌\",\"boxdR\":\"╒\",\"boxDr\":\"╓\",\"boxDR\":\"╔\",\"boxh\":\"─\",\"boxH\":\"═\",\"boxhd\":\"┬\",\"boxHd\":\"╤\",\"boxhD\":\"╥\",\"boxHD\":\"╦\",\"boxhu\":\"┴\",\"boxHu\":\"╧\",\"boxhU\":\"╨\",\"boxHU\":\"╩\",\"boxminus\":\"⊟\",\"boxplus\":\"⊞\",\"boxtimes\":\"⊠\",\"boxul\":\"┘\",\"boxuL\":\"╛\",\"boxUl\":\"╜\",\"boxUL\":\"╝\",\"boxur\":\"└\",\"boxuR\":\"╘\",\"boxUr\":\"╙\",\"boxUR\":\"╚\",\"boxv\":\"│\",\"boxV\":\"║\",\"boxvh\":\"┼\",\"boxvH\":\"╪\",\"boxVh\":\"╫\",\"boxVH\":\"╬\",\"boxvl\":\"┤\",\"boxvL\":\"╡\",\"boxVl\":\"╢\",\"boxVL\":\"╣\",\"boxvr\":\"├\",\"boxvR\":\"╞\",\"boxVr\":\"╟\",\"boxVR\":\"╠\",\"bprime\":\"‵\",\"breve\":\"˘\",\"Breve\":\"˘\",\"brvbar\":\"¦\",\"bscr\":\"𝒷\",\"Bscr\":\"ℬ\",\"bsemi\":\"⁏\",\"bsim\":\"∽\",\"bsime\":\"⋍\",\"bsolb\":\"⧅\",\"bsol\":\"\\\\\",\"bsolhsub\":\"⟈\",\"bull\":\"•\",\"bullet\":\"•\",\"bump\":\"≎\",\"bumpE\":\"⪮\",\"bumpe\":\"≏\",\"Bumpeq\":\"≎\",\"bumpeq\":\"≏\",\"Cacute\":\"Ć\",\"cacute\":\"ć\",\"capand\":\"⩄\",\"capbrcup\":\"⩉\",\"capcap\":\"⩋\",\"cap\":\"∩\",\"Cap\":\"⋒\",\"capcup\":\"⩇\",\"capdot\":\"⩀\",\"CapitalDifferentialD\":\"ⅅ\",\"caps\":\"∩︀\",\"caret\":\"⁁\",\"caron\":\"ˇ\",\"Cayleys\":\"ℭ\",\"ccaps\":\"⩍\",\"Ccaron\":\"Č\",\"ccaron\":\"č\",\"Ccedil\":\"Ç\",\"ccedil\":\"ç\",\"Ccirc\":\"Ĉ\",\"ccirc\":\"ĉ\",\"Cconint\":\"∰\",\"ccups\":\"⩌\",\"ccupssm\":\"⩐\",\"Cdot\":\"Ċ\",\"cdot\":\"ċ\",\"cedil\":\"¸\",\"Cedilla\":\"¸\",\"cemptyv\":\"⦲\",\"cent\":\"¢\",\"centerdot\":\"·\",\"CenterDot\":\"·\",\"cfr\":\"𝔠\",\"Cfr\":\"ℭ\",\"CHcy\":\"Ч\",\"chcy\":\"ч\",\"check\":\"✓\",\"checkmark\":\"✓\",\"Chi\":\"Χ\",\"chi\":\"χ\",\"circ\":\"ˆ\",\"circeq\":\"≗\",\"circlearrowleft\":\"↺\",\"circlearrowright\":\"↻\",\"circledast\":\"⊛\",\"circledcirc\":\"⊚\",\"circleddash\":\"⊝\",\"CircleDot\":\"⊙\",\"circledR\":\"®\",\"circledS\":\"Ⓢ\",\"CircleMinus\":\"⊖\",\"CirclePlus\":\"⊕\",\"CircleTimes\":\"⊗\",\"cir\":\"○\",\"cirE\":\"⧃\",\"cire\":\"≗\",\"cirfnint\":\"⨐\",\"cirmid\":\"⫯\",\"cirscir\":\"⧂\",\"ClockwiseContourIntegral\":\"∲\",\"CloseCurlyDoubleQuote\":\"”\",\"CloseCurlyQuote\":\"’\",\"clubs\":\"♣\",\"clubsuit\":\"♣\",\"colon\":\":\",\"Colon\":\"∷\",\"Colone\":\"⩴\",\"colone\":\"≔\",\"coloneq\":\"≔\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"∁\",\"compfn\":\"∘\",\"complement\":\"∁\",\"complexes\":\"ℂ\",\"cong\":\"≅\",\"congdot\":\"⩭\",\"Congruent\":\"≡\",\"conint\":\"∮\",\"Conint\":\"∯\",\"ContourIntegral\":\"∮\",\"copf\":\"𝕔\",\"Copf\":\"ℂ\",\"coprod\":\"∐\",\"Coproduct\":\"∐\",\"copy\":\"©\",\"COPY\":\"©\",\"copysr\":\"℗\",\"CounterClockwiseContourIntegral\":\"∳\",\"crarr\":\"↵\",\"cross\":\"✗\",\"Cross\":\"⨯\",\"Cscr\":\"𝒞\",\"cscr\":\"𝒸\",\"csub\":\"⫏\",\"csube\":\"⫑\",\"csup\":\"⫐\",\"csupe\":\"⫒\",\"ctdot\":\"⋯\",\"cudarrl\":\"⤸\",\"cudarrr\":\"⤵\",\"cuepr\":\"⋞\",\"cuesc\":\"⋟\",\"cularr\":\"↶\",\"cularrp\":\"⤽\",\"cupbrcap\":\"⩈\",\"cupcap\":\"⩆\",\"CupCap\":\"≍\",\"cup\":\"∪\",\"Cup\":\"⋓\",\"cupcup\":\"⩊\",\"cupdot\":\"⊍\",\"cupor\":\"⩅\",\"cups\":\"∪︀\",\"curarr\":\"↷\",\"curarrm\":\"⤼\",\"curlyeqprec\":\"⋞\",\"curlyeqsucc\":\"⋟\",\"curlyvee\":\"⋎\",\"curlywedge\":\"⋏\",\"curren\":\"¤\",\"curvearrowleft\":\"↶\",\"curvearrowright\":\"↷\",\"cuvee\":\"⋎\",\"cuwed\":\"⋏\",\"cwconint\":\"∲\",\"cwint\":\"∱\",\"cylcty\":\"⌭\",\"dagger\":\"†\",\"Dagger\":\"‡\",\"daleth\":\"ℸ\",\"darr\":\"↓\",\"Darr\":\"↡\",\"dArr\":\"⇓\",\"dash\":\"‐\",\"Dashv\":\"⫤\",\"dashv\":\"⊣\",\"dbkarow\":\"⤏\",\"dblac\":\"˝\",\"Dcaron\":\"Ď\",\"dcaron\":\"ď\",\"Dcy\":\"Д\",\"dcy\":\"д\",\"ddagger\":\"‡\",\"ddarr\":\"⇊\",\"DD\":\"ⅅ\",\"dd\":\"ⅆ\",\"DDotrahd\":\"⤑\",\"ddotseq\":\"⩷\",\"deg\":\"°\",\"Del\":\"∇\",\"Delta\":\"Δ\",\"delta\":\"δ\",\"demptyv\":\"⦱\",\"dfisht\":\"⥿\",\"Dfr\":\"𝔇\",\"dfr\":\"𝔡\",\"dHar\":\"⥥\",\"dharl\":\"⇃\",\"dharr\":\"⇂\",\"DiacriticalAcute\":\"´\",\"DiacriticalDot\":\"˙\",\"DiacriticalDoubleAcute\":\"˝\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"˜\",\"diam\":\"⋄\",\"diamond\":\"⋄\",\"Diamond\":\"⋄\",\"diamondsuit\":\"♦\",\"diams\":\"♦\",\"die\":\"¨\",\"DifferentialD\":\"ⅆ\",\"digamma\":\"ϝ\",\"disin\":\"⋲\",\"div\":\"÷\",\"divide\":\"÷\",\"divideontimes\":\"⋇\",\"divonx\":\"⋇\",\"DJcy\":\"Ђ\",\"djcy\":\"ђ\",\"dlcorn\":\"⌞\",\"dlcrop\":\"⌍\",\"dollar\":\"$\",\"Dopf\":\"𝔻\",\"dopf\":\"𝕕\",\"Dot\":\"¨\",\"dot\":\"˙\",\"DotDot\":\"⃜\",\"doteq\":\"≐\",\"doteqdot\":\"≑\",\"DotEqual\":\"≐\",\"dotminus\":\"∸\",\"dotplus\":\"∔\",\"dotsquare\":\"⊡\",\"doublebarwedge\":\"⌆\",\"DoubleContourIntegral\":\"∯\",\"DoubleDot\":\"¨\",\"DoubleDownArrow\":\"⇓\",\"DoubleLeftArrow\":\"⇐\",\"DoubleLeftRightArrow\":\"⇔\",\"DoubleLeftTee\":\"⫤\",\"DoubleLongLeftArrow\":\"⟸\",\"DoubleLongLeftRightArrow\":\"⟺\",\"DoubleLongRightArrow\":\"⟹\",\"DoubleRightArrow\":\"⇒\",\"DoubleRightTee\":\"⊨\",\"DoubleUpArrow\":\"⇑\",\"DoubleUpDownArrow\":\"⇕\",\"DoubleVerticalBar\":\"∥\",\"DownArrowBar\":\"⤓\",\"downarrow\":\"↓\",\"DownArrow\":\"↓\",\"Downarrow\":\"⇓\",\"DownArrowUpArrow\":\"⇵\",\"DownBreve\":\"̑\",\"downdownarrows\":\"⇊\",\"downharpoonleft\":\"⇃\",\"downharpoonright\":\"⇂\",\"DownLeftRightVector\":\"⥐\",\"DownLeftTeeVector\":\"⥞\",\"DownLeftVectorBar\":\"⥖\",\"DownLeftVector\":\"↽\",\"DownRightTeeVector\":\"⥟\",\"DownRightVectorBar\":\"⥗\",\"DownRightVector\":\"⇁\",\"DownTeeArrow\":\"↧\",\"DownTee\":\"⊤\",\"drbkarow\":\"⤐\",\"drcorn\":\"⌟\",\"drcrop\":\"⌌\",\"Dscr\":\"𝒟\",\"dscr\":\"𝒹\",\"DScy\":\"Ѕ\",\"dscy\":\"ѕ\",\"dsol\":\"⧶\",\"Dstrok\":\"Đ\",\"dstrok\":\"đ\",\"dtdot\":\"⋱\",\"dtri\":\"▿\",\"dtrif\":\"▾\",\"duarr\":\"⇵\",\"duhar\":\"⥯\",\"dwangle\":\"⦦\",\"DZcy\":\"Џ\",\"dzcy\":\"џ\",\"dzigrarr\":\"⟿\",\"Eacute\":\"É\",\"eacute\":\"é\",\"easter\":\"⩮\",\"Ecaron\":\"Ě\",\"ecaron\":\"ě\",\"Ecirc\":\"Ê\",\"ecirc\":\"ê\",\"ecir\":\"≖\",\"ecolon\":\"≕\",\"Ecy\":\"Э\",\"ecy\":\"э\",\"eDDot\":\"⩷\",\"Edot\":\"Ė\",\"edot\":\"ė\",\"eDot\":\"≑\",\"ee\":\"ⅇ\",\"efDot\":\"≒\",\"Efr\":\"𝔈\",\"efr\":\"𝔢\",\"eg\":\"⪚\",\"Egrave\":\"È\",\"egrave\":\"è\",\"egs\":\"⪖\",\"egsdot\":\"⪘\",\"el\":\"⪙\",\"Element\":\"∈\",\"elinters\":\"⏧\",\"ell\":\"ℓ\",\"els\":\"⪕\",\"elsdot\":\"⪗\",\"Emacr\":\"Ē\",\"emacr\":\"ē\",\"empty\":\"∅\",\"emptyset\":\"∅\",\"EmptySmallSquare\":\"◻\",\"emptyv\":\"∅\",\"EmptyVerySmallSquare\":\"▫\",\"emsp13\":\" \",\"emsp14\":\" \",\"emsp\":\" \",\"ENG\":\"Ŋ\",\"eng\":\"ŋ\",\"ensp\":\" \",\"Eogon\":\"Ę\",\"eogon\":\"ę\",\"Eopf\":\"𝔼\",\"eopf\":\"𝕖\",\"epar\":\"⋕\",\"eparsl\":\"⧣\",\"eplus\":\"⩱\",\"epsi\":\"ε\",\"Epsilon\":\"Ε\",\"epsilon\":\"ε\",\"epsiv\":\"ϵ\",\"eqcirc\":\"≖\",\"eqcolon\":\"≕\",\"eqsim\":\"≂\",\"eqslantgtr\":\"⪖\",\"eqslantless\":\"⪕\",\"Equal\":\"⩵\",\"equals\":\"=\",\"EqualTilde\":\"≂\",\"equest\":\"≟\",\"Equilibrium\":\"⇌\",\"equiv\":\"≡\",\"equivDD\":\"⩸\",\"eqvparsl\":\"⧥\",\"erarr\":\"⥱\",\"erDot\":\"≓\",\"escr\":\"ℯ\",\"Escr\":\"ℰ\",\"esdot\":\"≐\",\"Esim\":\"⩳\",\"esim\":\"≂\",\"Eta\":\"Η\",\"eta\":\"η\",\"ETH\":\"Ð\",\"eth\":\"ð\",\"Euml\":\"Ë\",\"euml\":\"ë\",\"euro\":\"€\",\"excl\":\"!\",\"exist\":\"∃\",\"Exists\":\"∃\",\"expectation\":\"ℰ\",\"exponentiale\":\"ⅇ\",\"ExponentialE\":\"ⅇ\",\"fallingdotseq\":\"≒\",\"Fcy\":\"Ф\",\"fcy\":\"ф\",\"female\":\"♀\",\"ffilig\":\"ﬃ\",\"fflig\":\"ﬀ\",\"ffllig\":\"ﬄ\",\"Ffr\":\"𝔉\",\"ffr\":\"𝔣\",\"filig\":\"ﬁ\",\"FilledSmallSquare\":\"◼\",\"FilledVerySmallSquare\":\"▪\",\"fjlig\":\"fj\",\"flat\":\"♭\",\"fllig\":\"ﬂ\",\"fltns\":\"▱\",\"fnof\":\"ƒ\",\"Fopf\":\"𝔽\",\"fopf\":\"𝕗\",\"forall\":\"∀\",\"ForAll\":\"∀\",\"fork\":\"⋔\",\"forkv\":\"⫙\",\"Fouriertrf\":\"ℱ\",\"fpartint\":\"⨍\",\"frac12\":\"½\",\"frac13\":\"⅓\",\"frac14\":\"¼\",\"frac15\":\"⅕\",\"frac16\":\"⅙\",\"frac18\":\"⅛\",\"frac23\":\"⅔\",\"frac25\":\"⅖\",\"frac34\":\"¾\",\"frac35\":\"⅗\",\"frac38\":\"⅜\",\"frac45\":\"⅘\",\"frac56\":\"⅚\",\"frac58\":\"⅝\",\"frac78\":\"⅞\",\"frasl\":\"⁄\",\"frown\":\"⌢\",\"fscr\":\"𝒻\",\"Fscr\":\"ℱ\",\"gacute\":\"ǵ\",\"Gamma\":\"Γ\",\"gamma\":\"γ\",\"Gammad\":\"Ϝ\",\"gammad\":\"ϝ\",\"gap\":\"⪆\",\"Gbreve\":\"Ğ\",\"gbreve\":\"ğ\",\"Gcedil\":\"Ģ\",\"Gcirc\":\"Ĝ\",\"gcirc\":\"ĝ\",\"Gcy\":\"Г\",\"gcy\":\"г\",\"Gdot\":\"Ġ\",\"gdot\":\"ġ\",\"ge\":\"≥\",\"gE\":\"≧\",\"gEl\":\"⪌\",\"gel\":\"⋛\",\"geq\":\"≥\",\"geqq\":\"≧\",\"geqslant\":\"⩾\",\"gescc\":\"⪩\",\"ges\":\"⩾\",\"gesdot\":\"⪀\",\"gesdoto\":\"⪂\",\"gesdotol\":\"⪄\",\"gesl\":\"⋛︀\",\"gesles\":\"⪔\",\"Gfr\":\"𝔊\",\"gfr\":\"𝔤\",\"gg\":\"≫\",\"Gg\":\"⋙\",\"ggg\":\"⋙\",\"gimel\":\"ℷ\",\"GJcy\":\"Ѓ\",\"gjcy\":\"ѓ\",\"gla\":\"⪥\",\"gl\":\"≷\",\"glE\":\"⪒\",\"glj\":\"⪤\",\"gnap\":\"⪊\",\"gnapprox\":\"⪊\",\"gne\":\"⪈\",\"gnE\":\"≩\",\"gneq\":\"⪈\",\"gneqq\":\"≩\",\"gnsim\":\"⋧\",\"Gopf\":\"𝔾\",\"gopf\":\"𝕘\",\"grave\":\"`\",\"GreaterEqual\":\"≥\",\"GreaterEqualLess\":\"⋛\",\"GreaterFullEqual\":\"≧\",\"GreaterGreater\":\"⪢\",\"GreaterLess\":\"≷\",\"GreaterSlantEqual\":\"⩾\",\"GreaterTilde\":\"≳\",\"Gscr\":\"𝒢\",\"gscr\":\"ℊ\",\"gsim\":\"≳\",\"gsime\":\"⪎\",\"gsiml\":\"⪐\",\"gtcc\":\"⪧\",\"gtcir\":\"⩺\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"≫\",\"gtdot\":\"⋗\",\"gtlPar\":\"⦕\",\"gtquest\":\"⩼\",\"gtrapprox\":\"⪆\",\"gtrarr\":\"⥸\",\"gtrdot\":\"⋗\",\"gtreqless\":\"⋛\",\"gtreqqless\":\"⪌\",\"gtrless\":\"≷\",\"gtrsim\":\"≳\",\"gvertneqq\":\"≩︀\",\"gvnE\":\"≩︀\",\"Hacek\":\"ˇ\",\"hairsp\":\" \",\"half\":\"½\",\"hamilt\":\"ℋ\",\"HARDcy\":\"Ъ\",\"hardcy\":\"ъ\",\"harrcir\":\"⥈\",\"harr\":\"↔\",\"hArr\":\"⇔\",\"harrw\":\"↭\",\"Hat\":\"^\",\"hbar\":\"ℏ\",\"Hcirc\":\"Ĥ\",\"hcirc\":\"ĥ\",\"hearts\":\"♥\",\"heartsuit\":\"♥\",\"hellip\":\"…\",\"hercon\":\"⊹\",\"hfr\":\"𝔥\",\"Hfr\":\"ℌ\",\"HilbertSpace\":\"ℋ\",\"hksearow\":\"⤥\",\"hkswarow\":\"⤦\",\"hoarr\":\"⇿\",\"homtht\":\"∻\",\"hookleftarrow\":\"↩\",\"hookrightarrow\":\"↪\",\"hopf\":\"𝕙\",\"Hopf\":\"ℍ\",\"horbar\":\"―\",\"HorizontalLine\":\"─\",\"hscr\":\"𝒽\",\"Hscr\":\"ℋ\",\"hslash\":\"ℏ\",\"Hstrok\":\"Ħ\",\"hstrok\":\"ħ\",\"HumpDownHump\":\"≎\",\"HumpEqual\":\"≏\",\"hybull\":\"⁃\",\"hyphen\":\"‐\",\"Iacute\":\"Í\",\"iacute\":\"í\",\"ic\":\"⁣\",\"Icirc\":\"Î\",\"icirc\":\"î\",\"Icy\":\"И\",\"icy\":\"и\",\"Idot\":\"İ\",\"IEcy\":\"Е\",\"iecy\":\"е\",\"iexcl\":\"¡\",\"iff\":\"⇔\",\"ifr\":\"𝔦\",\"Ifr\":\"ℑ\",\"Igrave\":\"Ì\",\"igrave\":\"ì\",\"ii\":\"ⅈ\",\"iiiint\":\"⨌\",\"iiint\":\"∭\",\"iinfin\":\"⧜\",\"iiota\":\"℩\",\"IJlig\":\"Ĳ\",\"ijlig\":\"ĳ\",\"Imacr\":\"Ī\",\"imacr\":\"ī\",\"image\":\"ℑ\",\"ImaginaryI\":\"ⅈ\",\"imagline\":\"ℐ\",\"imagpart\":\"ℑ\",\"imath\":\"ı\",\"Im\":\"ℑ\",\"imof\":\"⊷\",\"imped\":\"Ƶ\",\"Implies\":\"⇒\",\"incare\":\"℅\",\"in\":\"∈\",\"infin\":\"∞\",\"infintie\":\"⧝\",\"inodot\":\"ı\",\"intcal\":\"⊺\",\"int\":\"∫\",\"Int\":\"∬\",\"integers\":\"ℤ\",\"Integral\":\"∫\",\"intercal\":\"⊺\",\"Intersection\":\"⋂\",\"intlarhk\":\"⨗\",\"intprod\":\"⨼\",\"InvisibleComma\":\"⁣\",\"InvisibleTimes\":\"⁢\",\"IOcy\":\"Ё\",\"iocy\":\"ё\",\"Iogon\":\"Į\",\"iogon\":\"į\",\"Iopf\":\"𝕀\",\"iopf\":\"𝕚\",\"Iota\":\"Ι\",\"iota\":\"ι\",\"iprod\":\"⨼\",\"iquest\":\"¿\",\"iscr\":\"𝒾\",\"Iscr\":\"ℐ\",\"isin\":\"∈\",\"isindot\":\"⋵\",\"isinE\":\"⋹\",\"isins\":\"⋴\",\"isinsv\":\"⋳\",\"isinv\":\"∈\",\"it\":\"⁢\",\"Itilde\":\"Ĩ\",\"itilde\":\"ĩ\",\"Iukcy\":\"І\",\"iukcy\":\"і\",\"Iuml\":\"Ï\",\"iuml\":\"ï\",\"Jcirc\":\"Ĵ\",\"jcirc\":\"ĵ\",\"Jcy\":\"Й\",\"jcy\":\"й\",\"Jfr\":\"𝔍\",\"jfr\":\"𝔧\",\"jmath\":\"ȷ\",\"Jopf\":\"𝕁\",\"jopf\":\"𝕛\",\"Jscr\":\"𝒥\",\"jscr\":\"𝒿\",\"Jsercy\":\"Ј\",\"jsercy\":\"ј\",\"Jukcy\":\"Є\",\"jukcy\":\"є\",\"Kappa\":\"Κ\",\"kappa\":\"κ\",\"kappav\":\"ϰ\",\"Kcedil\":\"Ķ\",\"kcedil\":\"ķ\",\"Kcy\":\"К\",\"kcy\":\"к\",\"Kfr\":\"𝔎\",\"kfr\":\"𝔨\",\"kgreen\":\"ĸ\",\"KHcy\":\"Х\",\"khcy\":\"х\",\"KJcy\":\"Ќ\",\"kjcy\":\"ќ\",\"Kopf\":\"𝕂\",\"kopf\":\"𝕜\",\"Kscr\":\"𝒦\",\"kscr\":\"𝓀\",\"lAarr\":\"⇚\",\"Lacute\":\"Ĺ\",\"lacute\":\"ĺ\",\"laemptyv\":\"⦴\",\"lagran\":\"ℒ\",\"Lambda\":\"Λ\",\"lambda\":\"λ\",\"lang\":\"⟨\",\"Lang\":\"⟪\",\"langd\":\"⦑\",\"langle\":\"⟨\",\"lap\":\"⪅\",\"Laplacetrf\":\"ℒ\",\"laquo\":\"«\",\"larrb\":\"⇤\",\"larrbfs\":\"⤟\",\"larr\":\"←\",\"Larr\":\"↞\",\"lArr\":\"⇐\",\"larrfs\":\"⤝\",\"larrhk\":\"↩\",\"larrlp\":\"↫\",\"larrpl\":\"⤹\",\"larrsim\":\"⥳\",\"larrtl\":\"↢\",\"latail\":\"⤙\",\"lAtail\":\"⤛\",\"lat\":\"⪫\",\"late\":\"⪭\",\"lates\":\"⪭︀\",\"lbarr\":\"⤌\",\"lBarr\":\"⤎\",\"lbbrk\":\"❲\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"⦋\",\"lbrksld\":\"⦏\",\"lbrkslu\":\"⦍\",\"Lcaron\":\"Ľ\",\"lcaron\":\"ľ\",\"Lcedil\":\"Ļ\",\"lcedil\":\"ļ\",\"lceil\":\"⌈\",\"lcub\":\"{\",\"Lcy\":\"Л\",\"lcy\":\"л\",\"ldca\":\"⤶\",\"ldquo\":\"“\",\"ldquor\":\"„\",\"ldrdhar\":\"⥧\",\"ldrushar\":\"⥋\",\"ldsh\":\"↲\",\"le\":\"≤\",\"lE\":\"≦\",\"LeftAngleBracket\":\"⟨\",\"LeftArrowBar\":\"⇤\",\"leftarrow\":\"←\",\"LeftArrow\":\"←\",\"Leftarrow\":\"⇐\",\"LeftArrowRightArrow\":\"⇆\",\"leftarrowtail\":\"↢\",\"LeftCeiling\":\"⌈\",\"LeftDoubleBracket\":\"⟦\",\"LeftDownTeeVector\":\"⥡\",\"LeftDownVectorBar\":\"⥙\",\"LeftDownVector\":\"⇃\",\"LeftFloor\":\"⌊\",\"leftharpoondown\":\"↽\",\"leftharpoonup\":\"↼\",\"leftleftarrows\":\"⇇\",\"leftrightarrow\":\"↔\",\"LeftRightArrow\":\"↔\",\"Leftrightarrow\":\"⇔\",\"leftrightarrows\":\"⇆\",\"leftrightharpoons\":\"⇋\",\"leftrightsquigarrow\":\"↭\",\"LeftRightVector\":\"⥎\",\"LeftTeeArrow\":\"↤\",\"LeftTee\":\"⊣\",\"LeftTeeVector\":\"⥚\",\"leftthreetimes\":\"⋋\",\"LeftTriangleBar\":\"⧏\",\"LeftTriangle\":\"⊲\",\"LeftTriangleEqual\":\"⊴\",\"LeftUpDownVector\":\"⥑\",\"LeftUpTeeVector\":\"⥠\",\"LeftUpVectorBar\":\"⥘\",\"LeftUpVector\":\"↿\",\"LeftVectorBar\":\"⥒\",\"LeftVector\":\"↼\",\"lEg\":\"⪋\",\"leg\":\"⋚\",\"leq\":\"≤\",\"leqq\":\"≦\",\"leqslant\":\"⩽\",\"lescc\":\"⪨\",\"les\":\"⩽\",\"lesdot\":\"⩿\",\"lesdoto\":\"⪁\",\"lesdotor\":\"⪃\",\"lesg\":\"⋚︀\",\"lesges\":\"⪓\",\"lessapprox\":\"⪅\",\"lessdot\":\"⋖\",\"lesseqgtr\":\"⋚\",\"lesseqqgtr\":\"⪋\",\"LessEqualGreater\":\"⋚\",\"LessFullEqual\":\"≦\",\"LessGreater\":\"≶\",\"lessgtr\":\"≶\",\"LessLess\":\"⪡\",\"lesssim\":\"≲\",\"LessSlantEqual\":\"⩽\",\"LessTilde\":\"≲\",\"lfisht\":\"⥼\",\"lfloor\":\"⌊\",\"Lfr\":\"𝔏\",\"lfr\":\"𝔩\",\"lg\":\"≶\",\"lgE\":\"⪑\",\"lHar\":\"⥢\",\"lhard\":\"↽\",\"lharu\":\"↼\",\"lharul\":\"⥪\",\"lhblk\":\"▄\",\"LJcy\":\"Љ\",\"ljcy\":\"љ\",\"llarr\":\"⇇\",\"ll\":\"≪\",\"Ll\":\"⋘\",\"llcorner\":\"⌞\",\"Lleftarrow\":\"⇚\",\"llhard\":\"⥫\",\"lltri\":\"◺\",\"Lmidot\":\"Ŀ\",\"lmidot\":\"ŀ\",\"lmoustache\":\"⎰\",\"lmoust\":\"⎰\",\"lnap\":\"⪉\",\"lnapprox\":\"⪉\",\"lne\":\"⪇\",\"lnE\":\"≨\",\"lneq\":\"⪇\",\"lneqq\":\"≨\",\"lnsim\":\"⋦\",\"loang\":\"⟬\",\"loarr\":\"⇽\",\"lobrk\":\"⟦\",\"longleftarrow\":\"⟵\",\"LongLeftArrow\":\"⟵\",\"Longleftarrow\":\"⟸\",\"longleftrightarrow\":\"⟷\",\"LongLeftRightArrow\":\"⟷\",\"Longleftrightarrow\":\"⟺\",\"longmapsto\":\"⟼\",\"longrightarrow\":\"⟶\",\"LongRightArrow\":\"⟶\",\"Longrightarrow\":\"⟹\",\"looparrowleft\":\"↫\",\"looparrowright\":\"↬\",\"lopar\":\"⦅\",\"Lopf\":\"𝕃\",\"lopf\":\"𝕝\",\"loplus\":\"⨭\",\"lotimes\":\"⨴\",\"lowast\":\"∗\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"↙\",\"LowerRightArrow\":\"↘\",\"loz\":\"◊\",\"lozenge\":\"◊\",\"lozf\":\"⧫\",\"lpar\":\"(\",\"lparlt\":\"⦓\",\"lrarr\":\"⇆\",\"lrcorner\":\"⌟\",\"lrhar\":\"⇋\",\"lrhard\":\"⥭\",\"lrm\":\"‎\",\"lrtri\":\"⊿\",\"lsaquo\":\"‹\",\"lscr\":\"𝓁\",\"Lscr\":\"ℒ\",\"lsh\":\"↰\",\"Lsh\":\"↰\",\"lsim\":\"≲\",\"lsime\":\"⪍\",\"lsimg\":\"⪏\",\"lsqb\":\"[\",\"lsquo\":\"‘\",\"lsquor\":\"‚\",\"Lstrok\":\"Ł\",\"lstrok\":\"ł\",\"ltcc\":\"⪦\",\"ltcir\":\"⩹\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"≪\",\"ltdot\":\"⋖\",\"lthree\":\"⋋\",\"ltimes\":\"⋉\",\"ltlarr\":\"⥶\",\"ltquest\":\"⩻\",\"ltri\":\"◃\",\"ltrie\":\"⊴\",\"ltrif\":\"◂\",\"ltrPar\":\"⦖\",\"lurdshar\":\"⥊\",\"luruhar\":\"⥦\",\"lvertneqq\":\"≨︀\",\"lvnE\":\"≨︀\",\"macr\":\"¯\",\"male\":\"♂\",\"malt\":\"✠\",\"maltese\":\"✠\",\"Map\":\"⤅\",\"map\":\"↦\",\"mapsto\":\"↦\",\"mapstodown\":\"↧\",\"mapstoleft\":\"↤\",\"mapstoup\":\"↥\",\"marker\":\"▮\",\"mcomma\":\"⨩\",\"Mcy\":\"М\",\"mcy\":\"м\",\"mdash\":\"—\",\"mDDot\":\"∺\",\"measuredangle\":\"∡\",\"MediumSpace\":\" \",\"Mellintrf\":\"ℳ\",\"Mfr\":\"𝔐\",\"mfr\":\"𝔪\",\"mho\":\"℧\",\"micro\":\"µ\",\"midast\":\"*\",\"midcir\":\"⫰\",\"mid\":\"∣\",\"middot\":\"·\",\"minusb\":\"⊟\",\"minus\":\"−\",\"minusd\":\"∸\",\"minusdu\":\"⨪\",\"MinusPlus\":\"∓\",\"mlcp\":\"⫛\",\"mldr\":\"…\",\"mnplus\":\"∓\",\"models\":\"⊧\",\"Mopf\":\"𝕄\",\"mopf\":\"𝕞\",\"mp\":\"∓\",\"mscr\":\"𝓂\",\"Mscr\":\"ℳ\",\"mstpos\":\"∾\",\"Mu\":\"Μ\",\"mu\":\"μ\",\"multimap\":\"⊸\",\"mumap\":\"⊸\",\"nabla\":\"∇\",\"Nacute\":\"Ń\",\"nacute\":\"ń\",\"nang\":\"∠⃒\",\"nap\":\"≉\",\"napE\":\"⩰̸\",\"napid\":\"≋̸\",\"napos\":\"ŉ\",\"napprox\":\"≉\",\"natural\":\"♮\",\"naturals\":\"ℕ\",\"natur\":\"♮\",\"nbsp\":\" \",\"nbump\":\"≎̸\",\"nbumpe\":\"≏̸\",\"ncap\":\"⩃\",\"Ncaron\":\"Ň\",\"ncaron\":\"ň\",\"Ncedil\":\"Ņ\",\"ncedil\":\"ņ\",\"ncong\":\"≇\",\"ncongdot\":\"⩭̸\",\"ncup\":\"⩂\",\"Ncy\":\"Н\",\"ncy\":\"н\",\"ndash\":\"–\",\"nearhk\":\"⤤\",\"nearr\":\"↗\",\"neArr\":\"⇗\",\"nearrow\":\"↗\",\"ne\":\"≠\",\"nedot\":\"≐̸\",\"NegativeMediumSpace\":\"​\",\"NegativeThickSpace\":\"​\",\"NegativeThinSpace\":\"​\",\"NegativeVeryThinSpace\":\"​\",\"nequiv\":\"≢\",\"nesear\":\"⤨\",\"nesim\":\"≂̸\",\"NestedGreaterGreater\":\"≫\",\"NestedLessLess\":\"≪\",\"NewLine\":\"\\n\",\"nexist\":\"∄\",\"nexists\":\"∄\",\"Nfr\":\"𝔑\",\"nfr\":\"𝔫\",\"ngE\":\"≧̸\",\"nge\":\"≱\",\"ngeq\":\"≱\",\"ngeqq\":\"≧̸\",\"ngeqslant\":\"⩾̸\",\"nges\":\"⩾̸\",\"nGg\":\"⋙̸\",\"ngsim\":\"≵\",\"nGt\":\"≫⃒\",\"ngt\":\"≯\",\"ngtr\":\"≯\",\"nGtv\":\"≫̸\",\"nharr\":\"↮\",\"nhArr\":\"⇎\",\"nhpar\":\"⫲\",\"ni\":\"∋\",\"nis\":\"⋼\",\"nisd\":\"⋺\",\"niv\":\"∋\",\"NJcy\":\"Њ\",\"njcy\":\"њ\",\"nlarr\":\"↚\",\"nlArr\":\"⇍\",\"nldr\":\"‥\",\"nlE\":\"≦̸\",\"nle\":\"≰\",\"nleftarrow\":\"↚\",\"nLeftarrow\":\"⇍\",\"nleftrightarrow\":\"↮\",\"nLeftrightarrow\":\"⇎\",\"nleq\":\"≰\",\"nleqq\":\"≦̸\",\"nleqslant\":\"⩽̸\",\"nles\":\"⩽̸\",\"nless\":\"≮\",\"nLl\":\"⋘̸\",\"nlsim\":\"≴\",\"nLt\":\"≪⃒\",\"nlt\":\"≮\",\"nltri\":\"⋪\",\"nltrie\":\"⋬\",\"nLtv\":\"≪̸\",\"nmid\":\"∤\",\"NoBreak\":\"⁠\",\"NonBreakingSpace\":\" \",\"nopf\":\"𝕟\",\"Nopf\":\"ℕ\",\"Not\":\"⫬\",\"not\":\"¬\",\"NotCongruent\":\"≢\",\"NotCupCap\":\"≭\",\"NotDoubleVerticalBar\":\"∦\",\"NotElement\":\"∉\",\"NotEqual\":\"≠\",\"NotEqualTilde\":\"≂̸\",\"NotExists\":\"∄\",\"NotGreater\":\"≯\",\"NotGreaterEqual\":\"≱\",\"NotGreaterFullEqual\":\"≧̸\",\"NotGreaterGreater\":\"≫̸\",\"NotGreaterLess\":\"≹\",\"NotGreaterSlantEqual\":\"⩾̸\",\"NotGreaterTilde\":\"≵\",\"NotHumpDownHump\":\"≎̸\",\"NotHumpEqual\":\"≏̸\",\"notin\":\"∉\",\"notindot\":\"⋵̸\",\"notinE\":\"⋹̸\",\"notinva\":\"∉\",\"notinvb\":\"⋷\",\"notinvc\":\"⋶\",\"NotLeftTriangleBar\":\"⧏̸\",\"NotLeftTriangle\":\"⋪\",\"NotLeftTriangleEqual\":\"⋬\",\"NotLess\":\"≮\",\"NotLessEqual\":\"≰\",\"NotLessGreater\":\"≸\",\"NotLessLess\":\"≪̸\",\"NotLessSlantEqual\":\"⩽̸\",\"NotLessTilde\":\"≴\",\"NotNestedGreaterGreater\":\"⪢̸\",\"NotNestedLessLess\":\"⪡̸\",\"notni\":\"∌\",\"notniva\":\"∌\",\"notnivb\":\"⋾\",\"notnivc\":\"⋽\",\"NotPrecedes\":\"⊀\",\"NotPrecedesEqual\":\"⪯̸\",\"NotPrecedesSlantEqual\":\"⋠\",\"NotReverseElement\":\"∌\",\"NotRightTriangleBar\":\"⧐̸\",\"NotRightTriangle\":\"⋫\",\"NotRightTriangleEqual\":\"⋭\",\"NotSquareSubset\":\"⊏̸\",\"NotSquareSubsetEqual\":\"⋢\",\"NotSquareSuperset\":\"⊐̸\",\"NotSquareSupersetEqual\":\"⋣\",\"NotSubset\":\"⊂⃒\",\"NotSubsetEqual\":\"⊈\",\"NotSucceeds\":\"⊁\",\"NotSucceedsEqual\":\"⪰̸\",\"NotSucceedsSlantEqual\":\"⋡\",\"NotSucceedsTilde\":\"≿̸\",\"NotSuperset\":\"⊃⃒\",\"NotSupersetEqual\":\"⊉\",\"NotTilde\":\"≁\",\"NotTildeEqual\":\"≄\",\"NotTildeFullEqual\":\"≇\",\"NotTildeTilde\":\"≉\",\"NotVerticalBar\":\"∤\",\"nparallel\":\"∦\",\"npar\":\"∦\",\"nparsl\":\"⫽⃥\",\"npart\":\"∂̸\",\"npolint\":\"⨔\",\"npr\":\"⊀\",\"nprcue\":\"⋠\",\"nprec\":\"⊀\",\"npreceq\":\"⪯̸\",\"npre\":\"⪯̸\",\"nrarrc\":\"⤳̸\",\"nrarr\":\"↛\",\"nrArr\":\"⇏\",\"nrarrw\":\"↝̸\",\"nrightarrow\":\"↛\",\"nRightarrow\":\"⇏\",\"nrtri\":\"⋫\",\"nrtrie\":\"⋭\",\"nsc\":\"⊁\",\"nsccue\":\"⋡\",\"nsce\":\"⪰̸\",\"Nscr\":\"𝒩\",\"nscr\":\"𝓃\",\"nshortmid\":\"∤\",\"nshortparallel\":\"∦\",\"nsim\":\"≁\",\"nsime\":\"≄\",\"nsimeq\":\"≄\",\"nsmid\":\"∤\",\"nspar\":\"∦\",\"nsqsube\":\"⋢\",\"nsqsupe\":\"⋣\",\"nsub\":\"⊄\",\"nsubE\":\"⫅̸\",\"nsube\":\"⊈\",\"nsubset\":\"⊂⃒\",\"nsubseteq\":\"⊈\",\"nsubseteqq\":\"⫅̸\",\"nsucc\":\"⊁\",\"nsucceq\":\"⪰̸\",\"nsup\":\"⊅\",\"nsupE\":\"⫆̸\",\"nsupe\":\"⊉\",\"nsupset\":\"⊃⃒\",\"nsupseteq\":\"⊉\",\"nsupseteqq\":\"⫆̸\",\"ntgl\":\"≹\",\"Ntilde\":\"Ñ\",\"ntilde\":\"ñ\",\"ntlg\":\"≸\",\"ntriangleleft\":\"⋪\",\"ntrianglelefteq\":\"⋬\",\"ntriangleright\":\"⋫\",\"ntrianglerighteq\":\"⋭\",\"Nu\":\"Ν\",\"nu\":\"ν\",\"num\":\"#\",\"numero\":\"№\",\"numsp\":\" \",\"nvap\":\"≍⃒\",\"nvdash\":\"⊬\",\"nvDash\":\"⊭\",\"nVdash\":\"⊮\",\"nVDash\":\"⊯\",\"nvge\":\"≥⃒\",\"nvgt\":\">⃒\",\"nvHarr\":\"⤄\",\"nvinfin\":\"⧞\",\"nvlArr\":\"⤂\",\"nvle\":\"≤⃒\",\"nvlt\":\"<⃒\",\"nvltrie\":\"⊴⃒\",\"nvrArr\":\"⤃\",\"nvrtrie\":\"⊵⃒\",\"nvsim\":\"∼⃒\",\"nwarhk\":\"⤣\",\"nwarr\":\"↖\",\"nwArr\":\"⇖\",\"nwarrow\":\"↖\",\"nwnear\":\"⤧\",\"Oacute\":\"Ó\",\"oacute\":\"ó\",\"oast\":\"⊛\",\"Ocirc\":\"Ô\",\"ocirc\":\"ô\",\"ocir\":\"⊚\",\"Ocy\":\"О\",\"ocy\":\"о\",\"odash\":\"⊝\",\"Odblac\":\"Ő\",\"odblac\":\"ő\",\"odiv\":\"⨸\",\"odot\":\"⊙\",\"odsold\":\"⦼\",\"OElig\":\"Œ\",\"oelig\":\"œ\",\"ofcir\":\"⦿\",\"Ofr\":\"𝔒\",\"ofr\":\"𝔬\",\"ogon\":\"˛\",\"Ograve\":\"Ò\",\"ograve\":\"ò\",\"ogt\":\"⧁\",\"ohbar\":\"⦵\",\"ohm\":\"Ω\",\"oint\":\"∮\",\"olarr\":\"↺\",\"olcir\":\"⦾\",\"olcross\":\"⦻\",\"oline\":\"‾\",\"olt\":\"⧀\",\"Omacr\":\"Ō\",\"omacr\":\"ō\",\"Omega\":\"Ω\",\"omega\":\"ω\",\"Omicron\":\"Ο\",\"omicron\":\"ο\",\"omid\":\"⦶\",\"ominus\":\"⊖\",\"Oopf\":\"𝕆\",\"oopf\":\"𝕠\",\"opar\":\"⦷\",\"OpenCurlyDoubleQuote\":\"“\",\"OpenCurlyQuote\":\"‘\",\"operp\":\"⦹\",\"oplus\":\"⊕\",\"orarr\":\"↻\",\"Or\":\"⩔\",\"or\":\"∨\",\"ord\":\"⩝\",\"order\":\"ℴ\",\"orderof\":\"ℴ\",\"ordf\":\"ª\",\"ordm\":\"º\",\"origof\":\"⊶\",\"oror\":\"⩖\",\"orslope\":\"⩗\",\"orv\":\"⩛\",\"oS\":\"Ⓢ\",\"Oscr\":\"𝒪\",\"oscr\":\"ℴ\",\"Oslash\":\"Ø\",\"oslash\":\"ø\",\"osol\":\"⊘\",\"Otilde\":\"Õ\",\"otilde\":\"õ\",\"otimesas\":\"⨶\",\"Otimes\":\"⨷\",\"otimes\":\"⊗\",\"Ouml\":\"Ö\",\"ouml\":\"ö\",\"ovbar\":\"⌽\",\"OverBar\":\"‾\",\"OverBrace\":\"⏞\",\"OverBracket\":\"⎴\",\"OverParenthesis\":\"⏜\",\"para\":\"¶\",\"parallel\":\"∥\",\"par\":\"∥\",\"parsim\":\"⫳\",\"parsl\":\"⫽\",\"part\":\"∂\",\"PartialD\":\"∂\",\"Pcy\":\"П\",\"pcy\":\"п\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"‰\",\"perp\":\"⊥\",\"pertenk\":\"‱\",\"Pfr\":\"𝔓\",\"pfr\":\"𝔭\",\"Phi\":\"Φ\",\"phi\":\"φ\",\"phiv\":\"ϕ\",\"phmmat\":\"ℳ\",\"phone\":\"☎\",\"Pi\":\"Π\",\"pi\":\"π\",\"pitchfork\":\"⋔\",\"piv\":\"ϖ\",\"planck\":\"ℏ\",\"planckh\":\"ℎ\",\"plankv\":\"ℏ\",\"plusacir\":\"⨣\",\"plusb\":\"⊞\",\"pluscir\":\"⨢\",\"plus\":\"+\",\"plusdo\":\"∔\",\"plusdu\":\"⨥\",\"pluse\":\"⩲\",\"PlusMinus\":\"±\",\"plusmn\":\"±\",\"plussim\":\"⨦\",\"plustwo\":\"⨧\",\"pm\":\"±\",\"Poincareplane\":\"ℌ\",\"pointint\":\"⨕\",\"popf\":\"𝕡\",\"Popf\":\"ℙ\",\"pound\":\"£\",\"prap\":\"⪷\",\"Pr\":\"⪻\",\"pr\":\"≺\",\"prcue\":\"≼\",\"precapprox\":\"⪷\",\"prec\":\"≺\",\"preccurlyeq\":\"≼\",\"Precedes\":\"≺\",\"PrecedesEqual\":\"⪯\",\"PrecedesSlantEqual\":\"≼\",\"PrecedesTilde\":\"≾\",\"preceq\":\"⪯\",\"precnapprox\":\"⪹\",\"precneqq\":\"⪵\",\"precnsim\":\"⋨\",\"pre\":\"⪯\",\"prE\":\"⪳\",\"precsim\":\"≾\",\"prime\":\"′\",\"Prime\":\"″\",\"primes\":\"ℙ\",\"prnap\":\"⪹\",\"prnE\":\"⪵\",\"prnsim\":\"⋨\",\"prod\":\"∏\",\"Product\":\"∏\",\"profalar\":\"⌮\",\"profline\":\"⌒\",\"profsurf\":\"⌓\",\"prop\":\"∝\",\"Proportional\":\"∝\",\"Proportion\":\"∷\",\"propto\":\"∝\",\"prsim\":\"≾\",\"prurel\":\"⊰\",\"Pscr\":\"𝒫\",\"pscr\":\"𝓅\",\"Psi\":\"Ψ\",\"psi\":\"ψ\",\"puncsp\":\" \",\"Qfr\":\"𝔔\",\"qfr\":\"𝔮\",\"qint\":\"⨌\",\"qopf\":\"𝕢\",\"Qopf\":\"ℚ\",\"qprime\":\"⁗\",\"Qscr\":\"𝒬\",\"qscr\":\"𝓆\",\"quaternions\":\"ℍ\",\"quatint\":\"⨖\",\"quest\":\"?\",\"questeq\":\"≟\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"⇛\",\"race\":\"∽̱\",\"Racute\":\"Ŕ\",\"racute\":\"ŕ\",\"radic\":\"√\",\"raemptyv\":\"⦳\",\"rang\":\"⟩\",\"Rang\":\"⟫\",\"rangd\":\"⦒\",\"range\":\"⦥\",\"rangle\":\"⟩\",\"raquo\":\"»\",\"rarrap\":\"⥵\",\"rarrb\":\"⇥\",\"rarrbfs\":\"⤠\",\"rarrc\":\"⤳\",\"rarr\":\"→\",\"Rarr\":\"↠\",\"rArr\":\"⇒\",\"rarrfs\":\"⤞\",\"rarrhk\":\"↪\",\"rarrlp\":\"↬\",\"rarrpl\":\"⥅\",\"rarrsim\":\"⥴\",\"Rarrtl\":\"⤖\",\"rarrtl\":\"↣\",\"rarrw\":\"↝\",\"ratail\":\"⤚\",\"rAtail\":\"⤜\",\"ratio\":\"∶\",\"rationals\":\"ℚ\",\"rbarr\":\"⤍\",\"rBarr\":\"⤏\",\"RBarr\":\"⤐\",\"rbbrk\":\"❳\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"⦌\",\"rbrksld\":\"⦎\",\"rbrkslu\":\"⦐\",\"Rcaron\":\"Ř\",\"rcaron\":\"ř\",\"Rcedil\":\"Ŗ\",\"rcedil\":\"ŗ\",\"rceil\":\"⌉\",\"rcub\":\"}\",\"Rcy\":\"Р\",\"rcy\":\"р\",\"rdca\":\"⤷\",\"rdldhar\":\"⥩\",\"rdquo\":\"”\",\"rdquor\":\"”\",\"rdsh\":\"↳\",\"real\":\"ℜ\",\"realine\":\"ℛ\",\"realpart\":\"ℜ\",\"reals\":\"ℝ\",\"Re\":\"ℜ\",\"rect\":\"▭\",\"reg\":\"®\",\"REG\":\"®\",\"ReverseElement\":\"∋\",\"ReverseEquilibrium\":\"⇋\",\"ReverseUpEquilibrium\":\"⥯\",\"rfisht\":\"⥽\",\"rfloor\":\"⌋\",\"rfr\":\"𝔯\",\"Rfr\":\"ℜ\",\"rHar\":\"⥤\",\"rhard\":\"⇁\",\"rharu\":\"⇀\",\"rharul\":\"⥬\",\"Rho\":\"Ρ\",\"rho\":\"ρ\",\"rhov\":\"ϱ\",\"RightAngleBracket\":\"⟩\",\"RightArrowBar\":\"⇥\",\"rightarrow\":\"→\",\"RightArrow\":\"→\",\"Rightarrow\":\"⇒\",\"RightArrowLeftArrow\":\"⇄\",\"rightarrowtail\":\"↣\",\"RightCeiling\":\"⌉\",\"RightDoubleBracket\":\"⟧\",\"RightDownTeeVector\":\"⥝\",\"RightDownVectorBar\":\"⥕\",\"RightDownVector\":\"⇂\",\"RightFloor\":\"⌋\",\"rightharpoondown\":\"⇁\",\"rightharpoonup\":\"⇀\",\"rightleftarrows\":\"⇄\",\"rightleftharpoons\":\"⇌\",\"rightrightarrows\":\"⇉\",\"rightsquigarrow\":\"↝\",\"RightTeeArrow\":\"↦\",\"RightTee\":\"⊢\",\"RightTeeVector\":\"⥛\",\"rightthreetimes\":\"⋌\",\"RightTriangleBar\":\"⧐\",\"RightTriangle\":\"⊳\",\"RightTriangleEqual\":\"⊵\",\"RightUpDownVector\":\"⥏\",\"RightUpTeeVector\":\"⥜\",\"RightUpVectorBar\":\"⥔\",\"RightUpVector\":\"↾\",\"RightVectorBar\":\"⥓\",\"RightVector\":\"⇀\",\"ring\":\"˚\",\"risingdotseq\":\"≓\",\"rlarr\":\"⇄\",\"rlhar\":\"⇌\",\"rlm\":\"‏\",\"rmoustache\":\"⎱\",\"rmoust\":\"⎱\",\"rnmid\":\"⫮\",\"roang\":\"⟭\",\"roarr\":\"⇾\",\"robrk\":\"⟧\",\"ropar\":\"⦆\",\"ropf\":\"𝕣\",\"Ropf\":\"ℝ\",\"roplus\":\"⨮\",\"rotimes\":\"⨵\",\"RoundImplies\":\"⥰\",\"rpar\":\")\",\"rpargt\":\"⦔\",\"rppolint\":\"⨒\",\"rrarr\":\"⇉\",\"Rrightarrow\":\"⇛\",\"rsaquo\":\"›\",\"rscr\":\"𝓇\",\"Rscr\":\"ℛ\",\"rsh\":\"↱\",\"Rsh\":\"↱\",\"rsqb\":\"]\",\"rsquo\":\"’\",\"rsquor\":\"’\",\"rthree\":\"⋌\",\"rtimes\":\"⋊\",\"rtri\":\"▹\",\"rtrie\":\"⊵\",\"rtrif\":\"▸\",\"rtriltri\":\"⧎\",\"RuleDelayed\":\"⧴\",\"ruluhar\":\"⥨\",\"rx\":\"℞\",\"Sacute\":\"Ś\",\"sacute\":\"ś\",\"sbquo\":\"‚\",\"scap\":\"⪸\",\"Scaron\":\"Š\",\"scaron\":\"š\",\"Sc\":\"⪼\",\"sc\":\"≻\",\"sccue\":\"≽\",\"sce\":\"⪰\",\"scE\":\"⪴\",\"Scedil\":\"Ş\",\"scedil\":\"ş\",\"Scirc\":\"Ŝ\",\"scirc\":\"ŝ\",\"scnap\":\"⪺\",\"scnE\":\"⪶\",\"scnsim\":\"⋩\",\"scpolint\":\"⨓\",\"scsim\":\"≿\",\"Scy\":\"С\",\"scy\":\"с\",\"sdotb\":\"⊡\",\"sdot\":\"⋅\",\"sdote\":\"⩦\",\"searhk\":\"⤥\",\"searr\":\"↘\",\"seArr\":\"⇘\",\"searrow\":\"↘\",\"sect\":\"§\",\"semi\":\";\",\"seswar\":\"⤩\",\"setminus\":\"∖\",\"setmn\":\"∖\",\"sext\":\"✶\",\"Sfr\":\"𝔖\",\"sfr\":\"𝔰\",\"sfrown\":\"⌢\",\"sharp\":\"♯\",\"SHCHcy\":\"Щ\",\"shchcy\":\"щ\",\"SHcy\":\"Ш\",\"shcy\":\"ш\",\"ShortDownArrow\":\"↓\",\"ShortLeftArrow\":\"←\",\"shortmid\":\"∣\",\"shortparallel\":\"∥\",\"ShortRightArrow\":\"→\",\"ShortUpArrow\":\"↑\",\"shy\":\"­\",\"Sigma\":\"Σ\",\"sigma\":\"σ\",\"sigmaf\":\"ς\",\"sigmav\":\"ς\",\"sim\":\"∼\",\"simdot\":\"⩪\",\"sime\":\"≃\",\"simeq\":\"≃\",\"simg\":\"⪞\",\"simgE\":\"⪠\",\"siml\":\"⪝\",\"simlE\":\"⪟\",\"simne\":\"≆\",\"simplus\":\"⨤\",\"simrarr\":\"⥲\",\"slarr\":\"←\",\"SmallCircle\":\"∘\",\"smallsetminus\":\"∖\",\"smashp\":\"⨳\",\"smeparsl\":\"⧤\",\"smid\":\"∣\",\"smile\":\"⌣\",\"smt\":\"⪪\",\"smte\":\"⪬\",\"smtes\":\"⪬︀\",\"SOFTcy\":\"Ь\",\"softcy\":\"ь\",\"solbar\":\"⌿\",\"solb\":\"⧄\",\"sol\":\"/\",\"Sopf\":\"𝕊\",\"sopf\":\"𝕤\",\"spades\":\"♠\",\"spadesuit\":\"♠\",\"spar\":\"∥\",\"sqcap\":\"⊓\",\"sqcaps\":\"⊓︀\",\"sqcup\":\"⊔\",\"sqcups\":\"⊔︀\",\"Sqrt\":\"√\",\"sqsub\":\"⊏\",\"sqsube\":\"⊑\",\"sqsubset\":\"⊏\",\"sqsubseteq\":\"⊑\",\"sqsup\":\"⊐\",\"sqsupe\":\"⊒\",\"sqsupset\":\"⊐\",\"sqsupseteq\":\"⊒\",\"square\":\"□\",\"Square\":\"□\",\"SquareIntersection\":\"⊓\",\"SquareSubset\":\"⊏\",\"SquareSubsetEqual\":\"⊑\",\"SquareSuperset\":\"⊐\",\"SquareSupersetEqual\":\"⊒\",\"SquareUnion\":\"⊔\",\"squarf\":\"▪\",\"squ\":\"□\",\"squf\":\"▪\",\"srarr\":\"→\",\"Sscr\":\"𝒮\",\"sscr\":\"𝓈\",\"ssetmn\":\"∖\",\"ssmile\":\"⌣\",\"sstarf\":\"⋆\",\"Star\":\"⋆\",\"star\":\"☆\",\"starf\":\"★\",\"straightepsilon\":\"ϵ\",\"straightphi\":\"ϕ\",\"strns\":\"¯\",\"sub\":\"⊂\",\"Sub\":\"⋐\",\"subdot\":\"⪽\",\"subE\":\"⫅\",\"sube\":\"⊆\",\"subedot\":\"⫃\",\"submult\":\"⫁\",\"subnE\":\"⫋\",\"subne\":\"⊊\",\"subplus\":\"⪿\",\"subrarr\":\"⥹\",\"subset\":\"⊂\",\"Subset\":\"⋐\",\"subseteq\":\"⊆\",\"subseteqq\":\"⫅\",\"SubsetEqual\":\"⊆\",\"subsetneq\":\"⊊\",\"subsetneqq\":\"⫋\",\"subsim\":\"⫇\",\"subsub\":\"⫕\",\"subsup\":\"⫓\",\"succapprox\":\"⪸\",\"succ\":\"≻\",\"succcurlyeq\":\"≽\",\"Succeeds\":\"≻\",\"SucceedsEqual\":\"⪰\",\"SucceedsSlantEqual\":\"≽\",\"SucceedsTilde\":\"≿\",\"succeq\":\"⪰\",\"succnapprox\":\"⪺\",\"succneqq\":\"⪶\",\"succnsim\":\"⋩\",\"succsim\":\"≿\",\"SuchThat\":\"∋\",\"sum\":\"∑\",\"Sum\":\"∑\",\"sung\":\"♪\",\"sup1\":\"¹\",\"sup2\":\"²\",\"sup3\":\"³\",\"sup\":\"⊃\",\"Sup\":\"⋑\",\"supdot\":\"⪾\",\"supdsub\":\"⫘\",\"supE\":\"⫆\",\"supe\":\"⊇\",\"supedot\":\"⫄\",\"Superset\":\"⊃\",\"SupersetEqual\":\"⊇\",\"suphsol\":\"⟉\",\"suphsub\":\"⫗\",\"suplarr\":\"⥻\",\"supmult\":\"⫂\",\"supnE\":\"⫌\",\"supne\":\"⊋\",\"supplus\":\"⫀\",\"supset\":\"⊃\",\"Supset\":\"⋑\",\"supseteq\":\"⊇\",\"supseteqq\":\"⫆\",\"supsetneq\":\"⊋\",\"supsetneqq\":\"⫌\",\"supsim\":\"⫈\",\"supsub\":\"⫔\",\"supsup\":\"⫖\",\"swarhk\":\"⤦\",\"swarr\":\"↙\",\"swArr\":\"⇙\",\"swarrow\":\"↙\",\"swnwar\":\"⤪\",\"szlig\":\"ß\",\"Tab\":\"\\t\",\"target\":\"⌖\",\"Tau\":\"Τ\",\"tau\":\"τ\",\"tbrk\":\"⎴\",\"Tcaron\":\"Ť\",\"tcaron\":\"ť\",\"Tcedil\":\"Ţ\",\"tcedil\":\"ţ\",\"Tcy\":\"Т\",\"tcy\":\"т\",\"tdot\":\"⃛\",\"telrec\":\"⌕\",\"Tfr\":\"𝔗\",\"tfr\":\"𝔱\",\"there4\":\"∴\",\"therefore\":\"∴\",\"Therefore\":\"∴\",\"Theta\":\"Θ\",\"theta\":\"θ\",\"thetasym\":\"ϑ\",\"thetav\":\"ϑ\",\"thickapprox\":\"≈\",\"thicksim\":\"∼\",\"ThickSpace\":\"  \",\"ThinSpace\":\" \",\"thinsp\":\" \",\"thkap\":\"≈\",\"thksim\":\"∼\",\"THORN\":\"Þ\",\"thorn\":\"þ\",\"tilde\":\"˜\",\"Tilde\":\"∼\",\"TildeEqual\":\"≃\",\"TildeFullEqual\":\"≅\",\"TildeTilde\":\"≈\",\"timesbar\":\"⨱\",\"timesb\":\"⊠\",\"times\":\"×\",\"timesd\":\"⨰\",\"tint\":\"∭\",\"toea\":\"⤨\",\"topbot\":\"⌶\",\"topcir\":\"⫱\",\"top\":\"⊤\",\"Topf\":\"𝕋\",\"topf\":\"𝕥\",\"topfork\":\"⫚\",\"tosa\":\"⤩\",\"tprime\":\"‴\",\"trade\":\"™\",\"TRADE\":\"™\",\"triangle\":\"▵\",\"triangledown\":\"▿\",\"triangleleft\":\"◃\",\"trianglelefteq\":\"⊴\",\"triangleq\":\"≜\",\"triangleright\":\"▹\",\"trianglerighteq\":\"⊵\",\"tridot\":\"◬\",\"trie\":\"≜\",\"triminus\":\"⨺\",\"TripleDot\":\"⃛\",\"triplus\":\"⨹\",\"trisb\":\"⧍\",\"tritime\":\"⨻\",\"trpezium\":\"⏢\",\"Tscr\":\"𝒯\",\"tscr\":\"𝓉\",\"TScy\":\"Ц\",\"tscy\":\"ц\",\"TSHcy\":\"Ћ\",\"tshcy\":\"ћ\",\"Tstrok\":\"Ŧ\",\"tstrok\":\"ŧ\",\"twixt\":\"≬\",\"twoheadleftarrow\":\"↞\",\"twoheadrightarrow\":\"↠\",\"Uacute\":\"Ú\",\"uacute\":\"ú\",\"uarr\":\"↑\",\"Uarr\":\"↟\",\"uArr\":\"⇑\",\"Uarrocir\":\"⥉\",\"Ubrcy\":\"Ў\",\"ubrcy\":\"ў\",\"Ubreve\":\"Ŭ\",\"ubreve\":\"ŭ\",\"Ucirc\":\"Û\",\"ucirc\":\"û\",\"Ucy\":\"У\",\"ucy\":\"у\",\"udarr\":\"⇅\",\"Udblac\":\"Ű\",\"udblac\":\"ű\",\"udhar\":\"⥮\",\"ufisht\":\"⥾\",\"Ufr\":\"𝔘\",\"ufr\":\"𝔲\",\"Ugrave\":\"Ù\",\"ugrave\":\"ù\",\"uHar\":\"⥣\",\"uharl\":\"↿\",\"uharr\":\"↾\",\"uhblk\":\"▀\",\"ulcorn\":\"⌜\",\"ulcorner\":\"⌜\",\"ulcrop\":\"⌏\",\"ultri\":\"◸\",\"Umacr\":\"Ū\",\"umacr\":\"ū\",\"uml\":\"¨\",\"UnderBar\":\"_\",\"UnderBrace\":\"⏟\",\"UnderBracket\":\"⎵\",\"UnderParenthesis\":\"⏝\",\"Union\":\"⋃\",\"UnionPlus\":\"⊎\",\"Uogon\":\"Ų\",\"uogon\":\"ų\",\"Uopf\":\"𝕌\",\"uopf\":\"𝕦\",\"UpArrowBar\":\"⤒\",\"uparrow\":\"↑\",\"UpArrow\":\"↑\",\"Uparrow\":\"⇑\",\"UpArrowDownArrow\":\"⇅\",\"updownarrow\":\"↕\",\"UpDownArrow\":\"↕\",\"Updownarrow\":\"⇕\",\"UpEquilibrium\":\"⥮\",\"upharpoonleft\":\"↿\",\"upharpoonright\":\"↾\",\"uplus\":\"⊎\",\"UpperLeftArrow\":\"↖\",\"UpperRightArrow\":\"↗\",\"upsi\":\"υ\",\"Upsi\":\"ϒ\",\"upsih\":\"ϒ\",\"Upsilon\":\"Υ\",\"upsilon\":\"υ\",\"UpTeeArrow\":\"↥\",\"UpTee\":\"⊥\",\"upuparrows\":\"⇈\",\"urcorn\":\"⌝\",\"urcorner\":\"⌝\",\"urcrop\":\"⌎\",\"Uring\":\"Ů\",\"uring\":\"ů\",\"urtri\":\"◹\",\"Uscr\":\"𝒰\",\"uscr\":\"𝓊\",\"utdot\":\"⋰\",\"Utilde\":\"Ũ\",\"utilde\":\"ũ\",\"utri\":\"▵\",\"utrif\":\"▴\",\"uuarr\":\"⇈\",\"Uuml\":\"Ü\",\"uuml\":\"ü\",\"uwangle\":\"⦧\",\"vangrt\":\"⦜\",\"varepsilon\":\"ϵ\",\"varkappa\":\"ϰ\",\"varnothing\":\"∅\",\"varphi\":\"ϕ\",\"varpi\":\"ϖ\",\"varpropto\":\"∝\",\"varr\":\"↕\",\"vArr\":\"⇕\",\"varrho\":\"ϱ\",\"varsigma\":\"ς\",\"varsubsetneq\":\"⊊︀\",\"varsubsetneqq\":\"⫋︀\",\"varsupsetneq\":\"⊋︀\",\"varsupsetneqq\":\"⫌︀\",\"vartheta\":\"ϑ\",\"vartriangleleft\":\"⊲\",\"vartriangleright\":\"⊳\",\"vBar\":\"⫨\",\"Vbar\":\"⫫\",\"vBarv\":\"⫩\",\"Vcy\":\"В\",\"vcy\":\"в\",\"vdash\":\"⊢\",\"vDash\":\"⊨\",\"Vdash\":\"⊩\",\"VDash\":\"⊫\",\"Vdashl\":\"⫦\",\"veebar\":\"⊻\",\"vee\":\"∨\",\"Vee\":\"⋁\",\"veeeq\":\"≚\",\"vellip\":\"⋮\",\"verbar\":\"|\",\"Verbar\":\"‖\",\"vert\":\"|\",\"Vert\":\"‖\",\"VerticalBar\":\"∣\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"❘\",\"VerticalTilde\":\"≀\",\"VeryThinSpace\":\" \",\"Vfr\":\"𝔙\",\"vfr\":\"𝔳\",\"vltri\":\"⊲\",\"vnsub\":\"⊂⃒\",\"vnsup\":\"⊃⃒\",\"Vopf\":\"𝕍\",\"vopf\":\"𝕧\",\"vprop\":\"∝\",\"vrtri\":\"⊳\",\"Vscr\":\"𝒱\",\"vscr\":\"𝓋\",\"vsubnE\":\"⫋︀\",\"vsubne\":\"⊊︀\",\"vsupnE\":\"⫌︀\",\"vsupne\":\"⊋︀\",\"Vvdash\":\"⊪\",\"vzigzag\":\"⦚\",\"Wcirc\":\"Ŵ\",\"wcirc\":\"ŵ\",\"wedbar\":\"⩟\",\"wedge\":\"∧\",\"Wedge\":\"⋀\",\"wedgeq\":\"≙\",\"weierp\":\"℘\",\"Wfr\":\"𝔚\",\"wfr\":\"𝔴\",\"Wopf\":\"𝕎\",\"wopf\":\"𝕨\",\"wp\":\"℘\",\"wr\":\"≀\",\"wreath\":\"≀\",\"Wscr\":\"𝒲\",\"wscr\":\"𝓌\",\"xcap\":\"⋂\",\"xcirc\":\"◯\",\"xcup\":\"⋃\",\"xdtri\":\"▽\",\"Xfr\":\"𝔛\",\"xfr\":\"𝔵\",\"xharr\":\"⟷\",\"xhArr\":\"⟺\",\"Xi\":\"Ξ\",\"xi\":\"ξ\",\"xlarr\":\"⟵\",\"xlArr\":\"⟸\",\"xmap\":\"⟼\",\"xnis\":\"⋻\",\"xodot\":\"⨀\",\"Xopf\":\"𝕏\",\"xopf\":\"𝕩\",\"xoplus\":\"⨁\",\"xotime\":\"⨂\",\"xrarr\":\"⟶\",\"xrArr\":\"⟹\",\"Xscr\":\"𝒳\",\"xscr\":\"𝓍\",\"xsqcup\":\"⨆\",\"xuplus\":\"⨄\",\"xutri\":\"△\",\"xvee\":\"⋁\",\"xwedge\":\"⋀\",\"Yacute\":\"Ý\",\"yacute\":\"ý\",\"YAcy\":\"Я\",\"yacy\":\"я\",\"Ycirc\":\"Ŷ\",\"ycirc\":\"ŷ\",\"Ycy\":\"Ы\",\"ycy\":\"ы\",\"yen\":\"¥\",\"Yfr\":\"𝔜\",\"yfr\":\"𝔶\",\"YIcy\":\"Ї\",\"yicy\":\"ї\",\"Yopf\":\"𝕐\",\"yopf\":\"𝕪\",\"Yscr\":\"𝒴\",\"yscr\":\"𝓎\",\"YUcy\":\"Ю\",\"yucy\":\"ю\",\"yuml\":\"ÿ\",\"Yuml\":\"Ÿ\",\"Zacute\":\"Ź\",\"zacute\":\"ź\",\"Zcaron\":\"Ž\",\"zcaron\":\"ž\",\"Zcy\":\"З\",\"zcy\":\"з\",\"Zdot\":\"Ż\",\"zdot\":\"ż\",\"zeetrf\":\"ℨ\",\"ZeroWidthSpace\":\"​\",\"Zeta\":\"Ζ\",\"zeta\":\"ζ\",\"zfr\":\"𝔷\",\"Zfr\":\"ℨ\",\"ZHcy\":\"Ж\",\"zhcy\":\"ж\",\"zigrarr\":\"⇝\",\"zopf\":\"𝕫\",\"Zopf\":\"ℤ\",\"Zscr\":\"𝒵\",\"zscr\":\"𝓏\",\"zwj\":\"‍\",\"zwnj\":\"‌\"}\n", "// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n", "\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n", "\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n", "\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n", "'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n", "module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n", "// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n", "// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code, level,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n", "// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n", "// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n", "// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n", "'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n", "'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n", "// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n", "// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n", "// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n", "// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n", "// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n", "// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n", "// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  oldBMarks  = [];\n  oldBSCount = [];\n  oldSCount  = [];\n  oldTShift  = [];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n", "// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n", "// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ nextLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ nextLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n", "'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n", "// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n", "// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n", "// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n", "// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n", "// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n", "// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n", "// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i, prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n", "// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n", "// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n", "// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n", "// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n", "// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n", "// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n", "// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n", "// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = match[0];\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n", "// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n", "// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i, prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n", "'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n", "'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n", "// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n", "// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n", "'use strict';\n\n\nmodule.exports = require('./lib/');\n", "// Copied from https://github.com/markdown-it/markdown-it/blob/master/lib/rules_block/table.js\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60 /* ` */) {\n        if (backTicked) {\n          // make \\` close code sequence, but not open it;\n          // the reason is: `\\` is correct code block\n          backTicked = false;\n          lastBackTick = pos;\n        } else if (escapes % 2 === 0) {\n          backTicked = true;\n          lastBackTick = pos;\n        }\n      } else if (ch === 0x7c /* | */ && escapes % 2 === 0 && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c /* \\ */) {\n        escapes++;\n      } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7c /* | */ && ch !== 0x2d /* - */ && ch !== 0x3a /* : */) {\n      return false;\n    }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7c /* | */ && ch !== 0x2d /* - */ && ch !== 0x3a /* : */ && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n    if (t.charCodeAt(t.length - 1) === 0x3a /* : */) {\n        aligns.push(t.charCodeAt(0) === 0x3a /* : */ ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3a /* : */) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n\n  // token     = state.push('thead_open', 'thead', 1);\n  // token.map = [ startLine, startLine + 1 ];\n\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n    token.map = [startLine, startLine + 1];\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('paragraph_open', 'p', 1);\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.map = [startLine, startLine + 1];\n    token.children = [];\n    token = state.push('paragraph_close', 'p', -1);\n\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  // token     = state.push('thead_close', 'thead', -1);\n\n  // token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [startLine + 2, 0];\n  var oldLineMax = state.lineMax;\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) {\n      break;\n    }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n\n    for (var _i = 0, offset = 1; _i < columns.length; _i++) {\n      token = state.push('td_open', 'td', 1);\n      if (aligns[_i]) {\n        token.attrs = [['style', 'text-align:' + aligns[_i]]];\n      }\n\n      // https://github.com/markdown-it/markdown-it/blob/e6f19eab4204122e85e4a342e0c1c8486ff40c2d/lib/rules_block/state_block.js#L25\n      // bMarks => line begin offsets for fast jumps\n      // eMarks => line end offsets for fast jumps\n      // tShift => offsets of the first non-space characters (tabs not expanded)\n      // sCount => indents for each line (tabs expanded)\n\n      // Move bMarks when first char is ' ' for > to work\n      var shift = columns[_i][0] === ' ' || /^(\\d+\\.|\\*|-)$/.test(columns[_i].trim()) ? 1 : 0;\n      state.bMarks[nextLine] += offset + shift;\n      offset = (columns[_i] || '').length + (shift ? 0 : 1);\n      state.eMarks[nextLine] = state.bMarks[nextLine] + offset - 1;\n      state.lineMax = 1;\n      state.md.block.tokenize(state, nextLine, nextLine + 1);\n\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n  // token = state.push('tbody_close', 'tbody', -1);\n  state.lineMax = oldLineMax;\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/**\n * Factory method to attach custom parseDOM and/or toDOM for nodeSpec\n *\n * @example\n * createPMNodeSpecFactory<SomeNode>(node)({parseDOM: {}, toDOM: (node) => {} });\n *\n * @param nodeSpec - NodeSpec without toDom and parseDom\n * @returns A function for a node which allows the consumer to define toDom and parseDom\n */\nexport var createPMNodeSpecFactory = function createPMNodeSpecFactory(nodeSpec) {\n  return function (_ref) {\n    var parseDOM = _ref.parseDOM,\n      toDOM = _ref.toDOM,\n      toDebugString = _ref.toDebugString;\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, nodeSpec), parseDOM && {\n      parseDOM: parseDOM\n    }), toDOM && {\n      toDOM: toDOM\n    }), toDebugString && {\n      toDebugString: toDebugString\n    });\n  };\n};\n\n/**\n * Factory method to attach custom parseDOM and/or toDOM for markSpec\n *\n * @example\n * createPMMarkSpecFactory<SomeMark>(mark)({parseDOM: {}, toDOM: (mark, inline) => {} });\n *\n * @param markSpec - Markspec without toDom and parseDom\n * @returns A function for a mark which allows the consumer to define toDom and parseDom\n */\nexport var createPMMarkSpecFactory = function createPMMarkSpecFactory(markSpec) {\n  return function (_ref2) {\n    var parseDOM = _ref2.parseDOM,\n      toDOM = _ref2.toDOM,\n      toDebugString = _ref2.toDebugString;\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, markSpec), parseDOM && {\n      parseDOM: parseDOM\n    }), toDOM && {\n      toDOM: toDOM\n    }), toDebugString && {\n      toDebugString: toDebugString\n    });\n  };\n};", "/**\n * This file was automatically generated by @atlaskit/adf-schema-generator\n * DO NOT MODIFY IT BY HAND. Instead, modify the source files in \"packages/adf-schema/src/next-schema\" ,\n * and run \"yarn workspace @atlaskit/adf-schema build:schema:all\" to regenerate this file.\n */\n\nimport { createPMNodeSpecFactory } from '../../schema/createPMSpecFactory';\nexport var blockCard = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    url: {\n      default: null\n    },\n    datasource: {\n      default: null\n    },\n    width: {\n      default: null\n    },\n    layout: {\n      default: null\n    },\n    data: {\n      default: null\n    }\n  },\n  selectable: true,\n  draggable: true\n});\nexport var blockquote = createPMNodeSpecFactory({\n  content: '(paragraph | orderedList | bulletList | unsupportedBlock | codeBlock | mediaGroup | mediaSingle)+',\n  group: 'block',\n  selectable: false,\n  defining: true\n});\nexport var blockquoteLegacy = createPMNodeSpecFactory({\n  content: '(paragraph | unsupportedBlock)+',\n  group: 'block',\n  selectable: false,\n  defining: true\n});\nexport var blockquoteWithoutNestedCodeblockOrMedia = createPMNodeSpecFactory({\n  content: '(paragraph | orderedList | bulletList | unsupportedBlock)+',\n  group: 'block',\n  selectable: false,\n  defining: true\n});\nexport var bodiedExtension = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaGroup | mediaSingle | decisionList | taskList | table | blockCard | embedCard | extension | unsupportedBlock)+',\n  marks: 'dataConsumer fragment',\n  group: 'block',\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true,\n  defining: true,\n  isolating: true\n});\nexport var bodiedExtensionWithMarks = createPMNodeSpecFactory({\n  marks: 'dataConsumer fragment',\n  group: 'block',\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true,\n  defining: true,\n  isolating: true\n});\nexport var bulletList = createPMNodeSpecFactory({\n  content: 'listItem+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  selectable: false\n});\nexport var caption = createPMNodeSpecFactory({\n  content: '(hardBreak | mention | emoji | date | placeholder | inlineCard | status | text | unsupportedInline)*',\n  marks: '_',\n  selectable: false,\n  isolating: true\n});\nexport var codeBlock = createPMNodeSpecFactory({\n  content: '(text | unsupportedInline)*',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    language: {\n      default: null\n    },\n    uniqueId: {\n      default: null\n    }\n  },\n  code: true,\n  defining: true\n});\nexport var codeBlockWithNoMarks = createPMNodeSpecFactory({\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    language: {\n      default: null\n    },\n    uniqueId: {\n      default: null\n    }\n  },\n  code: true,\n  defining: true\n});\nexport var confluenceJiraIssue = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  atom: true,\n  attrs: {\n    issueKey: {\n      default: ''\n    },\n    macroId: {\n      default: null\n    },\n    schemaVersion: {\n      default: null\n    },\n    server: {\n      default: null\n    },\n    serverId: {\n      default: null\n    }\n  }\n});\nexport var confluenceUnsupportedBlock = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    cxhtml: {\n      default: null\n    }\n  }\n});\nexport var confluenceUnsupportedInline = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  atom: true,\n  attrs: {\n    cxhtml: {\n      default: null\n    }\n  }\n});\nexport var date = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    timestamp: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var dateStage0 = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    timestamp: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var decisionItem = createPMNodeSpecFactory({\n  content: 'inline*',\n  marks: '_',\n  attrs: {\n    localId: {\n      default: ''\n    },\n    state: {\n      default: 'DECIDED'\n    }\n  },\n  defining: true\n});\nexport var decisionList = createPMNodeSpecFactory({\n  content: '(decisionItem | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    localId: {\n      default: ''\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var doc = createPMNodeSpecFactory({\n  content: '(block | layoutSection | blockRootOnly)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute alignment indentation dataConsumer fragment breakout'\n});\nexport var embedCard = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    url: {\n      default: ''\n    },\n    layout: {\n      default: 'center'\n    },\n    width: {\n      default: 100\n    },\n    originalHeight: {\n      default: null\n    },\n    originalWidth: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var emoji = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    shortName: {\n      default: ''\n    },\n    id: {\n      default: ''\n    },\n    text: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var emojiStage0 = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    shortName: {\n      default: ''\n    },\n    id: {\n      default: ''\n    },\n    text: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var expand = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaGroup | mediaSingle | decisionList | taskList | table | blockCard | embedCard | extension | unsupportedBlock | nestedExpand)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute fragment dataConsumer',\n  group: 'block',\n  attrs: {\n    title: {\n      default: ''\n    },\n    __expanded: {\n      default: true\n    }\n  },\n  selectable: true,\n  isolating: true\n});\nexport var expandWithNoMark = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    title: {\n      default: ''\n    },\n    __expanded: {\n      default: true\n    }\n  },\n  selectable: true,\n  isolating: true\n});\nexport var expandWithoutNestedExpand = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaGroup | mediaSingle | decisionList | taskList | table | blockCard | embedCard | extension | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute fragment dataConsumer',\n  group: 'block',\n  attrs: {\n    title: {\n      default: ''\n    },\n    __expanded: {\n      default: true\n    }\n  },\n  selectable: true,\n  isolating: true\n});\nexport var extension = createPMNodeSpecFactory({\n  group: 'block',\n  atom: true,\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var extensionWithMarks = createPMNodeSpecFactory({\n  group: 'block',\n  atom: true,\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var extensionFrameStage0 = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaGroup | mediaSingle | decisionList | taskList | table | extension | bodiedExtension | unsupportedBlock | blockCard | embedCard)+',\n  marks: 'dataConsumer fragment',\n  attrs: {},\n  selectable: false,\n  definingAsContext: false,\n  definingForContent: true,\n  isolating: true\n});\nexport var hardBreak = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  selectable: false\n});\nexport var heading = createPMNodeSpecFactory({\n  content: 'inline*',\n  group: 'block',\n  attrs: {\n    level: {\n      default: 1\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var headingWithAlignment = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    level: {\n      default: 1\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var headingWithIndentation = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    level: {\n      default: 1\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var headingWithNoMarks = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    level: {\n      default: 1\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var image = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    src: {\n      default: ''\n    },\n    alt: {\n      default: ''\n    },\n    title: {\n      default: null\n    }\n  },\n  draggable: true\n});\nexport var inlineCard = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    url: {\n      default: null\n    },\n    data: {\n      default: null\n    }\n  },\n  selectable: true,\n  draggable: true\n});\nexport var inlineCardStage0 = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    url: {\n      default: null\n    },\n    data: {\n      default: null\n    }\n  },\n  selectable: true,\n  draggable: true\n});\nexport var inlineExtension = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var inlineExtensionWithMarks = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var layoutColumn = createPMNodeSpecFactory({\n  content: '(block | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute alignment indentation dataConsumer fragment',\n  attrs: {\n    width: {\n      default: undefined\n    }\n  },\n  selectable: false,\n  isolating: true\n});\nexport var layoutSection = createPMNodeSpecFactory({\n  content: '(layoutColumn | unsupportedBlock){1,3} unsupportedBlock* | unsupportedBlock+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  isolating: true\n});\nexport var layoutSectionFull = createPMNodeSpecFactory({\n  content: '(layoutColumn | unsupportedBlock){2,3}',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  isolating: true\n});\nexport var layoutSectionWithSingleColumnStage0 = createPMNodeSpecFactory({\n  content: '(layoutColumn | unsupportedBlock){1,3}',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  isolating: true\n});\nexport var listItem = createPMNodeSpecFactory({\n  content: '(paragraph | mediaSingle | codeBlock | unsupportedBlock) (paragraph | bulletList | orderedList | taskList | mediaSingle | codeBlock | unsupportedBlock)*',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  selectable: false,\n  defining: true\n});\nexport var listItemLegacy = createPMNodeSpecFactory({\n  content: '(paragraph | mediaSingle | codeBlock | unsupportedBlock) (paragraph | bulletList | orderedList | mediaSingle | codeBlock | unsupportedBlock)*',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  selectable: false,\n  defining: true\n});\nexport var listItemWithNestedDecisionStage0 = createPMNodeSpecFactory({\n  content: '(paragraph | mediaSingle | codeBlock | unsupportedBlock | decisionList) (paragraph | bulletList | orderedList | taskList | mediaSingle | codeBlock | unsupportedBlock | decisionList)*',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  selectable: false,\n  defining: true\n});\nexport var media = createPMNodeSpecFactory({\n  attrs: {\n    type: {\n      default: 'file'\n    },\n    id: {\n      default: ''\n    },\n    alt: {\n      default: ''\n    },\n    collection: {\n      default: ''\n    },\n    height: {\n      default: null\n    },\n    occurrenceKey: {\n      default: null\n    },\n    width: {\n      default: null\n    },\n    __contextId: {\n      default: null\n    },\n    __displayType: {\n      default: null\n    },\n    __external: {\n      default: false\n    },\n    __fileMimeType: {\n      default: null\n    },\n    __fileName: {\n      default: null\n    },\n    __fileSize: {\n      default: null\n    },\n    __mediaTraceId: {\n      default: null\n    },\n    url: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var mediaGroup = createPMNodeSpecFactory({\n  content: '(media | unsupportedBlock)+',\n  marks: 'link annotation border unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {},\n  selectable: false\n});\nexport var mediaInline = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    type: {\n      default: 'file'\n    },\n    url: {\n      default: null\n    },\n    id: {\n      default: ''\n    },\n    alt: {\n      default: ''\n    },\n    collection: {\n      default: ''\n    },\n    occurrenceKey: {\n      default: null\n    },\n    width: {\n      default: null\n    },\n    height: {\n      default: null\n    },\n    __fileName: {\n      default: null\n    },\n    __fileSize: {\n      default: null\n    },\n    __fileMimeType: {\n      default: null\n    },\n    __displayType: {\n      default: null\n    },\n    __contextId: {\n      default: null\n    },\n    __mediaTraceId: {\n      default: null\n    },\n    __external: {\n      default: false\n    }\n  },\n  selectable: true\n});\nexport var mediaSingle = createPMNodeSpecFactory({\n  group: 'block',\n  atom: true,\n  attrs: {\n    layout: {\n      default: 'center'\n    },\n    width: {\n      default: null\n    }\n  },\n  selectable: true,\n  content: 'media|unsupportedBlock+|media unsupportedBlock+',\n  marks: 'annotation border link unsupportedMark unsupportedNodeAttribute'\n});\nexport var mediaSingleCaption = createPMNodeSpecFactory({\n  content: 'media|unsupportedBlock+|media (caption|unsupportedBlock) unsupportedBlock*',\n  marks: 'link annotation border unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  atom: false,\n  attrs: {\n    layout: {\n      default: 'center'\n    },\n    width: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var mediaSingleFull = createPMNodeSpecFactory({\n  content: 'media|unsupportedBlock+|media (caption|unsupportedBlock) unsupportedBlock*',\n  marks: 'link annotation border unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  atom: false,\n  attrs: {\n    width: {\n      default: null\n    },\n    layout: {\n      default: 'center'\n    },\n    widthType: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var mediaSingleWidthType = createPMNodeSpecFactory({\n  content: 'media|unsupportedBlock+|media unsupportedBlock+',\n  marks: 'link annotation border unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  atom: true,\n  attrs: {\n    width: {\n      default: null\n    },\n    layout: {\n      default: 'center'\n    },\n    widthType: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var mention = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    id: {\n      default: ''\n    },\n    localId: {\n      default: null\n    },\n    text: {\n      default: ''\n    },\n    accessLevel: {\n      default: ''\n    },\n    userType: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var mentionStage0 = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    id: {\n      default: ''\n    },\n    localId: {\n      default: null\n    },\n    text: {\n      default: ''\n    },\n    accessLevel: {\n      default: ''\n    },\n    userType: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var multiBodiedExtensionStage0 = createPMNodeSpecFactory({\n  content: 'extensionFrame+',\n  group: 'blockRootOnly',\n  attrs: {\n    extensionKey: {\n      default: ''\n    },\n    extensionType: {\n      default: ''\n    },\n    parameters: {\n      default: null\n    },\n    text: {\n      default: null\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: null\n    }\n  },\n  selectable: true,\n  definingAsContext: true\n});\nexport var nestedExpand = createPMNodeSpecFactory({\n  content: '(paragraph | heading | mediaSingle | mediaGroup | codeBlock | bulletList | orderedList | taskList | decisionList | rule | panel | blockquote | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  attrs: {\n    title: {\n      default: ''\n    },\n    __expanded: {\n      default: true\n    }\n  },\n  selectable: true,\n  isolating: true\n});\nexport var nestedExpandWithNoMarks = createPMNodeSpecFactory({\n  attrs: {\n    title: {\n      default: ''\n    },\n    __expanded: {\n      default: true\n    }\n  },\n  selectable: true,\n  isolating: true\n});\nexport var orderedList = createPMNodeSpecFactory({\n  content: 'listItem+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    order: {\n      default: 1\n    }\n  },\n  selectable: false\n});\nexport var panel = createPMNodeSpecFactory({\n  content: '(paragraph | heading | bulletList | orderedList | blockCard | mediaGroup | mediaSingle | codeBlock | taskList | rule | decisionList | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    panelType: {\n      default: 'info'\n    },\n    panelIcon: {\n      default: null\n    },\n    panelIconId: {\n      default: null\n    },\n    panelIconText: {\n      default: null\n    },\n    panelColor: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var panelLegacy = createPMNodeSpecFactory({\n  content: '(paragraph | heading | bulletList | orderedList | blockCard | unsupportedBlock)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    panelType: {\n      default: 'info'\n    },\n    panelIcon: {\n      default: null\n    },\n    panelIconId: {\n      default: null\n    },\n    panelIconText: {\n      default: null\n    },\n    panelColor: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var panelWithNestedBlockquoteStage0 = createPMNodeSpecFactory({\n  content: '(paragraph | heading | bulletList | orderedList | blockCard | mediaGroup | mediaSingle | codeBlock | taskList | rule | decisionList | unsupportedBlock | blockquote)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    panelType: {\n      default: 'info'\n    },\n    panelIcon: {\n      default: null\n    },\n    panelIconId: {\n      default: null\n    },\n    panelIconText: {\n      default: null\n    },\n    panelColor: {\n      default: null\n    }\n  },\n  selectable: true\n});\nexport var paragraph = createPMNodeSpecFactory({\n  content: 'inline*',\n  marks: 'link em strong strike subsup underline textColor annotation backgroundColor typeAheadQuery confluenceInlineComment unsupportedNodeAttribute unsupportedMark code dataConsumer fragment border',\n  group: 'block',\n  attrs: {\n    localId: {\n      default: null\n    }\n  },\n  selectable: false\n});\nexport var paragraphWithAlignment = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    localId: {\n      default: null\n    }\n  },\n  selectable: false\n});\nexport var paragraphWithIndentation = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    localId: {\n      default: null\n    }\n  },\n  selectable: false\n});\nexport var paragraphWithNoMarks = createPMNodeSpecFactory({\n  group: 'block',\n  attrs: {\n    localId: {\n      default: null\n    }\n  },\n  selectable: false\n});\nexport var placeholder = createPMNodeSpecFactory({\n  marks: '',\n  group: 'inline',\n  inline: true,\n  attrs: {\n    text: {\n      default: ''\n    }\n  },\n  selectable: false\n});\nexport var rule = createPMNodeSpecFactory({\n  group: 'block'\n});\nexport var status = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    text: {\n      default: ''\n    },\n    color: {\n      default: ''\n    },\n    localId: {\n      default: ''\n    },\n    style: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var statusStage0 = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    text: {\n      default: ''\n    },\n    color: {\n      default: ''\n    },\n    localId: {\n      default: ''\n    },\n    style: {\n      default: ''\n    }\n  },\n  selectable: true\n});\nexport var table = createPMNodeSpecFactory({\n  content: 'tableRow+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    displayMode: {\n      default: null\n    },\n    isNumberColumnEnabled: {\n      default: false\n    },\n    layout: {\n      default: 'default'\n    },\n    localId: {\n      default: ''\n    },\n    width: {\n      default: null\n    },\n    __autoSize: {\n      default: false\n    }\n  },\n  selectable: true,\n  isolating: true,\n  tableRole: 'table'\n});\nexport var tableCell = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaSingle | mediaGroup | decisionList | taskList | blockCard | embedCard | extension | nestedExpand | unsupportedBlock)+',\n  marks: 'alignment unsupportedMark unsupportedNodeAttribute dataConsumer fragment',\n  attrs: {\n    colspan: {\n      default: 1\n    },\n    rowspan: {\n      default: 1\n    },\n    colwidth: {\n      default: null\n    },\n    background: {\n      default: null\n    }\n  },\n  selectable: false,\n  isolating: true,\n  tableRole: 'cell'\n});\nexport var tableHeader = createPMNodeSpecFactory({\n  content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaSingle | mediaGroup | decisionList | taskList | blockCard | embedCard | extension | nestedExpand)+',\n  marks: 'alignment unsupportedMark unsupportedNodeAttribute dataConsumer fragment',\n  attrs: {\n    colspan: {\n      default: 1\n    },\n    rowspan: {\n      default: 1\n    },\n    colwidth: {\n      default: null\n    },\n    background: {\n      default: null\n    }\n  },\n  selectable: false,\n  isolating: true,\n  tableRole: 'header_cell'\n});\nexport var tableRow = createPMNodeSpecFactory({\n  content: '(tableCell | tableHeader)+',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  selectable: false,\n  tableRole: 'row'\n});\nexport var taskItem = createPMNodeSpecFactory({\n  content: 'inline*',\n  marks: '_',\n  attrs: {\n    localId: {\n      default: ''\n    },\n    state: {\n      default: 'TODO'\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var taskList = createPMNodeSpecFactory({\n  content: '(taskItem | unsupportedBlock)+ (taskItem | taskList | unsupportedBlock)*',\n  marks: 'unsupportedMark unsupportedNodeAttribute',\n  group: 'block',\n  attrs: {\n    localId: {\n      default: ''\n    }\n  },\n  selectable: false,\n  defining: true\n});\nexport var text = createPMNodeSpecFactory({\n  group: 'inline'\n});\nexport var textCodeInline = createPMNodeSpecFactory({\n  group: 'inline'\n});\nexport var textFormatted = createPMNodeSpecFactory({\n  group: 'inline'\n});\nexport var unsupportedBlock = createPMNodeSpecFactory({\n  group: 'block',\n  atom: true,\n  attrs: {\n    originalValue: {\n      default: {}\n    }\n  },\n  selectable: true\n});\nexport var unsupportedInline = createPMNodeSpecFactory({\n  group: 'inline',\n  inline: true,\n  attrs: {\n    originalValue: {\n      default: {}\n    }\n  },\n  selectable: true\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { expandWithoutNestedExpand as expandWithoutNestedExpandFactory, expand as expandFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name expand_node\n */\n\n/**\n * @name expand_with_no_mark_node\n */\n\n/**\n * @name expand_with_breakout_mark_node\n */\n\nfunction getExpandAttrs(domNode) {\n  var dom = domNode;\n  return {\n    title: dom.getAttribute('data-title'),\n    __expanded: true\n  };\n}\nvar nodeSpecOptions = {\n  parseDOM: [{\n    context: 'table//',\n    tag: 'div[data-node-type=\"expand\"]',\n    getAttrs: getExpandAttrs\n  }, {\n    context: 'expand//',\n    tag: '[data-node-type=\"expand\"]',\n    skip: true\n  }, {\n    context: 'nestedExpand//',\n    tag: '[data-node-type=\"expand\"]',\n    skip: true\n  }, {\n    tag: '[data-node-type=\"nestedExpand\"] button',\n    ignore: true\n  }, {\n    tag: '[data-node-type=\"expand\"] button',\n    ignore: true\n  }, {\n    tag: 'div[data-node-type=\"expand\"]',\n    getAttrs: getExpandAttrs\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'expand',\n      'data-title': node.attrs.title,\n      'data-expanded': node.attrs.__expanded\n    };\n    return ['div', attrs, 0];\n  }\n};\nexport var expand = expandWithoutNestedExpandFactory(nodeSpecOptions);\nexport var expandWithNestedExpand = expandFactory(nodeSpecOptions);\nexport var toJSON = function toJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs).filter(function (key) {\n      return !key.startsWith('__');\n    }).reduce(function (obj, key) {\n      return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, key, node.attrs[key]));\n    }, {})\n  };\n};", "import { confluenceJiraIssue as confluenceJiraIssueFactory } from '../../next-schema/generated/nodeTypes';\nvar name = 'confluenceJiraIssue';\nexport var confluenceJiraIssue = confluenceJiraIssueFactory({\n  parseDOM: [{\n    tag: \"span[data-node-type=\\\"\".concat(name, \"\\\"]\"),\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        issueKey: dom.textContent,\n        macroId: dom.dataset && dom.dataset.macroId,\n        schemaVersion: dom.dataset && dom.dataset.schemaVersion,\n        server: dom.dataset && dom.dataset.server,\n        serverId: dom.dataset && dom.dataset.serverId\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': name,\n      'data-macro-id': node.attrs.macroId,\n      'data-schema-version': node.attrs.schemaVersion,\n      'data-server': node.attrs.server,\n      'data-server-id': node.attrs.serverId,\n      'data-jira-issue': node.attrs.issueKey\n    };\n    return ['span', attrs, node.attrs.issueKey];\n  }\n});", "import { confluenceUnsupportedBlock as confluenceUnsupportedBlockFactory } from '../../next-schema/generated/nodeTypes';\nvar name = 'confluenceUnsupportedBlock';\nexport var confluenceUnsupportedBlock = confluenceUnsupportedBlockFactory({\n  toDOM: function toDOM(node) {\n    // NOTE: This node cannot be \"contenteditable: false\". If it's the only node in a document, PM throws an error because there's nowhere to put the cursor.\n    var attrs = {\n      'data-node-type': name,\n      'data-confluence-unsupported': 'block',\n      'data-confluence-unsupported-block-cxhtml': node.attrs['cxhtml']\n    };\n    return ['div', attrs, 'Unsupported content'];\n  },\n  parseDOM: [{\n    tag: \"div[data-node-type=\\\"\".concat(name, \"\\\"]\"),\n    getAttrs: function getAttrs(dom) {\n      return {\n        cxhtml: dom.getAttribute('data-confluence-unsupported-block-cxhtml')\n      };\n    }\n  }]\n});", "import { confluenceUnsupportedInline as confluenceUnsupportedInlineFactory } from '../../next-schema/generated/nodeTypes';\nvar name = 'confluenceUnsupportedInline';\nexport var confluenceUnsupportedInline = confluenceUnsupportedInlineFactory({\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': name,\n      'data-confluence-unsupported': 'inline',\n      'data-confluence-unsupported-inline-cxhtml': node.attrs['cxhtml']\n    };\n    return ['div', attrs, 'Unsupported content'];\n  },\n  parseDOM: [{\n    tag: \"div[data-node-type=\\\"\".concat(name, \"\\\"]\"),\n    getAttrs: function getAttrs(dom) {\n      return {\n        cxhtml: dom.getAttribute('data-confluence-unsupported-inline-cxhtml')\n      };\n    }\n  }]\n});", "import { doc as docFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name doc_node\n */\n\nexport var doc = docFactory({});", "import { blockquote as blockquoteFactory } from '../../next-schema/generated/nodeTypes';\nimport { blockquoteLegacy as blockquoteLegacyFactory, blockquoteWithoutNestedCodeblockOrMedia as blockquoteWithoutNestedCodeblockOrMediaFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name blockquote_node\n */\n\nvar nodeSpecOptions = {\n  parseDOM: [{\n    tag: 'blockquote'\n  }],\n  toDOM: function toDOM() {\n    return ['blockquote', 0];\n  }\n};\nexport var blockquote = blockquoteLegacyFactory(nodeSpecOptions);\nexport var blockquoteWithNestedCodeblockOrMedia = blockquoteFactory(nodeSpecOptions);\n\n/**\n * @name blockquote_with_list_node\n */\nexport var blockquoteWithList = blockquoteWithoutNestedCodeblockOrMediaFactory({\n  parseDOM: [{\n    tag: 'blockquote'\n  }],\n  toDOM: function toDOM() {\n    return ['blockquote', 0];\n  }\n});", "import { bulletList as bulletListFactory } from '../../next-schema/generated/nodeTypes';\nexport var bulletListSelector = '.ak-ul';\nexport var bulletList = bulletListFactory({\n  parseDOM: [{\n    tag: 'ul'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      class: bulletListSelector.substr(1)\n    };\n    return ['ul', attrs, 0];\n  }\n});", "import { Fragment } from '@atlaskit/editor-prosemirror/model';\nimport { getBooleanFF } from '@atlaskit/platform-feature-flags';\nimport { codeBlock as codeBlockFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name codeBlock_node\n */\n\n/**\n * @name codeBlock_with_no_marks_node\n */\n\n/**\n * @name codeBlock_with_marks_node\n */\n\nvar getLanguageFromEditorStyle = function getLanguageFromEditorStyle(dom) {\n  return dom.getAttribute('data-language') || undefined;\n};\n\n// example of BB style:\n// <div class=\"codehilite language-javascript\"><pre><span>hello world</span><span>\\n</span></pre></div>\nvar getLanguageFromBitbucketStyle = function getLanguageFromBitbucketStyle(dom) {\n  if (dom && dom.classList.contains('codehilite')) {\n    // code block html from Bitbucket always contains an extra new line\n    return extractLanguageFromClass(dom.className);\n  }\n  return;\n};\n\n// If there is a child code element, check that for data-language\nvar getLanguageFromCode = function getLanguageFromCode(dom) {\n  var firstChild = dom.firstElementChild;\n  if (firstChild && firstChild.nodeName === 'CODE') {\n    return firstChild.getAttribute('data-language') || undefined;\n  }\n};\nvar extractLanguageFromClass = function extractLanguageFromClass(className) {\n  var languageRegex = /(?:^|\\s)language-([^\\s]+)/;\n  var result = languageRegex.exec(className);\n  if (result && result[1]) {\n    return result[1];\n  }\n  return;\n};\nvar removeLastNewLine = function removeLastNewLine(dom) {\n  var parent = dom && dom.parentElement;\n  if (parent && parent.classList.contains('codehilite')) {\n    dom.textContent = dom.textContent.replace(/\\n$/, '');\n  }\n  return dom;\n};\nfunction parseCodeFromHtml(node) {\n  var code = '';\n  node.childNodes.forEach(function (child) {\n    if (child.nodeType === Node.TEXT_NODE) {\n      // append text\n      code += child.nodeValue;\n    } else if (child.nodeType === Node.ELEMENT_NODE && child instanceof Element) {\n      var tagName = child.tagName.toLowerCase();\n      if (tagName === 'div' || tagName === 'p') {\n        // add a newline before its content, unless it's the first child to avoid leading newlines\n        if (child.previousElementSibling !== null) {\n          code += '\\n';\n        }\n      }\n      if (tagName === 'br') {\n        code += '\\n';\n      } else {\n        code += parseCodeFromHtml(child);\n      }\n    }\n  });\n  return code;\n}\nexport var codeBlock = codeBlockFactory({\n  parseDOM: [{\n    tag: 'pre',\n    preserveWhitespace: 'full',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      var language = getLanguageFromBitbucketStyle(dom.parentElement) || getLanguageFromEditorStyle(dom.parentElement) || getLanguageFromCode(dom) || dom.getAttribute('data-language');\n      dom = removeLastNewLine(dom);\n      return {\n        language: language\n      };\n    }\n  },\n  // Handle VSCode, Android Studio paste\n  // Checking `white-space: pre-wrap` is too aggressive @see ED-2627\n  {\n    tag: 'div[style]',\n    preserveWhitespace: 'full',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      if (dom.style.whiteSpace === 'pre' || dom.style.fontFamily && dom.style.fontFamily.toLowerCase().indexOf('monospace') > -1) {\n        return {};\n      }\n      return false;\n    },\n    getContent: function getContent(domNode, schema) {\n      if (getBooleanFF('platform.editor.codeblock.parsedom-divstyle-improve_5ib4n')) {\n        var _code = parseCodeFromHtml(domNode);\n        return _code ? Fragment.from(schema.text(_code)) : Fragment.empty;\n      }\n      var dom = domNode;\n      var code = Array.from(dom.children).map(function (child) {\n        return child.textContent;\n      }).filter(function (x) {\n        return x !== undefined;\n      }).join('\\n');\n      return code ? Fragment.from(schema.text(code)) : Fragment.empty;\n    }\n  },\n  // Handle GitHub/Gist paste\n  {\n    tag: 'table[style]',\n    preserveWhitespace: 'full',\n    getAttrs: function getAttrs(dom) {\n      if (dom.querySelector('td[class*=\"blob-code\"]')) {\n        return {};\n      }\n      return false;\n    }\n  }, {\n    tag: 'div.code-block',\n    preserveWhitespace: 'full',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      // TODO: ED-5604 Fix it inside `react-syntax-highlighter`\n      // Remove line numbers\n      var lineNumber = dom.querySelectorAll('.react-syntax-highlighter-line-number');\n      if (lineNumber.length > 0) {\n        // It's possible to copy without the line numbers too hence this\n        // `react-syntax-highlighter-line-number` check, so that we don't remove real code\n        lineNumber.forEach(function (line) {\n          return line.remove();\n        });\n      }\n      return {};\n    }\n  }],\n  toDOM: function toDOM(node) {\n    return ['pre', ['code', {\n      'data-language': node.attrs.language\n    }, 0]];\n  }\n});\nexport var toJSON = function toJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs).reduce(function (memo, key) {\n      if (key === 'uniqueId') {\n        return memo;\n      }\n      if (key === 'language' && node.attrs.language === null) {\n        return memo;\n      }\n      memo[key] = node.attrs[key];\n      return memo;\n    }, {})\n  };\n};", "import { hardBreak as hardBreakFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name hardBreak_node\n */\n\nexport var hardBreak = hardBreakFactory({\n  parseDOM: [{\n    tag: 'br'\n  }],\n  toDOM: function toDOM() {\n    return ['br'];\n  }\n});", "import { heading as headingFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name heading_node\n */\n\n/**\n * @name heading_with_no_marks_node\n */\n\n// Check `paragraph` node for why we are doing things like this\n/**\n * @name heading_with_alignment_node\n */\n\n/**\n * @name heading_with_indentation_node\n */\n\nvar getAttrs = function getAttrs(level) {\n  return function (domNode) {\n    var _heading$attrs, _heading$attrs$localI;\n    return {\n      level: level,\n      localId: domNode.getAttribute('data-local-id') || ((_heading$attrs = heading.attrs) === null || _heading$attrs === void 0 ? void 0 : (_heading$attrs$localI = _heading$attrs.localId) === null || _heading$attrs$localI === void 0 ? void 0 : _heading$attrs$localI.default)\n    };\n  };\n};\nexport var heading = headingFactory({\n  parseDOM: [{\n    tag: 'h1',\n    getAttrs: getAttrs(1)\n  }, {\n    tag: 'h2',\n    getAttrs: getAttrs(2)\n  }, {\n    tag: 'h3',\n    getAttrs: getAttrs(3)\n  }, {\n    tag: 'h4',\n    getAttrs: getAttrs(4)\n  }, {\n    tag: 'h5',\n    getAttrs: getAttrs(5)\n  }, {\n    tag: 'h6',\n    getAttrs: getAttrs(6)\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      level = _node$attrs.level,\n      localId = _node$attrs.localId;\n    var name = 'h' + level;\n    var attrs = localId !== undefined && localId !== null ? [{\n      'data-local-id': localId\n    }] : [];\n    return [name].concat(attrs, [0]);\n  }\n});", "import { rule as ruleFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name rule_node\n */\n\nvar hrDOM = ['hr'];\nexport var rule = ruleFactory({\n  parseDOM: [{\n    tag: 'hr'\n  }],\n  toDOM: function toDOM() {\n    return hrDOM;\n  }\n});", "import { orderedList as orderedListFactory } from '../../next-schema/generated/nodeTypes';\nexport var orderedListSelector = '.ak-ol';\nexport var orderedList = orderedListFactory({\n  parseDOM: [{\n    tag: 'ol'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      class: orderedListSelector.substr(1)\n    };\n    return ['ol', attrs, 0];\n  }\n});\n\n// resolve \"start\" to a safe, 0+ integer, otherwise return undefined\n// Note: Any changes to this function should also be made to \"resolveOrder\"\n// in packages/editor/editor-common/src/utils/list.ts\nvar resolveStart = function resolveStart(start) {\n  var num = Number(start);\n  if (Number.isNaN(num)) {\n    return;\n  }\n  if (num < 0) {\n    return;\n  }\n  return Math.floor(Math.max(num, 0));\n};\nexport var orderedListWithOrder = orderedListFactory({\n  parseDOM: [{\n    tag: 'ol',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      var startDOMAttr = dom.getAttribute('start');\n      if (startDOMAttr) {\n        var start = resolveStart(startDOMAttr);\n        if (typeof start === 'number') {\n          return {\n            order: start\n          };\n        }\n      }\n      return null;\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs;\n    var start = resolveStart(node === null || node === void 0 ? void 0 : (_node$attrs = node.attrs) === null || _node$attrs === void 0 ? void 0 : _node$attrs.order);\n    var attrs = {\n      start: typeof start === 'number' ? String(start) : undefined,\n      class: orderedListSelector.substr(1)\n    };\n    return ['ol', attrs, 0];\n  }\n});", "import { paragraph as paragraphFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name paragraph_node\n */\n\n/**\n * @name paragraph_with_no_marks_node\n */\n\n/**\n * NOTE: Need this because TS is too smart and inline everything.\n * So we need to give them separate identity.\n * Probably there's a way to solve it but that will need time and exploration.\n * // http://bit.ly/2raXFX5\n * type T1 = X | Y\n * type T2 = A | T1 | B // T2 = A | X | Y | B\n */\n\n/**\n * @name paragraph_with_alignment_node\n */\n\n/**\n * @name paragraph_with_indentation_node\n */\n\nexport var paragraph = paragraphFactory({\n  parseDOM: [{\n    tag: 'p',\n    getAttrs: function getAttrs(domNode) {\n      var _paragraph$attrs, _paragraph$attrs$loca;\n      var dom = domNode;\n      var attrs = {\n        localId: dom.getAttribute('data-local-id') || ((_paragraph$attrs = paragraph.attrs) === null || _paragraph$attrs === void 0 ? void 0 : (_paragraph$attrs$loca = _paragraph$attrs.localId) === null || _paragraph$attrs$loca === void 0 ? void 0 : _paragraph$attrs$loca.default)\n      };\n      return attrs;\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var localId = node.attrs.localId;\n    var name = 'p';\n    var attrs = localId !== undefined && localId !== null ? [{\n      'data-local-id': localId\n    }] : [];\n    return [name].concat(attrs, [0]);\n  }\n});", "// Default emoji id for Confluence glyphs that has no match to Fabric Emoji\nvar DEFAULT_EMOJI_ID = '2b50';\n\n// Default ac:name for emoticons as a fallback is `blue-star`\nvar DEFAULT_EMOJI_ACNAME = 'blue-star';\n\n// ac:hipchat-emoticon prefix when converting to Emoji ID\nvar HC_EMOTICON_PREFIX = 'atlassian-';\n\n/**\n * Confluence glyphs ac:name of <ac:emoticon /> map to new emojis\n * {\n *   [ac:name] : ['emoji-id', 'emoji-shortName', 'emoji-fallback']\n *   ...\n * }\n * Glyphs that do not map to Fabric Emoji\n * will be mapped to Emoji Id '2b50' (:star:) with preserving ac:name as shortName attribute;\n */\nvar acNameToEmojiMap = {\n  smile: ['1f642', ':slight_smile:', \"\\uD83D\\uDE42\"],\n  sad: ['1f641', ':slight_frown:', \"\\uD83D\\uDE41\"],\n  cheeky: ['1f61b', ':stuck_out_tongue:', \"\\uD83D\\uDE1B\"],\n  laugh: ['1f600', ':grinning:', \"\\uD83D\\uDE00\"],\n  wink: ['1f609', ':wink:', \"\\uD83D\\uDE09\"],\n  information: ['2139', ':information_source:', \"\\u2139\"],\n  tick: ['2705', ':white_check_mark:', \"\\u2705\"],\n  cross: ['274c', ':x:', \"\\u274C\"],\n  warning: ['26a0', ':warning:', \"\\u26A0\"],\n  plus: ['2795', ':heavy_plus_sign:', \"\\u2795\"],\n  minus: ['2796', ':heavy_minus_sign:', \"\\u2796\"],\n  question: ['2753', ':question:', \"?\"],\n  'thumbs-up': ['1f44d', ':thumbsup:', \"\\uD83D\\uDC4D\"],\n  'thumbs-down': ['1f44e', ':thumbsdown:', \"\\uD83D\\uDC4E\"],\n  'light-on': ['1f4a1', ':bulb:', \"\\uD83D\\uDCA1\"],\n  'yellow-star': ['2b50', ':star:', \"\\uD83D\\uDC9B\"],\n  'light-off': ['1f6ab', ':no_entry_sign:', \"\\uD83D\\uDEAB\"],\n  'red-star': ['2764', ':heart:', \"\\u2764\\uFE0F\"],\n  'green-star': ['1f49a', ':green_heart:', \"\\uD83D\\uDC9A\"],\n  'blue-star': ['1f499', ':blue_heart:', \"\\uD83D\\uDC99\"],\n  heart: ['2764', ':heart:', \"\\u2764\\uFE0F\"],\n  'broken-heart': ['1f494', ':broken_heart:', \"\\uD83D\\uDC94\"]\n};\nexport function acNameToEmoji(acName) {\n  var emojiData = acNameToEmojiMap[acName];\n  return emojiData ? {\n    id: emojiData[0],\n    shortName: emojiData[1],\n    text: emojiData[2]\n  } : {\n    id: DEFAULT_EMOJI_ID,\n    shortName: \":\".concat(acName, \":\"),\n    text: ''\n  };\n}\nexport function emojiIdToAcName(emojiId) {\n  var filterEmojis = function filterEmojis(acName) {\n    return acNameToEmojiMap[acName] ? acNameToEmojiMap[acName][0] === emojiId : false;\n  };\n  return Object.keys(acNameToEmojiMap).filter(filterEmojis)[0];\n}\nexport function acShortcutToEmoji(hipchatEmoticonShortName) {\n  return {\n    id: \"\".concat(HC_EMOTICON_PREFIX).concat(hipchatEmoticonShortName),\n    shortName: \":\".concat(hipchatEmoticonShortName, \":\"),\n    text: ''\n  };\n}\nfunction getAcNameFromShortName(shortName) {\n  return shortName.slice(shortName[0] === ':' ? 1 : 0, shortName[shortName.length - 1] === ':' ? -1 : shortName.length);\n}\nexport function getEmojiAcName(_ref) {\n  var id = _ref.id,\n    shortName = _ref.shortName;\n  if (DEFAULT_EMOJI_ID === id) {\n    var possibleName = getAcNameFromShortName(shortName);\n    if (possibleName in acNameToEmojiMap) {\n      return possibleName;\n    }\n  }\n  return emojiIdToAcName(id) || DEFAULT_EMOJI_ACNAME;\n}", "import { acNameToEmoji, acShortcutToEmoji } from '../../utils/confluence/emoji';\nimport { emoji as emojiFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name emoji_node\n */\n\nexport var emoji = emojiFactory({\n  parseDOM: [\n  // Handle copy/paste beautiful panel from renderer />\n  {\n    tag: 'div.ak-editor-panel__icon span',\n    ignore: true\n  }, {\n    tag: 'span[data-emoji-short-name]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        shortName: dom.getAttribute('data-emoji-short-name') || emoji.attrs.shortName.default,\n        id: dom.getAttribute('data-emoji-id') || emoji.attrs.id.default,\n        text: dom.getAttribute('data-emoji-text') || emoji.attrs.text.default\n      };\n    }\n  },\n  // Handle copy/paste from old <ac:emoticon />\n  {\n    tag: 'img[data-emoticon-name]',\n    getAttrs: function getAttrs(dom) {\n      return acNameToEmoji(dom.getAttribute('data-emoticon-name'));\n    }\n  },\n  // Handle copy/paste from old <ac:hipchat-emoticons />\n  {\n    tag: 'img[data-hipchat-emoticon]',\n    getAttrs: function getAttrs(dom) {\n      return acShortcutToEmoji(dom.getAttribute('data-hipchat-emoticon'));\n    }\n  },\n  // Handle copy/paste from bitbucket's <img class=\"emoji\" />\n  {\n    tag: 'img.emoji[data-emoji-short-name]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        shortName: dom.getAttribute('data-emoji-short-name') || emoji.attrs.shortName.default,\n        id: dom.getAttribute('data-emoji-id') || emoji.attrs.id.default,\n        text: dom.getAttribute('data-emoji-text') || emoji.attrs.text.default\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      shortName = _node$attrs.shortName,\n      id = _node$attrs.id,\n      text = _node$attrs.text;\n    var attrs = {\n      'data-emoji-short-name': shortName,\n      'data-emoji-id': id,\n      'data-emoji-text': text,\n      contenteditable: 'false'\n    };\n    return ['span', attrs, text];\n  }\n});", "import { image as imageFactory } from '../../next-schema/generated/nodeTypes';\nexport var image = imageFactory({\n  parseDOM: [{\n    tag: 'img[src^=\"data:image/\"]',\n    ignore: true\n  }, {\n    tag: 'img[src]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        src: dom.getAttribute('src'),\n        alt: dom.getAttribute('alt'),\n        title: dom.getAttribute('title')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    return ['img', node.attrs];\n  }\n});", "/* eslint-disable no-bitwise */\nexport var generateUuid = function generateUuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\n/* eslint-enable no-bitwise */\nvar staticValue = false;\nexport var uuid = {\n  setStatic: function setStatic(value) {\n    staticValue = value;\n  },\n  generate: function generate() {\n    return staticValue || generateUuid();\n  }\n};", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as namedColors from 'css-color-names';\n\n/**\n * We're avoding importing these colors from @atlaskit/theme since we\n * do not want to have react as a dependency of this package.\n * TODO: Refactor this once tokenization by Core team is ready\n * https://product-fabric.atlassian.net/browse/CS-908\n */\n\nexport var R50 = '#FFEBE6';\nexport var R75 = '#FFBDAD';\nexport var R100 = '#FF8F73';\nexport var R300 = '#FF5630';\nexport var R400 = '#DE350B';\nexport var R500 = '#BF2600';\nexport var Y50 = '#FFFAE6';\nexport var Y75 = '#FFF0B3';\nexport var Y200 = '#FFC400';\nexport var Y400 = '#FF991F';\nexport var Y500 = '#FF8B00';\nexport var G50 = '#E3FCEF';\nexport var G75 = '#ABF5D1';\nexport var G200 = '#57D9A3';\nexport var G300 = '#36B37E';\nexport var G400 = '#00875A';\nexport var G500 = '#006644';\nexport var B50 = '#DEEBFF';\nexport var B75 = '#B3D4FF';\nexport var B100 = '#4C9AFF';\nexport var B400 = '#0052CC';\nexport var B500 = '#0747A6';\nexport var L200 = '#D3F1A7';\nexport var N0 = '#FFFFFF';\nexport var N20 = '#F4F5F7';\nexport var N30 = '#EBECF0';\nexport var N40 = '#DFE1E6';\nexport var N50 = '#C1C7D0';\nexport var N60 = '#B3BAC5';\nexport var N80 = '#97A0AF';\nexport var N90 = '#8993A4';\nexport var N200 = '#6B778C';\nexport var N300 = '#5E6C84';\nexport var Neutral300 = '#DCDFE4';\nexport var N300A = '#091E4224';\nexport var N500 = '#42526E';\nexport var N600 = '#758195';\nexport var N800 = '#172B4D';\nexport var N1000 = '#172B4D';\nexport var M200 = '#FDD0EC';\nexport var O200 = '#FEDEC8';\nexport var P50 = '#EAE6FF';\nexport var P75 = '#C0B6F2';\nexport var P100 = '#998DD9';\nexport var P200 = '#DFD8FD';\nexport var P300 = '#6554C0';\nexport var P400 = '#5243AA';\nexport var P500 = '#403294';\nexport var T50 = '#E6FCFF';\nexport var T75 = '#B3F5FF';\nexport var T100 = '#79E2F2';\nexport var T200 = '#C6EDFB';\nexport var T300 = '#00B8D9';\nexport var T500 = '#008DA6';\n\n/**\n * @return String with HEX-coded color.\n */\nexport function normalizeHexColor(color, defaultColor) {\n  if (!color) {\n    return null;\n  }\n\n  // Normalize to hex\n  color = color.trim().toLowerCase();\n  if (isHex(color)) {\n    // Normalize 3-hex to 6-hex colours\n    if (color.length === 4) {\n      color = color.split('').map(function (c) {\n        return c === '#' ? '#' : \"\".concat(c).concat(c);\n      }).join('');\n    }\n  } else if (isRgb(color)) {\n    return rgbToHex(color);\n  } else {\n    // http://dev.w3.org/csswg/css-color/#named-colors\n    if (color === 'default') {\n      return null;\n    } else if (namedColors.default && namedColors.default[color]) {\n      color = namedColors.default[color];\n    } else if (namedColors && namedColors[color]) {\n      color = namedColors[color];\n    } else {\n      return null;\n    }\n  }\n  if (color === defaultColor) {\n    return null;\n  }\n  return color;\n}\n\n/**\n * Converts hex color format to rgb.\n * Works well with full hex color format and shortcut as well.\n *\n * @param hex - hex color string (#xxx, or #xxxxxx)\n */\nexport function hexToRgb(color) {\n  if (!isHex(color)) {\n    return null;\n  }\n  var colorBits = color.substring(1).split('');\n  if (colorBits.length === 3) {\n    colorBits = [colorBits[0], colorBits[0], colorBits[1], colorBits[1], colorBits[2], colorBits[2]];\n  }\n  var rgb = Number(\"0x\".concat(colorBits.join('')));\n  // eslint-disable-next-line no-bitwise\n  return \"rgb(\".concat(rgb >> 16 & 255, \",\").concat(rgb >> 8 & 255, \",\").concat(rgb & 255, \")\");\n}\n\n/**\n * Converts hex color format to rgba.\n *\n * @param hex - hex color string (#xxx, or #xxxxxx)\n */\nexport function hexToRgba(rawColor, alpha) {\n  var color = normalizeHexColor(rawColor);\n  if (!color) {\n    return null;\n  }\n  var hex2rgb = function hex2rgb(color) {\n    return color.match(/[a-z0-9]{2}/gi).map(function (hex) {\n      return parseInt(hex, 16);\n    });\n  };\n  return \"rgba(\".concat(hex2rgb(color).concat(alpha).join(','), \")\");\n}\nexport function rgbToHex(value) {\n  var matches = value.match(/(0?\\.?\\d{1,3})%?\\b/g);\n  if (matches && matches.length >= 3) {\n    var _matches$map = matches.map(Number),\n      _matches$map2 = _slicedToArray(_matches$map, 3),\n      red = _matches$map2[0],\n      green = _matches$map2[1],\n      blue = _matches$map2[2];\n    return '#' + (blue | green << 8 | red << 16 | 1 << 24).toString(16).slice(1) // eslint-disable-line no-bitwise\n    ;\n  }\n  return null;\n}\nexport function isRgb(color) {\n  return /rgba?\\(/.test(color);\n}\nexport function isHex(color) {\n  return /^#([A-Fa-f0-9]{3}){1,2}$/.test(color);\n}", "/**\n * This file has been partially duplicated in packages/linking-platform/linking-common/src/url.ts\n * Any changes made here should be mirrored there.\n * Ticket for dedeplication: https://product-fabric.atlassian.net/browse/EDM-7138\n * Ticket for fixing linkification of filename-like urls: https://product-fabric.atlassian.net/browse/EDM-7190\n */\nimport LinkifyIt from 'linkify-it';\nvar whitelistedURLPatterns = [/^https?:\\/\\//im, /^ftps?:\\/\\//im, /^gopher:\\/\\//im, /^integrity:\\/\\//im, /^file:\\/\\//im, /^smb:\\/\\//im, /^dynamicsnav:\\/\\//im, /^jamfselfservice:\\/\\//im, /^\\//im, /^mailto:/im, /^skype:/im, /^callto:/im, /^facetime:/im, /^git:/im, /^irc6?:/im, /^news:/im, /^nntp:/im, /^feed:/im, /^cvs:/im, /^svn:/im, /^mvn:/im, /^ssh:/im, /^scp:\\/\\//im, /^sftp:\\/\\//im, /^itms:/im,\n// This is not a valid notes link, but we support this pattern for backwards compatibility\n/^notes:/im, /^notes:\\/\\//im, /^hipchat:\\/\\//im,\n// This is not a valid sourcetree link, but we support this pattern for backwards compatibility\n/^sourcetree:/im, /^sourcetree:\\/\\//im, /^urn:/im, /^tel:/im, /^xmpp:/im, /^telnet:/im, /^vnc:/im, /^rdp:/im, /^whatsapp:/im, /^slack:/im, /^sips?:/im, /^magnet:/im, /^#/im];\n\n/**\n * Please notify the Editor Mobile team (Slack: #help-mobilekit) if the logic for this changes.\n */\nexport var isSafeUrl = function isSafeUrl(url) {\n  var urlTrimmed = url.trim();\n  if (urlTrimmed.length === 0) {\n    return true;\n  }\n  return whitelistedURLPatterns.some(function (p) {\n    return p.test(urlTrimmed);\n  });\n};\nexport var linkify = LinkifyIt();\nlinkify.add('sourcetree:', 'http:');\nlinkify.add('jamfselfservice:', 'http:');\nvar urlWithoutSpacesValidator = {\n  validate: /[^\\s]+/\n};\n\n// `tel:` URI spec is https://datatracker.ietf.org/doc/html/rfc3966\n// We're not validating the phone number or separators - but if there's a space it definitely isn't a valid `tel:` URI\nlinkify.add('tel:', urlWithoutSpacesValidator);\n\n// https://datatracker.ietf.org/doc/html/rfc8089\nlinkify.add('file:', urlWithoutSpacesValidator);\nlinkify.add('notes:', 'http:');\nvar tlds = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\nvar tlds2Char = 'a[cdefgilmnoqrtuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrtuvwxyz]|n[acefgilopruz]|om|p[aefghkmnrtw]|qa|r[eosuw]|s[abcdegijklmnrtuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\ntlds.push(tlds2Char);\nlinkify.tlds(tlds, false);\n\n// linkify-it mishandles closing braces on long urls, so we preference using our own regex first:\n// https://product-fabric.atlassian.net/browse/ED-13669\nexport var LINK_REGEXP = /(https?|ftp|jamfselfservice|gopher|dynamicsnav|integrity|file|smb):\\/\\/[^\\s]+/;\n\n/** Attempt to find a link match using a regex string defining a URL */\nexport var linkifyMatch = function linkifyMatch(text) {\n  if (!LINK_REGEXP.test(text)) {\n    return [];\n  }\n  var matches = [];\n  var startpos = 0;\n  var substr;\n  while (substr = text.substr(startpos)) {\n    var link = (substr.match(LINK_REGEXP) || [''])[0];\n    if (link) {\n      var index = substr.search(LINK_REGEXP);\n      var start = index >= 0 ? index + startpos : index;\n      var end = start + link.length;\n      matches.push({\n        index: start,\n        lastIndex: end,\n        raw: link,\n        url: link,\n        text: link,\n        schema: ''\n      });\n      startpos += end;\n    } else {\n      break;\n    }\n  }\n  return matches;\n};\n\n/**\n * Attempt to find a link match. Tries to use our regex search first.\n * If this doesn't match (e.g. no protocol), try using linkify-it library.\n * Returns null if url string empty or no string given, or if no match found.\n */\nexport function getLinkMatch(str) {\n  if (!str) {\n    return null;\n  }\n  // linkify-it mishandles closing braces on long urls, so we preference using our own regex first:\n  // https://product-fabric.atlassian.net/browse/ED-13669\n  var match = linkifyMatch(str);\n  if (!match.length) {\n    match = linkify.match(str);\n  }\n  return match && match[0];\n}\n\n/**\n * Adds protocol to url if needed.\n * Returns empty string if no url given or if no link match found.\n */\nexport function normalizeUrl(url) {\n  var match = getLinkMatch(url);\n  return match && match.url || '';\n}\n\n/**\n * checks if root relative link\n */\nexport function isRootRelative(url) {\n  return url.startsWith('/');\n}", "// https://en.wikipedia.org/wiki/HCL_color_space\n\n// https://en.wikipedia.org/wiki/CIE_1931_color_space#CIE_xy_chromaticity_diagram_and_the_CIE_xyY_color_space\n\n// https://en.wikipedia.org/wiki/CIELAB_color_space\n\nvar clamp = function clamp(i, min, max) {\n  return Math.round(Math.min(Math.max(i, min), max));\n};\nvar expandShorthandHex = function expandShorthandHex(input) {\n  return input.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n};\nvar rgbFromHex = function rgbFromHex(input) {\n  var fullHex = expandShorthandHex(input);\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(fullHex);\n  return result === null ? null : {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  };\n};\nvar rgbToHex = function rgbToHex(_ref) {\n  var r = _ref.r,\n    g = _ref.g,\n    b = _ref.b;\n  var convertComponent = function convertComponent(c) {\n    var cBase16 = c.toString(16);\n    return cBase16.length === 1 ? \"0\".concat(cBase16) : cBase16;\n  };\n  return \"#\".concat(convertComponent(r)).concat(convertComponent(g)).concat(convertComponent(b));\n};\nvar rgbToXyz = function rgbToXyz(rgb) {\n  var convertRgbComponent = function convertRgbComponent(c) {\n    return c > 0.04045 ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92;\n  };\n  var convertXyzComponent = function convertXyzComponent(c) {\n    return c > 0.008856452 ? Math.pow(c, 1 / 3) : c / 0.12841855 + 0.137931034;\n  };\n  var r = convertRgbComponent(rgb.r / 255);\n  var g = convertRgbComponent(rgb.g / 255);\n  var b = convertRgbComponent(rgb.b / 255);\n  return {\n    x: convertXyzComponent((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / 0.95047),\n    y: convertXyzComponent(0.2126729 * r + 0.7151522 * g + 0.072175 * b),\n    z: convertXyzComponent((0.0193339 * r + 0.119192 * g + 0.9503041 * b) / 1.08883)\n  };\n};\nvar xyzToLab = function xyzToLab(_ref2) {\n  var x = _ref2.x,\n    y = _ref2.y,\n    z = _ref2.z;\n  return {\n    l: Math.max(116 * y - 16, 0),\n    a: 500 * (x - y),\n    b: 200 * (y - z)\n  };\n};\nvar labToLch = function labToLch(_ref3) {\n  var l = _ref3.l,\n    a = _ref3.a,\n    b = _ref3.b;\n  var h = (Math.atan2(b, a) * (180 / Math.PI) + 360) % 360;\n  var c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  if (Math.round(c * 10000) === 0) h = Number.NaN;\n  return {\n    l: l,\n    c: c,\n    h: h\n  };\n};\nvar lchToLab = function lchToLab(_ref4) {\n  var l = _ref4.l,\n    c = _ref4.c,\n    h = _ref4.h;\n  var convertH = Number.isNaN(h) ? 0 : h * (Math.PI / 180);\n  return {\n    l: l,\n    a: Math.cos(convertH) * c,\n    b: Math.sin(convertH) * c\n  };\n};\nvar labToXyz = function labToXyz(_ref5) {\n  var l = _ref5.l,\n    a = _ref5.a,\n    b = _ref5.b;\n  var convertComponent = function convertComponent(c) {\n    return c > 0.206896552 ? Math.pow(c, 3) : 0.12841855 * (c - 0.137931034);\n  };\n  var y = (l + 16) / 116;\n  var x = a / 500 + y;\n  var z = y - b / 200;\n  return {\n    x: convertComponent(x) * 0.95047,\n    y: convertComponent(y),\n    z: convertComponent(z) * 1.08883\n  };\n};\nvar xyzToRgb = function xyzToRgb(_ref6) {\n  var x = _ref6.x,\n    y = _ref6.y,\n    z = _ref6.z;\n  var convertComponent = function convertComponent(c) {\n    return 255 * (c <= 0.00304 ? 12.92 * c : 1.055 * Math.pow(c, 1 / 2.4) - 0.055);\n  };\n  return {\n    r: clamp(convertComponent(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), 0, 255),\n    g: clamp(convertComponent(-0.969266 * x + 1.8760108 * y + 0.041556 * z), 0, 255),\n    b: clamp(convertComponent(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), 0, 255)\n  };\n};\nvar rgbToLch = function rgbToLch(rgb) {\n  return labToLch(xyzToLab(rgbToXyz(rgb)));\n};\nvar lchToRgb = function lchToRgb(lch) {\n  return xyzToRgb(labToXyz(lchToLab(lch)));\n};\nexport var clampLightness = function clampLightness(color, newPercent) {\n  var rgb = rgbFromHex(color);\n  if (rgb === null) {\n    return color;\n  }\n\n  // LCH (rather than HSL) gives the best results here as the L component in LCH is based on human color perception\n  var lch = rgbToLch(rgb);\n  lch.l = clamp(newPercent, 0, 100);\n  return rgbToHex(lchToRgb(lch));\n};\nvar getLightness = function getLightness(color) {\n  var rgb = rgbFromHex(color);\n  if (rgb === null) {\n    return 0;\n  }\n  var lch = rgbToLch(rgb);\n  return lch.l;\n};\nexport var getDarkModeLCHColor = function getDarkModeLCHColor(currentBackgroundColor) {\n  var lightness = getLightness(currentBackgroundColor);\n  var newLightness = Math.abs(100 - lightness);\n  return clampLightness(currentBackgroundColor, newLightness).toUpperCase();\n};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { uuid } from '../../utils';\nimport { mention as mentionFactory } from '../../next-schema/generated/nodeTypes';\nexport var USER_TYPES = /*#__PURE__*/function (USER_TYPES) {\n  USER_TYPES[\"DEFAULT\"] = \"DEFAULT\";\n  USER_TYPES[\"SPECIAL\"] = \"SPECIAL\";\n  USER_TYPES[\"APP\"] = \"APP\";\n  return USER_TYPES;\n}({});\n\n/**\n * @name mention_node\n */\n\nexport var mention = mentionFactory({\n  parseDOM: [{\n    tag: 'span[data-mention-id]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      var attrs = {\n        id: dom.getAttribute('data-mention-id') || mention.attrs.id.default,\n        text: dom.textContent || mention.attrs.text.default,\n        accessLevel: dom.getAttribute('data-access-level') || mention.attrs.accessLevel.default,\n        localId: uuid.generate()\n      };\n      var userType = dom.getAttribute('data-user-type');\n      if (USER_TYPES[userType]) {\n        attrs.userType = userType;\n      }\n      return attrs;\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      id = _node$attrs.id,\n      accessLevel = _node$attrs.accessLevel,\n      text = _node$attrs.text,\n      userType = _node$attrs.userType,\n      localId = _node$attrs.localId;\n    var attrs = {\n      'data-mention-id': id,\n      'data-access-level': accessLevel,\n      contenteditable: 'false'\n    };\n    if (localId) {\n      attrs['data-local-id'] = localId;\n    }\n    if (userType) {\n      attrs['data-user-type'] = userType;\n    }\n    return ['span', attrs, text];\n  }\n});\nvar isOptional = function isOptional(key) {\n  return ['userType', 'localId'].indexOf(key) > -1;\n};\nexport var toJSON = function toJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs).reduce(function (obj, key) {\n      if (isOptional(key) && !node.attrs[key]) {\n        return obj;\n      }\n      return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, key, node.attrs[key]));\n    }, {})\n  };\n};", "import { listItem as listItemFactory } from '../../next-schema/generated/nodeTypes';\nimport { listItemLegacy as listItemLegacyFactory } from '../../next-schema/generated/nodeTypes';\nimport { listItemWithNestedDecisionStage0 as listItemWithNestedDecisionStage0Factory } from '../../next-schema/generated/nodeTypes';\nexport var listItem = listItemLegacyFactory({\n  parseDOM: [{\n    tag: 'li'\n  }],\n  toDOM: function toDOM() {\n    return ['li', 0];\n  }\n});\n\n/**\n * @name list_item_with_task\n * @description this node allows task-list to be nested inside list-item\n */\nexport var listItemWithTask = listItemFactory({\n  parseDOM: [{\n    tag: 'li'\n  }],\n  toDOM: function toDOM() {\n    return ['li', 0];\n  }\n});\n\n/**\n * @name list_item_with_decision_stage0\n * @description this node allows decisions to be nested inside list-item\n */\nexport var listItemWithDecisionStage0 = listItemWithNestedDecisionStage0Factory({\n  parseDOM: [{\n    tag: 'li'\n  }],\n  toDOM: function toDOM() {\n    return ['li', 0];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { panel as panelFactory, panelWithNestedBlockquoteStage0 as panelWithNestedBlockquoteStage0Factory } from '../../next-schema/generated/nodeTypes';\nexport var PanelType = /*#__PURE__*/function (PanelType) {\n  PanelType[\"INFO\"] = \"info\";\n  PanelType[\"NOTE\"] = \"note\";\n  PanelType[\"TIP\"] = \"tip\";\n  PanelType[\"WARNING\"] = \"warning\";\n  PanelType[\"ERROR\"] = \"error\";\n  PanelType[\"SUCCESS\"] = \"success\";\n  PanelType[\"CUSTOM\"] = \"custom\";\n  return PanelType;\n}({});\n\n/**\n * @name panel_node\n */\n\nvar getDomAttrs = function getDomAttrs(nodeAttrs) {\n  var attrs = {\n    'data-panel-type': nodeAttrs.panelType,\n    'data-panel-icon': nodeAttrs.panelIcon,\n    'data-panel-icon-id': nodeAttrs.panelIconId,\n    'data-panel-icon-text': nodeAttrs.panelIconText,\n    'data-panel-color': nodeAttrs.panelColor\n  };\n  return attrs;\n};\nvar getParseDOMAttrs = function getParseDOMAttrs(allowCustomPanel, dom) {\n  var parseDOMAttrs = {\n    panelType: dom.getAttribute('data-panel-type')\n  };\n  if (allowCustomPanel) {\n    parseDOMAttrs = _objectSpread(_objectSpread({}, parseDOMAttrs), {}, {\n      panelIcon: dom.getAttribute('data-panel-icon'),\n      panelIconId: dom.getAttribute('data-panel-icon-id'),\n      panelIconText: dom.getAttribute('data-panel-icon-text'),\n      panelColor: dom.getAttribute('data-panel-color')\n    });\n  } else {\n    parseDOMAttrs.panelType = parseDOMAttrs.panelType === PanelType.CUSTOM ? PanelType.INFO : parseDOMAttrs.panelType;\n  }\n  return parseDOMAttrs;\n};\n\n/**\n * @name extended_panel\n * @description it allows more content to be nested as compared to panel node.\n * Specifically, it allows Media, action, code-block, rule and decision nodes in\n * addition to content allowed inside panel\n */\nexport var extendedPanel = function extendedPanel(allowCustomPanel) {\n  var panelNodeSpec = panelFactory({\n    parseDOM: [{\n      tag: 'div[data-panel-type]',\n      getAttrs: function getAttrs(dom) {\n        return getParseDOMAttrs(allowCustomPanel, dom);\n      }\n    }],\n    toDOM: function toDOM(node) {\n      var attrs = getDomAttrs(node.attrs);\n      var contentAttrs = {\n        'data-panel-content': 'true'\n      };\n      return ['div', attrs, ['div', contentAttrs, 0]];\n    }\n  });\n  return panelNodeSpec;\n};\nexport var panelWithBlockquoteStage0 = function panelWithBlockquoteStage0(allowCustomPanel) {\n  var panelNodeSpec = panelWithNestedBlockquoteStage0Factory({\n    parseDOM: [{\n      tag: 'div[data-panel-type]',\n      getAttrs: function getAttrs(dom) {\n        return getParseDOMAttrs(allowCustomPanel, dom);\n      }\n    }],\n    toDOM: function toDOM(node) {\n      var attrs = getDomAttrs(node.attrs);\n      var contentAttrs = {\n        'data-panel-content': 'true'\n      };\n      return ['div', attrs, ['div', contentAttrs, 0]];\n    }\n  });\n  return panelNodeSpec;\n};", "import { text as textFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name text_node\n */\n\nexport var text = textFactory({\n  toDebugString: process.env.NODE_ENV !== 'production' ? undefined : function () {\n    return 'text_node';\n  }\n});", "var name = 'unknownBlock';\nexport default {\n  group: 'block',\n  content: 'inline+',\n  marks: '_',\n  toDOM: function toDOM() {\n    return ['div', {\n      'data-node-type': name\n    }, 0];\n  },\n  parseDOM: [{\n    tag: \"div[data-node-type=\\\"\".concat(name, \"\\\"]\")\n  }]\n};", "import { caption as captionFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name caption_node\n */\n\nexport var caption = captionFactory({\n  parseDOM: [{\n    tag: 'figcaption[data-caption]'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      'data-caption': 'true'\n    };\n    return ['figcaption', attrs, 0];\n  }\n});", "import { N30 } from '../../utils/colors';\nimport { media as mediaFactory } from '../../next-schema/generated/nodeTypes';\nimport { mediaInline as mediaInlineFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name media_node\n */\n\nexport var defaultAttrs = mediaFactory({}).attrs;\nexport var createMediaSpec = function createMediaSpec(attributes) {\n  var inline = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var domNodeType = inline ? 'span' : 'div';\n  var nodeName = inline ? 'mediaInline' : 'media';\n  var parseDOM = [{\n    tag: \"\".concat(domNodeType, \"[data-node-type=\\\"\").concat(nodeName, \"\\\"]\"),\n    getAttrs: function getAttrs(dom) {\n      var attrs = {};\n      if (attributes) {\n        Object.keys(attributes).forEach(function (k) {\n          var key = camelCaseToKebabCase(k).replace(/^__/, '');\n          var value = dom.getAttribute(\"data-\".concat(key)) || '';\n          if (value) {\n            attrs[k] = value;\n          }\n        });\n      }\n\n      // Need to do validation & type conversion manually\n      if (attrs.__fileSize) {\n        attrs.__fileSize = +attrs.__fileSize;\n      }\n      var width = Number(attrs.width);\n      if (typeof width !== 'undefined' && !isNaN(width)) {\n        attrs.width = width;\n      }\n      var height = Number(attrs.height);\n      if (typeof height !== 'undefined' && !isNaN(height)) {\n        attrs.height = height;\n      }\n      return attrs;\n    }\n  },\n  // Don't match data URI\n  {\n    tag: 'img[src^=\"data:image\"]',\n    ignore: true\n  }];\n  var toDOM = function toDOM(node) {\n    var attrs = {\n      'data-id': node.attrs.id,\n      'data-node-type': \"\".concat(nodeName),\n      'data-type': node.attrs.type,\n      'data-collection': node.attrs.collection,\n      'data-occurrence-key': node.attrs.occurrenceKey,\n      'data-width': node.attrs.width,\n      'data-height': node.attrs.height,\n      'data-url': node.attrs.url,\n      'data-alt': node.attrs.alt,\n      // toDOM is used for static rendering as well as editor rendering. This comes into play for\n      // emails, copy/paste, etc, so the title and styling here *is* useful (despite a React-based\n      // node view being used for editing).\n      title: 'Attachment',\n      // Manually kept in sync with the style of media cards. The goal is to render a plain gray\n      // rectangle that provides an affordance for media.\n      style: \"display: inline-block; border-radius: 3px; background: \".concat(N30, \"; box-shadow: 0 1px 1px rgba(9, 30, 66, 0.2), 0 0 1px 0 rgba(9, 30, 66, 0.24);\")\n    };\n    copyPrivateAttributes(node.attrs, attrs, function (key) {\n      return \"data-\".concat(camelCaseToKebabCase(key.slice(2)));\n    });\n    return [\"\".concat(domNodeType), attrs];\n  };\n  if (inline) {\n    return mediaInlineFactory({\n      parseDOM: parseDOM,\n      toDOM: toDOM\n    });\n  }\n  return mediaFactory({\n    parseDOM: [].concat(parseDOM, [{\n      // media-inline.ts uses this same function to generate the nodespec\n      // this ensures that we don't make a media inline out of a copied image\n      // https://product-fabric.atlassian.net/browse/EDM-2996\n      tag: 'img:not(.smart-link-icon)',\n      getAttrs: function getAttrs(dom) {\n        return {\n          type: 'external',\n          url: dom.getAttribute('src') || '',\n          alt: dom.getAttribute('alt') || ''\n        };\n      }\n    }]),\n    toDOM: toDOM\n  });\n};\nexport var media = createMediaSpec(defaultAttrs, false);\nexport var camelCaseToKebabCase = function camelCaseToKebabCase(str) {\n  return str.replace(/([^A-Z]+)([A-Z])/g, function (_, x, y) {\n    return \"\".concat(x, \"-\").concat(y.toLowerCase());\n  });\n};\nexport var copyPrivateAttributes = function copyPrivateAttributes(from, to, map) {\n  if (media.attrs) {\n    Object.keys(media.attrs).forEach(function (key) {\n      if (key[0] === '_' && key[1] === '_' && from[key]) {\n        to[map ? map(key) : key] = from[key];\n      }\n    });\n  }\n};\n\n/**\n * There's no concept of optional property in ProseMirror. It sets value as `null`\n * when there's no use of any property. We are filtering out all private & optional attrs here.\n */\nvar optionalAttributes = ['occurrenceKey', 'width', 'height', 'url', 'alt'];\nvar externalOnlyAttributes = ['type', 'url', 'width', 'height', 'alt'];\nexport var toJSON = function toJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs)\n    // Strip private attributes e.g. __fileName, __fileSize, __fileMimeType, etc.\n    .filter(function (key) {\n      return !(key[0] === '_' && key[1] === '_');\n    }).reduce(function (obj, key) {\n      if (node.attrs.type === 'external' && externalOnlyAttributes.indexOf(key) === -1) {\n        return obj;\n      }\n      if (optionalAttributes.indexOf(key) > -1 && (node.attrs[key] === null || node.attrs[key] === '')) {\n        return obj;\n      }\n      if (['width', 'height'].indexOf(key) !== -1) {\n        obj[key] = Number(node.attrs[key]);\n        return obj;\n      }\n      obj[key] = node.attrs[key];\n      return obj;\n    }, {})\n  };\n};", "import { mediaGroup as mediaGroupFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name mediaGroup_node\n */\n\n// Temporary due to an existing issue in validator below:\n// https://product-fabric.atlassian.net/jira/servicedesk/projects/DTR/queues/issue/DTR-1429\n// TODO: Remove border and link marks from white list\nexport var mediaGroup = mediaGroupFactory({\n  parseDOM: [{\n    tag: 'div[data-node-type=\"mediaGroup\"]'\n  }, {\n    tag: 'div[class=\"MediaGroup\"]'\n  }],\n  toDOM: function toDOM() {\n    return ['div', {\n      'data-node-type': 'mediaGroup'\n    }, 0];\n  }\n});", "import { createMediaSpec } from './media';\nimport { mediaInline as mediaInlineFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name mediaInline_node\n */\n\nexport var mediaInline = createMediaSpec(mediaInlineFactory({}).attrs, true);", "/**\n * @description The widthType attribute is used to support fixed with media single\n */\n\nexport var WidthType = /*#__PURE__*/function (WidthType) {\n  WidthType[\"PIXEL\"] = \"pixel\";\n  WidthType[\"PERCENTAGE\"] = \"percentage\";\n  return WidthType;\n}({});", "export var isDOMElement = function isDOMElement(maybeNode) {\n  return maybeNode instanceof Node && maybeNode.nodeType === Node.ELEMENT_NODE;\n};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { WidthType } from './types/rich-media-common';\nimport { isDOMElement } from '../../utils/parseDOM';\nimport { mediaSingle as mediaSingleFactory, mediaSingleCaption as mediaSingleCaptionFactory, mediaSingleFull as mediaSingleFullFactory, mediaSingleWidthType as mediaSingleWidthTypeFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name mediaSingle_node\n * @additionalProperties true\n */\n\n/**\n * @additionalProperties true\n */\n\n/**\n * @name mediaSingle_caption_node\n */\n\n/**\n * @additionalProperties true\n */\n\n/**\n * @name mediaSingle_full_node\n */\n\nexport var defaultAttrs = {\n  width: {\n    default: null\n  },\n  // null makes small images to have original size by default\n  layout: {\n    default: 'center'\n  }\n};\nexport var mediaSingleSpec = function mediaSingleSpec(_ref) {\n  var _ref$withCaption = _ref.withCaption,\n    withCaption = _ref$withCaption === void 0 ? false : _ref$withCaption,\n    _ref$withExtendedWidt = _ref.withExtendedWidthTypes,\n    withExtendedWidthTypes = _ref$withExtendedWidt === void 0 ? false : _ref$withExtendedWidt;\n  var getAttrs = function getAttrs(dom) {\n    if (!isDOMElement(dom)) {\n      // this should never happen\n      return {\n        layout: 'center'\n      };\n    }\n    var layout = dom.getAttribute('data-layout') || 'center';\n    var width = Number(dom.getAttribute('data-width')) || null;\n    var widthType = dom.getAttribute('data-width-type');\n    if (withExtendedWidthTypes) {\n      return {\n        layout: layout,\n        width: width,\n        widthType: widthType\n      };\n    } else if (widthType === WidthType.PIXEL) {\n      // if editor does not support widthType attribute.\n      // We ignore width and widthType together.\n      return {\n        layout: layout\n      };\n    } else {\n      return {\n        layout: layout,\n        width: width\n      };\n    }\n  };\n  var getAttrsFromNode = function getAttrsFromNode(node) {\n    var _node$attrs = node.attrs,\n      layout = _node$attrs.layout,\n      width = _node$attrs.width;\n    var attrs = {\n      'data-node-type': 'mediaSingle',\n      'data-layout': layout,\n      'data-width': ''\n    };\n    if (width) {\n      attrs['data-width'] = isFinite(width) && Math.floor(width) === width ? width : width.toFixed(2);\n    }\n    if (withExtendedWidthTypes && node.attrs.widthType) {\n      var widthType = node.attrs.widthType;\n      return _objectSpread(_objectSpread({}, attrs), {}, {\n        'data-width-type': widthType || WidthType.PERCENTAGE\n      });\n    }\n    return attrs;\n  };\n  if (withExtendedWidthTypes && withCaption) {\n    return mediaSingleFullFactory({\n      parseDOM: [{\n        tag: 'div[data-node-type=\"mediaSingle\"]',\n        getAttrs: getAttrs\n      }],\n      toDOM: function toDOM(node) {\n        return ['div', getAttrsFromNode(node), 0];\n      }\n    });\n  }\n  if (withExtendedWidthTypes && !withCaption) {\n    return mediaSingleWidthTypeFactory({\n      parseDOM: [{\n        tag: 'div[data-node-type=\"mediaSingle\"]',\n        getAttrs: getAttrs\n      }],\n      toDOM: function toDOM(node) {\n        return ['div', getAttrsFromNode(node), 0];\n      }\n    });\n  }\n  if (!withExtendedWidthTypes && withCaption) {\n    return mediaSingleCaptionFactory({\n      parseDOM: [{\n        tag: 'div[data-node-type=\"mediaSingle\"]',\n        getAttrs: getAttrs\n      }],\n      toDOM: function toDOM(node) {\n        return ['div', getAttrsFromNode(node), 0];\n      }\n    });\n  }\n  return mediaSingleFactory({\n    parseDOM: [{\n      tag: 'div[data-node-type=\"mediaSingle\"]',\n      getAttrs: getAttrs\n    }],\n    toDOM: function toDOM(node) {\n      return ['div', getAttrsFromNode(node), 0];\n    }\n  });\n};\nexport var mediaSingle = mediaSingleSpec({\n  withCaption: false,\n  withExtendedWidthTypes: false\n});\nexport var mediaSingleWithCaption = mediaSingleSpec({\n  withCaption: true,\n  withExtendedWidthTypes: false\n});\nexport var mediaSingleWithWidthType = mediaSingleSpec({\n  withCaption: false,\n  withExtendedWidthTypes: true\n});\nexport var mediaSingleFull = mediaSingleSpec({\n  withCaption: true,\n  withExtendedWidthTypes: true\n});\nexport var toJSON = function toJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs).reduce(function (obj, key) {\n      if (node.attrs[key] !== null) {\n        obj[key] = node.attrs[key];\n      }\n      return obj;\n    }, {})\n  };\n};", "/**\n * This takes an adf hex color and returns a matching border palette color.\n *\n * By providing a design token, this enables ADF content to be rendered in new themes such as dark mode.\n *\n * Example usage\n * ```tsx\n * const cssValue = hexToEditorBorderPaletteColor('#091E4224');\n * //     ^? const cssValue: string\n * <div style={{borderColor: cssValue}} />\n * ```\n * The names of tokens can change over time, and the values of tokens will differ between themes.\n * The exact output of this function is an implementation detail and should only be used when rendering\n * content to the user, on a client with a matching major version of `@atlaskit/tokens`.\n * - **DO NOT**: store the output of these functions in any user-generated content or back-end.\n * - **DO**: store the ADF hex color, and use these utilities at render time to display the themed version of the color\n */\nexport function hexToEditorBorderPaletteColor(hexColor) {\n  // Ts ignore was used to allow use of conditional return type\n  // (preferencing better type on consumption over safety in implementation)\n  return editorBorderPalette[hexColor.toUpperCase()];\n}\nexport var editorBorderPalette = {\n  /** gray - subtle */\n  '#091E4224': 'var(--ds-border, #091E4224)',\n  /** gray */\n  '#758195': 'var(--ds-border-bold, #758195)',\n  /** gray - bold */\n  '#172B4D': 'var(--ds-text, #172B4D)'\n};\n\n/**\n * This takes an adf hex color and returns a matching text palette color.\n *\n * By providing a design token, this enables ADF content to be rendered in new themes such as dark mode.\n *\n * Example usage\n * ```tsx\n * const cssValue = hexToTextPaletteColor('#0747A6');\n * //     ^? const cssValue: string\n * <span style={{textColor: cssValue}} />\n * ```\n * The names of tokens can change over time, and the values of tokens will differ between themes.\n * The exact output of this function is an implementation detail and should only be used when rendering\n * content to the user, on a client with a matching major version of `@atlaskit/tokens`.\n * - **DO NOT**: store the output of these functions in any user-generated content or back-end.\n * - **DO**: store the ADF hex color, and use these utilities at render time to display the themed version of the color\n */\nexport function hexToEditorTextPaletteColor(hexColor) {\n  // Ts ignore was used to allow use of conditional return type\n  // (preferencing better type on consumption over safety in implementation)\n  return editorTextPalette[hexColor.toUpperCase()];\n}\nexport var editorTextPalette = {\n  /** blue - light */\n  '#B3D4FF': 'var(--ds-background-accent-blue-subtler, #B3D4FF)',\n  /** blue - medium */\n  '#4C9AFF': 'var(--ds-icon-accent-blue, #4C9AFF)',\n  /** blue - strong */\n  '#0747A6': 'var(--ds-text-accent-blue, #0747A6)',\n  /** teal - light */\n  '#B3F5FF': 'var(--ds-background-accent-teal-subtler, #B3F5FF)',\n  /** teal - medium */\n  '#00B8D9': 'var(--ds-icon-accent-teal, #00B8D9)',\n  /** teal - strong */\n  '#008DA6': 'var(--ds-text-accent-teal, #008DA6)',\n  /** green - light */\n  '#ABF5D1': 'var(--ds-background-accent-green-subtler, #ABF5D1)',\n  /** green - medium */\n  '#36B37E': 'var(--ds-icon-accent-green, #36B37E)',\n  /** green - strong */\n  '#006644': 'var(--ds-text-accent-green, #006644)',\n  /** yellowOrange - light */\n  '#FFF0B3': 'var(--ds-background-accent-yellow-subtler, #FFF0B3)',\n  /** yellowOrange - medium */\n  '#FFC400': 'var(--ds-background-accent-orange-subtle, #FFC400)',\n  /** yellowOrange - strong */\n  '#FF991F': 'var(--ds-icon-accent-orange, #FF991F)',\n  /** red - light */\n  '#FFBDAD': 'var(--ds-background-accent-red-subtler, #FFBDAD)',\n  /** red - medium */\n  '#FF5630': 'var(--ds-icon-accent-red, #FF5630)',\n  /** red - strong */\n  '#BF2600': 'var(--ds-text-accent-red, #BF2600)',\n  /** purple - light */\n  '#EAE6FF': 'var(--ds-background-accent-purple-subtler, #EAE6FF)',\n  /** purple - medium */\n  '#6554C0': 'var(--ds-icon-accent-purple, #6554C0)',\n  /** purple - strong */\n  '#403294': 'var(--ds-text-accent-purple, #403294)',\n  /** whiteGray - light */\n  '#FFFFFF': 'var(--ds-text-inverse, #FFFFFF)',\n  /** whiteGray - medium */\n  '#97A0AF': 'var(--ds-icon-accent-gray, #97A0AF)',\n  /** whiteGray - strong */\n  '#172B4D': 'var(--ds-text, #172B4D)'\n};\n\n/**\n * This takes an ADF hex color and returns a matching text background palette color.\n *\n * By providing a design token, this enables ADF content to be rendered in new themes such as dark mode.\n *\n * Example usage\n * ```tsx\n * const cssValue = hexToEditorTextBackgroundPaletteColor('#0747A6');\n * //     ^? const cssValue: string\n * <span style={{backgroundColor: cssValue}} />\n * ```\n * The names of tokens can change over time, and the values of tokens will differ between themes.\n * The exact output of this function is an implementation detail and should only be used when rendering\n * content to the user, on a client with a matching major version of `@atlaskit/tokens`.\n * - **DO NOT**: store the output of these functions in any user-generated content or back-end.\n * - **DO**: store the ADF hex color, and use these utilities at render time to display the themed version of the color\n */\nexport function hexToEditorTextBackgroundPaletteColor(hexColor) {\n  // Ts ignore was used to allow use of conditional return type\n  // (preferring better type on consumption over safety in implementation)\n  return textBackgroundColorPalette[hexColor.toUpperCase()];\n}\nexport var textBackgroundColorPalette = {\n  /** Gray - light */\n  '#DCDFE4': 'var(--ds-background-accent-gray-subtler, #DCDFE4)',\n  /** Teal - light */\n  '#C6EDFB': 'var(--ds-background-accent-teal-subtler, #C6EDFB)',\n  /** Lime - light */\n  '#D3F1A7': 'var(--ds-background-accent-lime-subtler, #D3F1A7)',\n  /** Orange - light */\n  '#FEDEC8': 'var(--ds-background-accent-orange-subtler, #FEDEC8)',\n  /** Magenta - light */\n  '#FDD0EC': 'var(--ds-background-accent-magenta-subtler, #FDD0EC)',\n  /** Purple - light */\n  '#DFD8FD': 'var(--ds-background-accent-purple-subtler, #DFD8FD)'\n};\n/**\n * Takes an ADF hex color and returns the rendered hex code for the associated background palette design token using getTokenValue.\n * If the provided color does not exist in the Editor color palette, this function returns undefined.\n *\n * This should only be used when rendering content where CSS variables are not feasible, such as a non-CSS environment\n * or to enable cross-app copy/paste.\n *\n * WARNING: If the rendered theme changes (such as from light -> dark mode) the value returned here will no longer match\n * the surrounding UI and will need to be re-fetched.\n * In addition, the values of tokens will differ between themes and the value for a given theme can and will change.\n * - **DO NOT**: store the output of these functions in any user-generated content or back-end.\n * - **DO**: store the ADF hex color, and use these utilities at render time to display the themed version of the color.\n */\nexport function hexToEditorBackgroundPaletteRawValue(hexColor) {\n  // Ts ignore was used to allow use of conditional return type\n  // (preferencing better type on consumption over safety in implementation)\n  var tokenData = editorBackgroundPalette[hexColor.toUpperCase()];\n  return tokenData ? tokenData.getValue(hexColor) : undefined;\n}\n/**\n * Values are asserted to improve generated type declarations\n * Using object structure as getValue() function needed for table values, and other\n * properties may be needed in the future.\n */\nexport var editorBackgroundPalette = {\n  /** blue - light */\n  '#DEEBFF': {\n    getValue: function getValue() {\n      return '#DEEBFF';\n    },\n    token: 'var(--ds-background-accent-blue-subtlest, #DEEBFF)'\n  },\n  /** blue - medium */\n  '#B3D4FF': {\n    getValue: function getValue() {\n      return '#B3D4FF';\n    },\n    token: 'var(--ds-background-accent-blue-subtler, #B3D4FF)'\n  },\n  /** blue - strong */\n  '#4C9AFF': {\n    getValue: function getValue() {\n      return '#4C9AFF';\n    },\n    token: 'var(--ds-background-accent-blue-subtle, #4C9AFF)'\n  },\n  /** teal - light */\n  '#E6FCFF': {\n    getValue: function getValue() {\n      return '#E6FCFF';\n    },\n    token: 'var(--ds-background-accent-teal-subtlest, #E6FCFF)'\n  },\n  /** teal - medium */\n  '#B3F5FF': {\n    getValue: function getValue() {\n      return '#B3F5FF';\n    },\n    token: 'var(--ds-background-accent-teal-subtler, #B3F5FF)'\n  },\n  /** teal - strong */\n  '#79E2F2': {\n    getValue: function getValue() {\n      return '#79E2F2';\n    },\n    token: 'var(--ds-background-accent-teal-subtle, #79E2F2)'\n  },\n  /** green - light */\n  '#E3FCEF': {\n    getValue: function getValue() {\n      return '#E3FCEF';\n    },\n    token: 'var(--ds-background-accent-green-subtlest, #E3FCEF)'\n  },\n  /** green - medium */\n  '#ABF5D1': {\n    getValue: function getValue() {\n      return '#ABF5D1';\n    },\n    token: 'var(--ds-background-accent-green-subtler, #ABF5D1)'\n  },\n  /** green - strong */\n  '#57D9A3': {\n    getValue: function getValue() {\n      return '#57D9A3';\n    },\n    token: 'var(--ds-background-accent-green-subtle, #57D9A3)'\n  },\n  /** yellowOrange - light */\n  '#FFFAE6': {\n    getValue: function getValue() {\n      return '#FFFAE6';\n    },\n    token: 'var(--ds-background-accent-yellow-subtlest, #FFFAE6)'\n  },\n  /** yellowOrange - medium */\n  '#FFF0B3': {\n    getValue: function getValue() {\n      return '#FFF0B3';\n    },\n    token: 'var(--ds-background-accent-yellow-subtler, #FFF0B3)'\n  },\n  /** yellowOrange - strong */\n  '#FFC400': {\n    getValue: function getValue() {\n      return '#FFC400';\n    },\n    token: 'var(--ds-background-accent-orange-subtle, #FFC400)'\n  },\n  /** red - light */\n  '#FFEBE6': {\n    getValue: function getValue() {\n      return '#FFEBE6';\n    },\n    token: 'var(--ds-background-accent-red-subtlest, #FFEBE6)'\n  },\n  /** red - medium */\n  '#FFBDAD': {\n    getValue: function getValue() {\n      return '#FFBDAD';\n    },\n    token: 'var(--ds-background-accent-red-subtler, #FFBDAD)'\n  },\n  /** red - strong */\n  '#FF8F73': {\n    getValue: function getValue() {\n      return '#FF8F73';\n    },\n    token: 'var(--ds-background-accent-red-subtle, #FF8F73)'\n  },\n  /** purple - light */\n  '#EAE6FF': {\n    getValue: function getValue() {\n      return '#EAE6FF';\n    },\n    token: 'var(--ds-background-accent-purple-subtlest, #EAE6FF)'\n  },\n  /** purple - medium */\n  '#C0B6F2': {\n    getValue: function getValue() {\n      return '#C0B6F2';\n    },\n    token: 'var(--ds-background-accent-purple-subtler, #C0B6F2)'\n  },\n  /** purple - strong */\n  '#998DD9': {\n    getValue: function getValue() {\n      return '#998DD9';\n    },\n    token: 'var(--ds-background-accent-purple-subtle, #998DD9)'\n  },\n  /** whiteGray - light */\n  '#FFFFFF': {\n    getValue: function getValue() {\n      return '#FFFFFF';\n    },\n    token: 'var(--ds-surface, #FFFFFF)'\n  },\n  /** whiteGray - medium */\n  '#F4F5F7': {\n    getValue: function getValue() {\n      return '#F4F5F7';\n    },\n    token: 'var(--ds-background-accent-gray-subtlest, #F4F5F7)'\n  },\n  /** whiteGray - strong */\n  '#B3BAC5': {\n    getValue: function getValue() {\n      return '#B3BAC5';\n    },\n    token: 'var(--ds-background-accent-gray-subtle, #B3BAC5)'\n  }\n};\nexport {};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { hexToEditorBackgroundPaletteRawValue } from '../../utils/editor-palette';\nimport { B100, B50, B75, G200, G50, G75, hexToRgba, isHex, isRgb, N0, N20, N60, N800, P100, P50, P75, R100, R50, R75, rgbToHex, T100, T50, T75, Y200, Y50, Y75 } from '../../utils/colors';\nimport { uuid } from '../../utils/uuid';\nimport { getDarkModeLCHColor } from '../../utils/lch-color-inversion';\nimport { table as tableFactory } from '../../next-schema/generated/nodeTypes';\nimport { tableCell as tableCellFactory } from '../../next-schema/generated/nodeTypes';\nimport { tableHeader as tableHeaderFactory } from '../../next-schema/generated/nodeTypes';\nimport { tableRow as tableRowFactory } from '../../next-schema/generated/nodeTypes';\nexport var tablePrefixSelector = 'pm-table';\nexport var tableCellSelector = \"\".concat(tablePrefixSelector, \"-cell-content-wrap\");\nexport var tableHeaderSelector = \"\".concat(tablePrefixSelector, \"-header-content-wrap\");\nexport var tableCellContentWrapperSelector = \"\".concat(tablePrefixSelector, \"-cell-nodeview-wrapper\");\nexport var tableCellContentDomSelector = \"\".concat(tablePrefixSelector, \"-cell-nodeview-content-dom\");\nvar DEFAULT_TABLE_HEADER_CELL_BACKGROUND = N20.toLocaleLowerCase();\nexport var getCellAttrs = function getCellAttrs(dom) {\n  var defaultValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var widthAttr = dom.getAttribute('data-colwidth');\n  var width = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(',').map(function (str) {\n    return Number(str);\n  }) : null;\n  var colspan = Number(dom.getAttribute('colspan') || 1);\n  var backgroundColor = dom.style.backgroundColor;\n\n  /**\n   * We have pivoted to store background color information in\n   *  data-cell-background.\n   * We will have original hex code (which we map to DST token)\n   *  stored in data-cell-background, use that.\n   * More details at https://product-fabric.atlassian.net/wiki/spaces/EUXQ/pages/3472556903/Tokenising+tableCell+background+colors#Update-toDom-and-parseDom-to-store-and-read-background-color-from-data-cell-background-attribute.4\n   */\n  var dataCellBackground = dom.getAttribute('data-cell-background');\n  var dataCellBackgroundHexCode = dataCellBackground && isHex(dataCellBackground) ? dataCellBackground : undefined;\n\n  // ignore setting background attr if ds neutral token is detected\n  if (backgroundColor.includes('--ds-background-neutral')) {\n    backgroundColor = '';\n  } else {\n    if (backgroundColor && isRgb(backgroundColor)) {\n      var result = rgbToHex(backgroundColor);\n      if (result !== null) {\n        backgroundColor = result;\n      }\n    }\n  }\n  var backgroundHexCode = dataCellBackgroundHexCode || (backgroundColor && backgroundColor !== defaultValues['background'] ? backgroundColor : null);\n  return {\n    colspan: colspan,\n    rowspan: Number(dom.getAttribute('rowspan') || 1),\n    colwidth: width && width.length === colspan ? width : null,\n    background: backgroundHexCode\n  };\n};\n// these are for test only\nvar testGlobalTheme;\nexport var setGlobalTheme = function setGlobalTheme(theme) {\n  testGlobalTheme = theme;\n};\n// This is a minimal duplication of the method from @atlaskit/tokens\n// to minimise the number of dependencies required as these changes are expected\n// to be patched onto CR8.\nvar getGlobalTheme = function getGlobalTheme() {\n  // This should only be hit during tests.\n  //\n  // At time of writing Jest mocks are not working in this repository.\n  if (testGlobalTheme) {\n    return {\n      colorMode: testGlobalTheme\n    };\n  }\n  var element = document.documentElement;\n  var colorMode = element.getAttribute('data-color-mode') || '';\n  return {\n    colorMode: colorMode\n  };\n};\nvar cssVariablePattern = /^var\\(--.*\\)$/;\n\n/**\n * gets cell dom attributes based on node attributes\n * @returns CellDomAttrs\n */\nexport var getCellDomAttrs = function getCellDomAttrs(node) {\n  var attrs = {};\n  var nodeType = node.type.name;\n  if (node.attrs.colspan !== 1) {\n    attrs.colspan = node.attrs.colspan;\n  }\n  if (node.attrs.rowspan !== 1) {\n    attrs.rowspan = node.attrs.rowspan;\n  }\n  if (node.attrs.colwidth) {\n    attrs['data-colwidth'] = node.attrs.colwidth.join(',');\n  }\n  if (node.attrs.background) {\n    var background = node.attrs.background;\n\n    // to ensure that we don't overwrite product's style:\n    // - it clears background color for <th> if its set to gray\n    // - it clears background color for <td> if its set to white\n    // - it clears background color for <th> if ds neutral token is detected\n    var ignored = nodeType === 'tableHeader' && background === tableBackgroundColorNames.get('light gray') || nodeType === 'tableCell' && background === tableBackgroundColorNames.get('white') || nodeType === 'tableHeader' && background.includes('--ds-background-neutral');\n    if (ignored) {\n      attrs.style = '';\n    } else {\n      var color = isRgb(background) && rgbToHex(background) ? rgbToHex(background) : background;\n\n      /**\n       * The Editor supports users pasting content from external sources with custom table cell backgrounds and having those\n       * backgrounds persisted.\n       *\n       * This feature predates the introduction of dark mode.\n       *\n       * Without the inversion logic below, tokenised content (ie. text), can be hard to read when the user loads the page in dark mode.\n       *\n       * This introduces inversion of the presentation of the custom background color when the user is in dark mode.\n       *\n       * This can be done without additional changes to account for users copying and pasting content inside the Editor, because of\n       * how we detect table cell background colors copied from external editor sources. Where we load the background color from a\n       * seperate attribute (data-cell-background), instead of the inline style.\n       *\n       * See the following document for more details on this behaviour\n       * https://hello.atlassian.net/wiki/spaces/CCECO/pages/2892247168/Unsupported+custom+table+cell+background+colors+in+dark+theme+Editor+Job+Story\n       */\n      var tokenColor = hexToEditorBackgroundPaletteRawValue(color);\n      if (tokenColor) {\n        attrs.style = \"background-color: \".concat(tokenColor, \";\");\n      } else if (\n      /**\n       * There was previously a bug in dark mode where we would attempt to invert\n       * a design token in `getDarkModeLCHColor` causing issues.\n       * If it's a design token we should return it as is.\n       */\n      cssVariablePattern.test(color)) {\n        attrs.style = \"background-color: \".concat(color, \";\");\n      } else {\n        // if we have a custom color, we need to check if we are in dark mode\n        if (getGlobalTheme().colorMode === 'dark') {\n          // if we have a custom color, we need to check if we are in dark mode\n          attrs.style = \"background-color: \".concat(getDarkModeLCHColor(color), \";\");\n        } else {\n          // if we are in light mode, we can just set the color\n          attrs.style = \"background-color: \".concat(background, \";\");\n        }\n      }\n\n      /**\n       * Storing hex code in data-cell-background because\n       *  we want to have DST token (css variable) or\n       *  DST token value (value (hex code) of css variable) in\n       *  inline style to correct render table cell background\n       *  based on selected theme.\n       * Currently we rely on background color hex code stored in\n       *  inline style.\n       * Because of that when we copy and paste table, we end up\n       *  having DST token or DST token value in ADF instead of\n       *  original hex code which we map to DST token.\n       * So, introducing data-cell-background.\n       * More details at https://product-fabric.atlassian.net/wiki/spaces/EUXQ/pages/3472556903/Tokenising+tableCell+background+colors#Update-toDom-and-parseDom-to-store-and-read-background-color-from-data-cell-background-attribute.4\n       */\n      if (color) {\n        attrs['data-cell-background'] = color;\n      }\n      attrs.colorname = tableBackgroundColorPalette.get(color);\n    }\n  }\n  if (nodeType === 'tableHeader') {\n    attrs.class = tableHeaderSelector;\n  } else {\n    attrs.class = tableCellSelector;\n  }\n  return attrs;\n};\nexport var tableBackgroundColorPalette = new Map();\nexport var tableBackgroundBorderColor = hexToRgba(N800, 0.12) || N0;\nexport var tableBackgroundColorNames = new Map();\n[[N0, 'White'], [B50, 'Light blue'], [T50, 'Light teal'], [G50, 'Light green'], [Y50, 'Light yellow'], [R50, 'Light red'], [P50, 'Light purple'], [N20, 'Light gray'], [B75, 'Blue'], [T75, 'Teal'], [G75, 'Green'], [Y75, 'Yellow'], [R75, 'Red'], [P75, 'Purple'], [N60, 'Gray'], [B100, 'Dark blue'], [T100, 'Dark teal'], [G200, 'Dark green'], [Y200, 'Dark yellow'], [R100, 'Dark red'], [P100, 'Dark purple']].forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    colorValue = _ref2[0],\n    colorName = _ref2[1];\n  tableBackgroundColorPalette.set(colorValue.toLowerCase(), colorName);\n  tableBackgroundColorNames.set(colorName.toLowerCase(), colorValue.toLowerCase());\n});\n\n/**\n * @name table_node\n */\n\n/**\n * @name table_row_node\n */\n\n/**\n * @name table_cell_content\n * @minItems 1\n * @allowUnsupportedBlock true\n */\n\n/**\n * @name table_cell_node\n */\n\n/**\n * @name table_header_node\n */\n\n// TODO: Fix any, potential issue. ED-5048\nvar createTableSpec = function createTableSpec() {\n  return tableFactory({\n    parseDOM: [{\n      tag: 'table',\n      getAttrs: function getAttrs(node) {\n        var _dom$parentElement;\n        var dom = node;\n        var breakoutWrapper = (_dom$parentElement = dom.parentElement) === null || _dom$parentElement === void 0 ? void 0 : _dom$parentElement.parentElement;\n        return {\n          isNumberColumnEnabled: dom.getAttribute('data-number-column') === 'true',\n          layout:\n          // copying from editor\n          dom.getAttribute('data-layout') || ( // copying from renderer\n          breakoutWrapper === null || breakoutWrapper === void 0 ? void 0 : breakoutWrapper.getAttribute('data-layout')) || 'default',\n          __autoSize: dom.getAttribute('data-autosize') === 'true',\n          localId: dom.getAttribute('data-table-local-id') || uuid.generate(),\n          width: Number(dom.getAttribute('data-table-width')) || null,\n          displayMode: dom.getAttribute('data-table-display-mode') || null\n        };\n      }\n    }],\n    toDOM: function toDOM(node) {\n      var attrs = {\n        'data-number-column': node.attrs.isNumberColumnEnabled,\n        'data-layout': node.attrs.layout,\n        'data-autosize': node.attrs.__autoSize,\n        'data-table-local-id': node.attrs.localId,\n        'data-table-width': node.attrs.width,\n        'data-table-display-mode': node.attrs.displayMode\n      };\n      return ['table', attrs, ['tbody', 0]];\n    }\n  });\n};\n\n// TODO: assuming breaking changes aren't allowed, so retaining both exports\n/** Includes table width attribute */\nexport var table = createTableSpec();\n/** @deprecated Do not use, instead use the regular `table` export */\nexport var tableWithCustomWidth = createTableSpec();\nexport var tableStage0 = createTableSpec();\nvar shouldIncludeAttribute = function shouldIncludeAttribute(key, value) {\n  return !key.startsWith('__') && (key !== 'localId' || !!value);\n};\nexport var tableToJSON = function tableToJSON(node) {\n  return {\n    attrs: Object.keys(node.attrs).filter(function (key) {\n      return shouldIncludeAttribute(key, node.attrs[key]);\n    }).reduce(function (obj, key) {\n      return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, key, node.attrs[key]));\n    }, {})\n  };\n};\nexport var tableRow = tableRowFactory({\n  parseDOM: [{\n    tag: 'tr'\n  }],\n  toDOM: function toDOM() {\n    return ['tr', 0];\n  }\n});\nvar cellAttrs = {\n  colspan: {\n    default: 1\n  },\n  rowspan: {\n    default: 1\n  },\n  colwidth: {\n    default: null\n  },\n  background: {\n    default: null\n  }\n};\nexport var tableCell = tableCellFactory({\n  parseDOM: [\n  // Ignore number cell copied from renderer\n  {\n    tag: '.ak-renderer-table-number-column',\n    ignore: true\n  }, {\n    tag: 'td',\n    getAttrs: function getAttrs(dom) {\n      return getCellAttrs(dom);\n    }\n  }],\n  toDOM: function toDOM(node) {\n    return ['td', getCellDomAttrs(node), 0];\n  }\n});\nexport var toJSONTableCell = function toJSONTableCell(node) {\n  return {\n    attrs: Object.keys(node.attrs).reduce(function (obj, key) {\n      if (cellAttrs[key].default !== node.attrs[key]) {\n        obj[key] = node.attrs[key];\n      }\n      return obj;\n    }, {})\n  };\n};\nexport var tableHeader = tableHeaderFactory({\n  parseDOM: [{\n    tag: 'th',\n    getAttrs: function getAttrs(dom) {\n      return getCellAttrs(dom, {\n        background: DEFAULT_TABLE_HEADER_CELL_BACKGROUND\n      });\n    }\n  }],\n  toDOM: function toDOM(node) {\n    return ['th', getCellDomAttrs(node), 0];\n  }\n});\nexport var toJSONTableHeader = toJSONTableCell;", "import { uuid } from '../../utils/uuid';\nimport { decisionList as decisionListFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name decisionList_node\n */\n\nvar name = 'decisionList';\nexport var decisionListSelector = \"[data-node-type=\\\"\".concat(name, \"\\\"]\");\nexport var decisionList = decisionListFactory({\n  parseDOM: [{\n    tag: \"ol\".concat(decisionListSelector),\n    // Default priority is 50. We normally don't change this but since this node type is\n    // also used by ordered-list we need to make sure that we run this parser first.\n    priority: 100,\n    getAttrs: function getAttrs() {\n      return {\n        localId: uuid.generate()\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var localId = node.attrs.localId;\n    var attrs = {\n      'data-node-type': name,\n      'data-decision-list-local-id': localId || 'local-decision-list',\n      style: 'list-style: none; padding-left: 0'\n    };\n    return ['ol', attrs, 0];\n  }\n});", "import { uuid } from '../../utils/uuid';\nimport { decisionItem as decisionItemFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name decisionItem_node\n */\n\nexport var decisionItem = decisionItemFactory({\n  parseDOM: [{\n    tag: 'li[data-decision-local-id]',\n    // Default priority is 50. We normally don't change this but since this node type is\n    // also used by list-item we need to make sure that we run this parser first.\n    priority: 100,\n    getAttrs: function getAttrs(dom) {\n      return {\n        localId: uuid.generate(),\n        state: dom.getAttribute('data-decision-state')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      localId = _node$attrs.localId,\n      state = _node$attrs.state;\n    var attrs = {\n      'data-decision-local-id': localId || 'local-decision',\n      'data-decision-state': state\n    };\n    return ['li', attrs, 0];\n  }\n});", "import { uuid } from '../../utils/uuid';\nimport { taskList as taskListFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name taskList_node\n */\n\nvar name = 'actionList';\nexport var taskListSelector = \"[data-node-type=\\\"\".concat(name, \"\\\"]\");\nexport var taskList = taskListFactory({\n  parseDOM: [{\n    tag: \"div\".concat(taskListSelector),\n    // Default priority is 50. We normally don't change this but since this node type is\n    // also used by ordered-list we need to make sure that we run this parser first.\n    priority: 100,\n    getAttrs: function getAttrs() {\n      return {\n        localId: uuid.generate()\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var localId = node.attrs.localId;\n    var attrs = {\n      'data-node-type': name,\n      'data-task-list-local-id': localId || 'local-task-list',\n      style: 'list-style: none; padding-left: 0'\n    };\n    return ['div', attrs, 0];\n  }\n});", "import { uuid } from '../../utils/uuid';\nimport { taskItem as taskItemFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name taskItem_node\n */\n\nexport var taskItem = taskItemFactory({\n  parseDOM: [{\n    tag: 'div[data-task-local-id]',\n    // Default priority is 50. We normally don't change this but since this node type is\n    // also used by list-item we need to make sure that we run this parser first.\n    priority: 100,\n    getAttrs: function getAttrs(dom) {\n      return {\n        localId: uuid.generate(),\n        state: dom.getAttribute('data-task-state') || 'TODO'\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      localId = _node$attrs.localId,\n      state = _node$attrs.state;\n    var attrs = {\n      'data-task-local-id': localId || 'local-task',\n      'data-task-state': state || 'TODO'\n    };\n    return ['div', attrs, 0];\n  }\n});", "import { date as dateFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name date_node\n */\n\nexport var date = dateFactory({\n  parseDOM: [{\n    tag: 'span[data-node-type=\"date\"]',\n    getAttrs: function getAttrs(dom) {\n      return {\n        timestamp: dom.getAttribute('data-timestamp')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'date',\n      'data-timestamp': node.attrs.timestamp\n    };\n    return ['span', attrs];\n  }\n});", "import { placeholder as placeholderFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name placeholder_node\n */\n\nexport var placeholder = placeholderFactory({\n  parseDOM: [{\n    tag: 'span[data-placeholder]',\n    getAttrs: function getAttrs(dom) {\n      return {\n        text: dom.getAttribute('data-placeholder') || placeholder.attrs.text.default\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var text = node.attrs.text;\n    var attrs = {\n      'data-placeholder': text,\n      // Needs to be edtiable for mobile to not close keyboard\n      contenteditable: 'true'\n    };\n    return ['span', attrs, text];\n  }\n});", "import { layoutSection as layoutSectionFactory } from '../../next-schema/generated/nodeTypes';\nimport { layoutSectionFull as layoutSectionFullFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name layoutSection_node\n */\n\n/**\n * Need duplicate `type` and `marks` to make both validator and json-schema satisfied\n */\n\n/**\n * @name layoutSection_full_node\n */\n\n/**\n * @stage 0\n * @name layoutSection_with_single_column_node\n */\n\nexport var layoutSection = layoutSectionFactory({\n  parseDOM: [{\n    context: 'layoutSection//|layoutColumn//',\n    tag: 'div[data-layout-section]',\n    skip: true\n  }, {\n    tag: 'div[data-layout-section]'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      'data-layout-section': 'true'\n    };\n    return ['div', attrs, 0];\n  }\n});\nexport var layoutSectionFull = layoutSectionFullFactory({\n  parseDOM: [{\n    context: 'layoutSection//|layoutColumn//',\n    tag: 'div[data-layout-section]',\n    skip: true\n  }, {\n    tag: 'div[data-layout-section]'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      'data-layout-section': 'true'\n    };\n    return ['div', attrs, 0];\n  }\n});\n\n// it's same as layoutSection\nexport var layoutSectionWithSingleColumn = layoutSectionFactory({\n  parseDOM: [{\n    context: 'layoutSection//|layoutColumn//',\n    tag: 'div[data-layout-section]',\n    skip: true\n  }, {\n    tag: 'div[data-layout-section]'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      'data-layout-section': 'true'\n    };\n    return ['div', attrs, 0];\n  }\n});", "import { layoutColumn as layoutColumnFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name layoutColumn_node\n */\n\nexport var layoutColumn = layoutColumnFactory({\n  parseDOM: [{\n    context: 'layoutColumn//',\n    tag: 'div[data-layout-column]',\n    skip: true\n  }, {\n    tag: 'div[data-layout-column]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        width: Number(dom.getAttribute('data-column-width')) || undefined\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-layout-column': 'true'\n    };\n    var width = node.attrs.width;\n    if (width) {\n      attrs['style'] = \"flex-basis: \".concat(width, \"%\");\n      attrs['data-column-width'] = \"\".concat(width);\n    }\n\n    // We need to apply a attribute to the inner most child to help\n    // ProseMirror identify its boundaries better.\n    var contentAttrs = {\n      'data-layout-content': 'true'\n    };\n    return ['div', attrs, ['div', contentAttrs, 0]];\n  }\n});", "import { inlineCard as inlineCardFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name inlineCard_node\n */\n\nexport var inlineCard = inlineCardFactory({\n  parseDOM: [{\n    tag: 'a[data-inline-card], span[data-inline-card]',\n    // bump priority higher than hyperlink\n    priority: 100,\n    getAttrs: function getAttrs(dom) {\n      var anchor = dom;\n      var data = anchor.getAttribute('data-card-data');\n\n      /* Support attrs from Editor and Renderer */\n      return {\n        url: anchor.getAttribute('href') || anchor.getAttribute('data-card-url') || null,\n        data: data ? JSON.parse(data) : null\n      };\n    }\n  },\n  // for renderer\n  {\n    tag: 'div[data-inline-card]',\n    getAttrs: function getAttrs(dom) {\n      var anchor = dom;\n      var data = anchor.getAttribute('data-card-data');\n      return {\n        url: anchor.getAttribute('data-card-url'),\n        data: data ? JSON.parse(data) : null\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-inline-card': '',\n      href: node.attrs.url || '',\n      'data-card-data': node.attrs.data ? JSON.stringify(node.attrs.data) : ''\n    };\n    if (node.attrs.url) {\n      return ['a', attrs, node.attrs.url];\n    } else {\n      return ['a', attrs];\n    }\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { blockCard as blockCardFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name blockCard_node\n */\n\nvar getCommonAttributesFromDom = function getCommonAttributesFromDom(dom) {\n  var anchor = dom;\n  var data = anchor.getAttribute('data-card-data');\n  var datasource = anchor.getAttribute('data-datasource');\n  return {\n    data: data ? JSON.parse(data) : undefined,\n    layout: datasource ? dom.getAttribute('data-layout') || undefined : undefined,\n    width: Number(dom.getAttribute('data-width')) || undefined,\n    datasource: datasource ? JSON.parse(datasource) : undefined\n  };\n};\nexport var blockCard = blockCardFactory({\n  parseDOM: [{\n    tag: 'a[data-block-card]',\n    // bump priority higher than hyperlink\n    priority: 100,\n    getAttrs: function getAttrs(dom) {\n      var anchor = dom;\n      return _objectSpread({\n        url: anchor.getAttribute('href') || undefined\n      }, getCommonAttributesFromDom(dom));\n    }\n  }, {\n    tag: 'div[data-block-card]',\n    getAttrs: function getAttrs(dom) {\n      var anchor = dom;\n      return _objectSpread({\n        url: anchor.getAttribute('data-card-url') || undefined\n      }, getCommonAttributesFromDom(dom));\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs;\n    var _ref = node.attrs,\n      url = _ref.url;\n    var _ref2 = node.attrs,\n      data = _ref2.data;\n    var _ref3 = node.attrs,\n      layout = _ref3.layout,\n      width = _ref3.width,\n      datasource = _ref3.datasource;\n    var attrs = {\n      'data-block-card': '',\n      href: url || '',\n      'data-card-data': data ? JSON.stringify(data) : '',\n      'data-datasource': datasource ? JSON.stringify(datasource) : '',\n      'data-layout': layout,\n      'data-width': \"\".concat(width)\n    };\n    return ['a', attrs, (node === null || node === void 0 ? void 0 : (_node$attrs = node.attrs) === null || _node$attrs === void 0 ? void 0 : _node$attrs.url) || ' '];\n  }\n});", "import { unsupportedBlock as unsupportedBlockFactory } from '../../next-schema/generated/nodeTypes';\nexport var unsupportedBlock = unsupportedBlockFactory({\n  parseDOM: [{\n    tag: '[data-node-type=\"unsupportedBlock\"]',\n    getAttrs: function getAttrs(dom) {\n      return {\n        originalValue: JSON.parse(dom.getAttribute('data-original-value') || '{}')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'unsupportedBlock',\n      'data-original-value': JSON.stringify(node.attrs.originalValue)\n    };\n    return ['div', attrs, 'Unsupported content'];\n  }\n});", "import { unsupportedInline as unsupportedInlineFactory } from '../../next-schema/generated/nodeTypes';\nexport var unsupportedInline = unsupportedInlineFactory({\n  parseDOM: [{\n    tag: '[data-node-type=\"unsupportedInline\"]',\n    getAttrs: function getAttrs(dom) {\n      return {\n        originalValue: JSON.parse(dom.getAttribute('data-original-value') || '{}')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'unsupportedInline',\n      'data-original-value': JSON.stringify(node.attrs.originalValue)\n    };\n    return ['span', attrs, 'Unsupported content'];\n  }\n});", "import { uuid } from '../../utils/uuid';\nimport { status as statusFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name status_node\n */\n\nexport var status = statusFactory({\n  parseDOM: [{\n    tag: 'span[data-node-type=\"status\"]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        text: dom.textContent.replace(/\\n/, '').trim(),\n        color: dom.getAttribute('data-color'),\n        localId: uuid.generate(),\n        style: dom.getAttribute('data-style')\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      text = _node$attrs.text,\n      color = _node$attrs.color,\n      localId = _node$attrs.localId,\n      style = _node$attrs.style;\n    var attrs = {\n      'data-node-type': 'status',\n      'data-color': color,\n      'data-local-id': localId,\n      'data-style': style,\n      contenteditable: 'false'\n    };\n    return ['span', attrs, text];\n  }\n});", "import { nestedExpand as nestedExpandFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name nestedExpand_content\n * @minItems 1\n * @allowUnsupportedBlock true\n */\n\n/**\n * @name nestedExpand_node\n */\n\n/**\n * @name nestedExpand_with_no_marks_node\n */\n\n/**\n * @name nestedExpand\n * @description an expand that can be nested (eg. inside table, layout).\n */\nexport var nestedExpand = nestedExpandFactory({\n  parseDOM: [{\n    context: 'nestedExpand//',\n    tag: '[data-node-type=\"nestedExpand\"]',\n    skip: true\n  }, {\n    tag: '[data-node-type=\"nestedExpand\"] button',\n    ignore: true\n  }, {\n    tag: '[data-node-type=\"expand\"] button',\n    ignore: true\n  }, {\n    tag: 'div[data-node-type=\"nestedExpand\"]',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      return {\n        title: dom.getAttribute('data-title'),\n        __expanded: true\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'nestedExpand',\n      'data-title': node.attrs.title,\n      'data-expanded': node.attrs.__expanded\n    };\n    return ['div', attrs, 0];\n  }\n});", "import { embedCard as embedCardFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name embedCard_node\n */\n\nexport var embedCard = embedCardFactory({\n  parseDOM: [{\n    tag: 'div[data-embed-card]',\n    getAttrs: function getAttrs(dom) {\n      return {\n        url: dom.getAttribute('data-card-url'),\n        layout: dom.getAttribute('data-layout') || 'center',\n        width: Number(dom.getAttribute('data-width')) || null,\n        originalWidth: Number(dom.getAttribute('data-card-original-width')) || null,\n        originalHeight: Number(dom.getAttribute('data-card-original-height')) || null\n      };\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var _node$attrs = node.attrs,\n      url = _node$attrs.url,\n      layout = _node$attrs.layout,\n      width = _node$attrs.width,\n      originalWidth = _node$attrs.originalWidth,\n      originalHeight = _node$attrs.originalHeight;\n    var attrs = {\n      'data-embed-card': '',\n      'data-card-url': url,\n      'data-layout': layout,\n      'data-width': width,\n      'data-original-width': originalWidth,\n      'data-original-height': originalHeight\n    };\n    return ['div', attrs];\n  }\n});", "export var isValidLayout = function isValidLayout(name) {\n  return !!name && ['default', 'wide', 'full-width'].includes(name);\n};\nexport var getExtensionAttrs = function getExtensionAttrs(dom) {\n  var isInline = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var extensionType = dom.getAttribute('data-extension-type');\n  var extensionKey = dom.getAttribute('data-extension-key');\n  if (!extensionType || !extensionKey) {\n    return false;\n  }\n  var attrs = {\n    extensionType: extensionType,\n    extensionKey: extensionKey,\n    text: dom.getAttribute('data-text') || undefined,\n    parameters: JSON.parse(dom.getAttribute('data-parameters') || '{}'),\n    localId: dom.getAttribute('data-local-id') || undefined\n  };\n  if (!isInline) {\n    var rawLayout = dom.getAttribute('data-layout');\n    attrs.layout = isValidLayout(rawLayout) ? rawLayout : 'default';\n  }\n  return attrs;\n};", "import { getExtensionAttrs } from '../../utils/extensions';\nimport { extension as extensionFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name extension_node\n */\n\n/**\n * @name extension_with_marks_node\n */\n\nexport var extension = extensionFactory({\n  parseDOM: [{\n    tag: '[data-node-type=\"extension\"]',\n    getAttrs: function getAttrs(domNode) {\n      return getExtensionAttrs(domNode);\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'extension',\n      'data-extension-type': node.attrs.extensionType,\n      'data-extension-key': node.attrs.extensionKey,\n      'data-text': node.attrs.text,\n      'data-parameters': JSON.stringify(node.attrs.parameters),\n      'data-layout': node.attrs.layout,\n      'data-local-id:': node.attrs.localId\n    };\n    return ['div', attrs];\n  }\n});", "import { getExtensionAttrs } from '../../utils/extensions';\nimport { inlineExtensionWithMarks as inlineExtensionWithMarksFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name inlineExtension_node\n */\n\n/**\n * @name inlineExtension_with_marks_node\n */\n\nexport var inlineExtension = inlineExtensionWithMarksFactory({\n  parseDOM: [{\n    tag: 'span[data-extension-type]',\n    getAttrs: function getAttrs(domNode) {\n      return getExtensionAttrs(domNode, true);\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-extension-type': node.attrs.extensionType,\n      'data-extension-key': node.attrs.extensionKey,\n      'data-text': node.attrs.text,\n      'data-parameters': JSON.stringify(node.attrs.parameters),\n      'data-local-id:': node.attrs.localId,\n      contenteditable: 'false'\n    };\n    return ['span', attrs];\n  }\n});", "import { getExtensionAttrs } from '../../utils/extensions';\nimport { bodiedExtension as bodiedExtensionFactory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @name bodiedExtension_node\n */\n\n/**\n * @name bodiedExtension_with_marks_node\n */\n\nexport var bodiedExtension = bodiedExtensionFactory({\n  parseDOM: [{\n    context: 'bodiedExtension//',\n    tag: '[data-node-type=\"bodied-extension\"]',\n    skip: true\n  }, {\n    tag: '[data-node-type=\"bodied-extension\"]',\n    getAttrs: function getAttrs(domNode) {\n      return getExtensionAttrs(domNode);\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'bodied-extension',\n      'data-extension-type': node.attrs.extensionType,\n      'data-extension-key': node.attrs.extensionKey,\n      'data-text': node.attrs.text,\n      'data-parameters': JSON.stringify(node.attrs.parameters),\n      'data-layout': node.attrs.layout,\n      'data-local-id:': node.attrs.localId\n    };\n    return ['div', attrs, 0];\n  }\n});", "import { getExtensionAttrs } from '../../utils/extensions';\nimport { multiBodiedExtensionStage0 as multiBodiedExtensionStage0Factory } from '../../next-schema/generated/nodeTypes';\nimport { extensionFrameStage0 as extensionFrameStage0Factory } from '../../next-schema/generated/nodeTypes';\n\n/**\n * @stage 0\n * @name extensionFrame_node\n * @description Wraps the block content\n */\n\n/**\n * @returns NodeSpec for ExtensionFrameDefinition\n */\nexport var extensionFrame = extensionFrameStage0Factory({\n  parseDOM: [{\n    context: 'extensionFrame//',\n    tag: 'div[data-extension-frame]',\n    skip: true\n  }, {\n    tag: 'div[data-extension-frame]'\n  }],\n  toDOM: function toDOM() {\n    var attrs = {\n      'data-extension-frame': 'true'\n    };\n    return ['div', attrs, 0];\n  }\n});\n\n/**\n * @stage 0\n * @name multiBodiedExtension_node\n * @description Wraps multiple extensionFrame objects.\n */\n\nexport var multiBodiedExtension = multiBodiedExtensionStage0Factory({\n  parseDOM: [{\n    context: 'multiBodiedExtension//',\n    tag: '[data-node-type=\"multi-bodied-extension\"]',\n    skip: true\n  }, {\n    tag: '[data-node-type=\"multi-bodied-extension\"]',\n    getAttrs: function getAttrs(domNode) {\n      return getExtensionAttrs(domNode);\n    }\n  }],\n  toDOM: function toDOM(node) {\n    var attrs = {\n      'data-node-type': 'multi-bodied-extension',\n      'data-extension-type': node.attrs.extensionType,\n      'data-extension-key': node.attrs.extensionKey,\n      'data-text': node.attrs.text,\n      'data-parameters': JSON.stringify(node.attrs.parameters),\n      'data-layout': node.attrs.layout,\n      'data-local-id:': node.attrs.localId\n    };\n    return ['div', attrs, 0];\n  }\n});", "// # What do marks exist?\n//\n// Marks are categorised into different groups. One motivation for this was to allow the `code` mark\n// to exclude other marks, without needing to explicitly name them. Explicit naming requires the\n// named mark to exist in the schema. This is undesirable because we want to construct different\n// schemas that have different sets of nodes/marks.\n//\n// Groups provide a level of indirection, and solve this problem. For the immediate use-case, one\n// group called \"not_code\" would have sufficed, but this an ultra-specialised to code.\n\n// Mark group for font styling (e.g. bold, italic, underline, superscript).\nexport var FONT_STYLE = 'fontStyle';\n\n// Marks group for search queries.\nexport var SEARCH_QUERY = 'searchQuery';\n\n// Marks group for links.\nexport var LINK = 'link';\n\n// Marks group for colors (text-color, background-color, etc).\nexport var COLOR = 'color';\n\n// They need to be on their own group so that they can exclude each other\n// and also work when one of them is disabled.\n\n// Marks group for alignment.\nexport var ALIGNMENT = 'alignment';\n\n// Marks group for indentation.\nexport var INDENTATION = 'indentation';", "/**\n * This file was automatically generated by @atlaskit/adf-schema-generator\n * DO NOT MODIFY IT BY HAND. Instead, modify the source files in \"packages/adf-schema/src/next-schema\" ,\n * and run \"yarn workspace @atlaskit/adf-schema build:schema:all\" to regenerate this file.\n */\n\nimport { createPMMarkSpecFactory } from '../../schema/createPMSpecFactory';\nexport var alignment = createPMMarkSpecFactory({\n  attrs: {\n    align: {}\n  },\n  excludes: 'alignment indentation',\n  group: 'alignment'\n});\nexport var annotation = createPMMarkSpecFactory({\n  attrs: {\n    id: {\n      default: ''\n    },\n    annotationType: {\n      default: 'inlineComment'\n    }\n  },\n  inclusive: true,\n  excludes: '',\n  group: 'annotation'\n});\nexport var backgroundColor = createPMMarkSpecFactory({\n  attrs: {\n    color: {}\n  },\n  inclusive: true,\n  excludes: 'color',\n  group: 'color'\n});\nexport var border = createPMMarkSpecFactory({\n  attrs: {\n    size: {},\n    color: {}\n  },\n  inclusive: false\n});\nexport var breakout = createPMMarkSpecFactory({\n  attrs: {\n    mode: {\n      default: 'wide'\n    }\n  },\n  inclusive: false,\n  spanning: false\n});\nexport var code = createPMMarkSpecFactory({\n  inclusive: true,\n  excludes: 'fontStyle link searchQuery color'\n});\nexport var confluenceInlineComment = createPMMarkSpecFactory({\n  attrs: {\n    reference: {\n      default: ''\n    }\n  },\n  inclusive: false,\n  excludes: ''\n});\nexport var dataConsumer = createPMMarkSpecFactory({\n  attrs: {\n    sources: {\n      default: []\n    }\n  }\n});\nexport var em = createPMMarkSpecFactory({\n  inclusive: true,\n  group: 'fontStyle'\n});\nexport var fragment = createPMMarkSpecFactory({\n  attrs: {\n    localId: {\n      default: ''\n    },\n    name: {\n      default: null\n    }\n  },\n  inclusive: false,\n  excludes: ''\n});\nexport var indentation = createPMMarkSpecFactory({\n  attrs: {\n    level: {}\n  },\n  excludes: 'indentation alignment',\n  group: 'indentation'\n});\nexport var link = createPMMarkSpecFactory({\n  attrs: {\n    href: {},\n    __confluenceMetadata: {\n      default: null\n    }\n  },\n  inclusive: false,\n  excludes: 'link',\n  group: 'link'\n});\nexport var strike = createPMMarkSpecFactory({\n  inclusive: true,\n  group: 'fontStyle'\n});\nexport var strong = createPMMarkSpecFactory({\n  inclusive: true,\n  group: 'fontStyle'\n});\nexport var subsup = createPMMarkSpecFactory({\n  attrs: {\n    type: {\n      default: 'sub'\n    }\n  },\n  inclusive: true,\n  group: 'fontStyle'\n});\nexport var textColor = createPMMarkSpecFactory({\n  attrs: {\n    color: {}\n  },\n  inclusive: true,\n  group: 'color'\n});\nexport var typeAheadQuery = createPMMarkSpecFactory({\n  attrs: {\n    trigger: {\n      default: ''\n    }\n  },\n  inclusive: true,\n  group: 'searchQuery'\n});\nexport var underline = createPMMarkSpecFactory({\n  inclusive: true,\n  group: 'fontStyle'\n});\nexport var unsupportedMark = createPMMarkSpecFactory({\n  attrs: {\n    originalValue: {}\n  },\n  excludes: ''\n});\nexport var unsupportedNodeAttribute = createPMMarkSpecFactory({\n  attrs: {\n    unsupported: {},\n    type: {}\n  }\n});", "import { em as emFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name em_mark\n */\n\nvar emDOM = ['em'];\nexport var em = emFactory({\n  parseDOM: [{\n    tag: 'i'\n  }, {\n    tag: 'em'\n  }, {\n    style: 'font-style=italic'\n  }],\n  toDOM: function toDOM() {\n    return emDOM;\n  }\n});", "import { code as codeFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name code_mark\n */\n\nexport var code = codeFactory({\n  parseDOM: [{\n    tag: 'span.code',\n    preserveWhitespace: true\n  }, {\n    tag: 'code',\n    preserveWhitespace: true\n  }, {\n    tag: 'tt',\n    preserveWhitespace: true\n  }, {\n    tag: 'span',\n    preserveWhitespace: true,\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      if (dom.style.whiteSpace === 'pre') {\n        return {};\n      }\n      if (dom.style.fontFamily && dom.style.fontFamily.toLowerCase().indexOf('monospace') >= 0) {\n        return {};\n      }\n      return false;\n    }\n  }],\n  toDOM: function toDOM() {\n    return ['span', {\n      class: 'code',\n      spellcheck: 'false'\n    }];\n  }\n});", "import { strike as strikeFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name strike_mark\n */\n\nexport var strike = strikeFactory({\n  parseDOM: [{\n    tag: 'strike'\n  }, {\n    tag: 's'\n  }, {\n    tag: 'del'\n  }, {\n    style: 'text-decoration',\n    getAttrs: function getAttrs(value) {\n      return value === 'line-through' && null;\n    }\n  }],\n  toDOM: function toDOM() {\n    return ['s'];\n  }\n});", "import { strong as strongFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name strong_mark\n */\n\nvar strongDOM = ['strong'];\nexport var strong = strongFactory({\n  parseDOM: [{\n    tag: 'strong'\n  },\n  // This works around a Google Docs misbehavior where\n  // pasted content will be inexplicably wrapped in `<b>`\n  // tags with a font-weight normal.\n  {\n    tag: 'b',\n    getAttrs: function getAttrs(node) {\n      var element = node;\n      return element.style.fontWeight !== 'normal' && null;\n    }\n  }, {\n    tag: 'span',\n    getAttrs: function getAttrs(node) {\n      var element = node;\n      var fontWeight = element.style.fontWeight;\n      return typeof fontWeight === 'string' && (fontWeight === 'bold' || fontWeight === 'bolder' || /^(bold(er)?|[5-9]\\d{2,})$/.test(fontWeight)) && null;\n    }\n  }],\n  toDOM: function toDOM() {\n    return strongDOM;\n  }\n});", "import { underline as underlineFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name underline_mark\n */\n\nexport var underline = underlineFactory({\n  parseDOM: [{\n    tag: 'u'\n  }, {\n    style: 'text-decoration',\n    getAttrs: function getAttrs(value) {\n      return value === 'underline' && null;\n    }\n  }],\n  toDOM: function toDOM() {\n    return ['u'];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { link as linkFactory } from '../../next-schema/generated/markTypes';\nimport { isRootRelative, isSafeUrl, normalizeUrl } from '../../utils/url';\n\n/**\n * @name link_mark\n */\n\nvar getLinkAttrs = function getLinkAttrs(attribute) {\n  return function (domNode) {\n    var dom = domNode;\n    var href = dom.getAttribute(attribute) || '';\n    var attrs = {\n      __confluenceMetadata: dom.hasAttribute('__confluenceMetadata') ? JSON.parse(dom.getAttribute('__confluenceMetadata') || '') : undefined\n    };\n    if (!isSafeUrl(href)) {\n      return false;\n    }\n    if (isRootRelative(href)) {\n      attrs.href = href;\n      return attrs;\n    }\n    attrs.href = normalizeUrl(href);\n    return attrs;\n  };\n};\nexport var link = linkFactory({\n  parseDOM: [{\n    tag: '[data-block-link]',\n    getAttrs: getLinkAttrs('data-block-link'),\n    contentElement: function contentElement(node) {\n      var clone = node.cloneNode(true);\n      clone.removeAttribute('data-block-link');\n      clone.setAttribute('data-skip-paste', 'true');\n      var wrapper = document.createElement('div');\n      wrapper.appendChild(clone);\n      return wrapper;\n    }\n  }, {\n    tag: 'a[href]',\n    getAttrs: getLinkAttrs('href')\n  }],\n  toDOM: function toDOM(node, isInline) {\n    var attrs = Object.keys(node.attrs).reduce(function (attrs, key) {\n      if (key === '__confluenceMetadata') {\n        if (node.attrs[key] !== null) {\n          attrs[key] = JSON.stringify(node.attrs[key]);\n        }\n      } else if (key === 'href') {\n        attrs[key] = isSafeUrl(node.attrs[key]) ? node.attrs[key] : undefined;\n      } else {\n        attrs[key] = node.attrs[key];\n      }\n      return attrs;\n    }, {});\n    if (isInline) {\n      return ['a', attrs];\n    }\n    return ['a', _objectSpread(_objectSpread({}, attrs), {}, _defineProperty(_defineProperty({}, 'data-block-link', 'true'), \"class\", 'blockLink')), 0];\n  }\n});\nvar OPTIONAL_ATTRS = ['title', 'id', 'collection', 'occurrenceKey', '__confluenceMetadata'];\nexport var toJSON = function toJSON(mark) {\n  return {\n    type: mark.type.name,\n    attrs: Object.keys(mark.attrs).reduce(function (attrs, key) {\n      if (OPTIONAL_ATTRS.indexOf(key) === -1 || mark.attrs[key] !== null) {\n        attrs[key] = mark.attrs[key];\n      }\n      return attrs;\n    }, {})\n  };\n};", "import { typeAheadQuery as typeAheadQueryFactory } from '../../next-schema/generated/markTypes';\nimport { B400 } from '../../utils/colors';\nexport var typeAheadQuery = typeAheadQueryFactory({\n  parseDOM: [{\n    tag: 'span[data-type-ahead-query]'\n  }],\n  toDOM: function toDOM(node) {\n    return ['span', {\n      'data-type-ahead-query': 'true',\n      'data-trigger': node.attrs.trigger,\n      style: \"color: \".concat(B400)\n    }];\n  }\n});", "import { subsup as subsupFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name subsup_mark\n */\n\nfunction getAttrFromVerticalAlign(node) {\n  if (node === 'sub') {\n    return {\n      type: 'sub'\n    };\n  }\n  if (node === 'super') {\n    return {\n      type: 'sup'\n    };\n  }\n  return false;\n}\nexport var subsup = subsupFactory({\n  parseDOM: [{\n    tag: 'sub',\n    attrs: {\n      type: 'sub'\n    }\n  }, {\n    tag: 'sup',\n    attrs: {\n      type: 'sup'\n    }\n  }, {\n    // Special case for pasting from Google Docs\n    // Google Docs uses vertical align to denote subscript and super script\n    style: 'vertical-align=super',\n    getAttrs: function getAttrs(node) {\n      return getAttrFromVerticalAlign(node);\n    }\n  }, {\n    style: 'vertical-align=sub',\n    getAttrs: function getAttrs(node) {\n      return getAttrFromVerticalAlign(node);\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    return [mark.attrs.type];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { textColor as textColorFactory } from '../../next-schema/generated/markTypes';\nimport { hexToEditorTextPaletteColor } from '../../utils/editor-palette';\nimport { rgbToHex, N0, N80, P50, P300, P500, T75, T300, T500, G75, G300, G500, R75, R300, R500, Y75, Y200, Y400, B75, B100, B500 } from '../../utils/colors';\nimport { getDarkModeLCHColor } from '../../utils/lch-color-inversion';\n\n/**\n * @name textColor_mark\n */\n\n// used for extended palette in text color picker\nvar colorArrayPalette = [\n// default row - first color is added programatically\n// [N800, 'Squid ink'], // default dark gray\n[B500, 'Dark blue'],\n// Chore coat\n[T500, 'Dark teal'],\n// Shabby chic\n[G500, 'Dark green'],\n// Keen green\n[Y400, 'Orange'],\n// Cheezy blasters\n[R500, 'Dark red'],\n// Dragon's blood\n[P500, 'Dark purple'],\n// Prince\n// row 2\n[N80, 'Light gray'],\n// Spooky ghost\n[B100, 'Blue'],\n// Arvo breeze\n[T300, 'Teal'],\n// Tamarama\n[G300, 'Green'],\n// Fine pine\n[Y200, 'Yellow'],\n// Pub mix\n[R300, 'Red'],\n// Poppy surprise\n[P300, 'Purple'],\n// Da' juice\n// row 3\n[N0, 'White'], [B75, 'Light blue'],\n// Schwag\n[T75, 'Light teal'],\n// Arctic chill\n[G75, 'Light green'],\n// Mintie\n[Y75, 'Light yellow'],\n// Dandelion whisper\n[R75, 'Light red'],\n// Bondi sunburn\n[P50, 'Light purple'] // Lavender secret\n];\n\n// @see https://product-fabric.atlassian.net/wiki/spaces/E/pages/55979455/Colour+picker+decisions#Colourpickerdecisions-Visualdesigndecisions\nexport var colorPalette = new Map();\n/** @deprecated [ED-15849] The extended palette is now rolled into the main one. Use `colorPalette` instead. */\nexport var colorPaletteExtended = colorPalette;\ncolorArrayPalette.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    color = _ref2[0],\n    label = _ref2[1];\n  return colorPalette.set(color.toLowerCase(), label);\n});\n\n// these are for test only\nvar testGlobalTheme;\nexport var setGlobalTheme = function setGlobalTheme(theme) {\n  testGlobalTheme = theme;\n};\n// This is a minimal duplication of the method from @atlaskit/tokens\n// to minimise the number of dependencies required as these changes are expected\n// to be patched onto CR8.\nexport var getGlobalTheme = function getGlobalTheme() {\n  // This should only be hit during tests.\n  //\n  // At time of writing Jest mocks are not working in this repository.\n  if (testGlobalTheme) {\n    return {\n      colorMode: testGlobalTheme\n    };\n  }\n  var element = document.documentElement;\n  var colorMode = element.getAttribute('data-color-mode') || '';\n  return {\n    colorMode: colorMode\n  };\n};\nexport var textColor = textColorFactory({\n  parseDOM: [{\n    style: 'color',\n    getAttrs: function getAttrs(maybeValue) {\n      var value = maybeValue;\n      var hexColor;\n      if (value.match(/^rgb/i)) {\n        hexColor = rgbToHex(value);\n      } else if (value[0] === '#') {\n        hexColor = value.toLowerCase();\n      }\n      // else handle other colour formats\n      return hexColor && colorPalette.has(hexColor) ? {\n        color: hexColor\n      } : false;\n    }\n  },\n  // This rule ensures when loading from a renderer or editor where the\n  // presented text color does not match the stored hex color -- that the\n  // text color is preserved.\n  //\n  // This was initially introduced to ensure text-color marks were not lost\n  // when text-color was used inside a link, and is now also used to support\n  // where the hex color stored in ADF is used as an ID for a design system\n  // token (and based on theme mode -- the presented color will change).\n  {\n    tag: '.fabric-text-color-mark',\n    getAttrs: function getAttrs(maybeElement) {\n      if (!(maybeElement instanceof HTMLElement)) {\n        return false;\n      }\n      var hexColor = maybeElement.dataset.textCustomColor;\n      return hexColor && colorPalette.has(hexColor) ? {\n        color: hexColor\n      } : false;\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    var paletteColorValue;\n    // Note -- while there is no way to create custom colors using default tooling\n    // the editor does supported ad hoc color values -- and there may be content\n    // which has been migrated or created via apis which use such values.\n\n    /**\n     * The Editor persists custom text colors when content has been migrated from the old editor, or created via\n     * apis.\n     *\n     * This behaviour predates the introduction of dark mode.\n     *\n     * Without the inversion logic below, text with custom colors, can be hard to read when the user loads the page in dark mode.\n     *\n     * This introduces inversion of the presentation of the custom text colors when the user is in dark mode.\n     *\n     * This can be done without additional changes to account for users copying and pasting content inside the Editor, because of\n     * how we detect text colors copied from external editor sources. Where we load the background color from a\n     * seperate attribute (data-text-custom-color), instead of the inline style.\n     *\n     * See the following document for more details on this behaviour\n     * https://hello.atlassian.net/wiki/spaces/CCECO/pages/2908658046/Unsupported+custom+text+colors+in+dark+theme+Editor+Job+Story\n     */\n    var tokenColor = hexToEditorTextPaletteColor(mark.attrs.color);\n    if (tokenColor) {\n      paletteColorValue = tokenColor;\n    } else {\n      if (getGlobalTheme().colorMode === 'dark') {\n        // if we have a custom color, we need to check if we are in dark mode\n        paletteColorValue = getDarkModeLCHColor(mark.attrs.color);\n      } else {\n        // if we are in light mode, we can just set the color\n        paletteColorValue = mark.attrs.color;\n      }\n    }\n    return ['span', _defineProperty({\n      class: 'fabric-text-color-mark',\n      // Editor common has a common style which uses this css variable as the value for\n      // the color property using the `fabric-text-color-mark` selector applied above.\n      style: \"--custom-palette-color: \".concat(paletteColorValue)\n    }, 'data-text-custom-color', mark.attrs.color)];\n  }\n});", "import { confluenceInlineComment as confluenceInlineCommentFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name inline_comment_marker\n * @description This temporary mark represents a Confluence-backed inline comment that wraps a piece of text. It will be replaced with a cross-product inline comment solution at later date.\n */\n\nexport var confluenceInlineComment = confluenceInlineCommentFactory({\n  parseDOM: [{\n    tag: 'span[data-mark-type=\"confluenceInlineComment\"]'\n  }],\n  toDOM: function toDOM(node) {\n    return ['span', {\n      'data-mark-type': 'confluenceInlineComment',\n      'data-reference': node.attrs.reference\n    }];\n  }\n});", "import { breakout as breakoutFactory } from '../../next-schema/generated/markTypes';\nvar allowedTypes = ['wide', 'full-width'];\n\n/**\n * @name breakout_mark\n */\n\nexport var breakout = breakoutFactory({\n  parseDOM: [{\n    tag: 'div.fabric-editor-breakout-mark',\n    getAttrs: function getAttrs(dom) {\n      var mode = dom.getAttribute('data-mode');\n      return {\n        mode: allowedTypes.indexOf(mode || '') === -1 ? 'wide' : mode\n      };\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    return ['div', {\n      class: 'fabric-editor-breakout-mark',\n      'data-mode': mark.attrs.mode\n    }, 0];\n  }\n});", "import { alignment as alignmentFactory } from '../../next-schema/generated/markTypes';\n\n/** TODO: Flip these positions for RTL */\nexport var alignmentPositionMap = {\n  end: 'right',\n  right: 'end',\n  center: 'center'\n};\n\n/**\n * @name alignment_mark\n */\n\nexport var alignment = alignmentFactory({\n  parseDOM: [{\n    tag: 'div.fabric-editor-block-mark',\n    getAttrs: function getAttrs(dom) {\n      var align = dom.getAttribute('data-align');\n      return align ? {\n        align: align\n      } : false;\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    return ['div', {\n      class: \"fabric-editor-block-mark fabric-editor-alignment fabric-editor-align-\".concat(mark.attrs.align),\n      'data-align': mark.attrs.align\n    }, 0];\n  }\n});", "import { indentation as indentationFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name indentation_mark\n */\n\nexport var indentation = indentationFactory({\n  parseDOM: [{\n    tag: 'div.fabric-editor-indentation-mark',\n    getAttrs: function getAttrs(dom) {\n      var level = +(dom.getAttribute('data-level') || '0');\n      return {\n        level: level > 6 ? 6 : level < 1 ? false : level\n      };\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    return ['div', {\n      class: 'fabric-editor-block-mark fabric-editor-indentation-mark',\n      'data-level': mark.attrs.level\n    }, 0];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { annotation as annotationFactory } from '../../next-schema/generated/markTypes';\n\n/**\n * @name annotation_mark\n */\n\nexport var AnnotationTypes = /*#__PURE__*/function (AnnotationTypes) {\n  AnnotationTypes[\"INLINE_COMMENT\"] = \"inlineComment\";\n  return AnnotationTypes;\n}({});\nexport var AnnotationMarkStates = /*#__PURE__*/function (AnnotationMarkStates) {\n  AnnotationMarkStates[\"RESOLVED\"] = \"resolved\";\n  AnnotationMarkStates[\"ACTIVE\"] = \"active\";\n  return AnnotationMarkStates;\n}({});\nexport function buildDataAttributes(_ref) {\n  var id = _ref.id,\n    annotationType = _ref.annotationType,\n    state = _ref.state;\n  var data = {\n    'data-mark-type': 'annotation',\n    'data-mark-annotation-type': annotationType,\n    'data-id': id\n  };\n  if (state) {\n    return _objectSpread(_objectSpread({}, data), {}, {\n      'data-mark-annotation-state': state\n    });\n  }\n  return data;\n}\nexport var annotation = annotationFactory({\n  parseDOM: [{\n    tag: 'span[data-mark-type=\"annotation\"]',\n    mark: 'annotation',\n    getAttrs: function getAttrs(domNode) {\n      var dom = domNode;\n      var attrs = {\n        id: dom.getAttribute('data-id'),\n        annotationType: dom.getAttribute('data-mark-annotation-type')\n      };\n      return attrs;\n    }\n  }],\n  toDOM: function toDOM(node) {\n    /*\n      Data attributes on the DOM node are a temporary means of\n      incrementally switching over to the Annotation mark. Once renderer\n      provides native support for inline comments the data attributes on the\n      DOM nodes will be removed.\n    */\n    return ['span', _objectSpread({\n      // Prettier will remove the quotes around class. This would cause some browsers\n      // to not add this attribute properly, as its a reserved word.\n      // prettier-ignore\n      'class': 'fabric-editor-annotation'\n    }, buildDataAttributes({\n      id: node.attrs.id,\n      annotationType: node.attrs.annotationType\n    })), 0];\n  }\n});", "import { unsupportedMark as unsupportedMarkFactory } from '../../next-schema/generated/markTypes';\nexport var unsupportedMark = unsupportedMarkFactory({\n  toDOM: function toDOM() {\n    return ['span'];\n  }\n});", "import { unsupportedNodeAttribute as unsupportedNodeAttributeFactory } from '../../next-schema/generated/markTypes';\nexport var unsupportedNodeAttribute = unsupportedNodeAttributeFactory({\n  toDOM: function toDOM() {\n    return ['span'];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { dataConsumer as dataConsumerFactory } from '../../next-schema/generated/markTypes';\nimport { isDOMElement } from '../../utils/parseDOM';\n\n/**\n * This annotation is purely for reference, & does _nothing_ given annotating\n * `minLength` on an array of strings is not supported with our schema+spec\n * generator.\n *\n * We're keeping it to signal that data consumer `sources` shouldn't be empty\n * strings\n *\n * // @minLength 1\n */\n\n/**\n * @name dataConsumer_mark\n * @description This mark is used for metadata surrounding a node consuming data\n * from a given source node\n */\n\nvar parseDataConsumer = function parseDataConsumer(maybeValue) {\n  var sources = isDOMElement(maybeValue) && maybeValue.getAttribute('data-sources');\n  try {\n    return sources ? {\n      sources: JSON.parse(sources)\n    } : false;\n  } catch (_unused) {\n    return false;\n  }\n};\nexport var dataConsumer = dataConsumerFactory({\n  parseDOM: [{\n    tag: '[data-mark-type=\"dataConsumer\"]',\n    getAttrs: function getAttrs(maybeValue) {\n      return parseDataConsumer(maybeValue);\n    }\n  }],\n  toDOM: function toDOM(mark, inline) {\n    var wrapperStyle = inline ? 'span' : 'div';\n    return [wrapperStyle, {\n      'data-mark-type': 'dataConsumer',\n      'data-sources': JSON.stringify(mark.attrs.sources)\n    }];\n  }\n});\n\n/**\n * We want to ensure any \"invalid ADF\" doesn't get serialised, but the entire\n * mark itself is not valid without a non-empty `sources`.\n *\n * We _almost could_ simply return `null` if sources length is < 0 & would fit\n * the type signature of prosemirror-model's `fragment` but not `mark`'s toJSON.\n *\n * So we'll leave any extra transformation checks in\n * `editor-json-transformer`(?)\n */\nexport var toJSON = function toJSON(mark) {\n  // // Remove intemediary state if we don't have any sources on data consumer\n  // if (mark.attrs?.sources?.length < 1) {\n  //   return null;\n  // }\n\n  return {\n    type: mark.type.name,\n    attrs: Object.keys(mark.attrs).filter(function (key) {\n      return key === 'sources' && mark.attrs[key].length > 0 && mark.attrs[key] !== null;\n    }).reduce(function (acc, key) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, mark.attrs[key]));\n    }, {})\n  };\n};", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { fragment as fragmentFactory } from '../../next-schema/generated/markTypes';\nimport { isDOMElement } from '../../utils/parseDOM';\n\n/**\n * @name fragment_mark\n * @description Indicates that the elements decorated with this mark belong to a \"fragment\" entity, which represents a collection of ADF nodes.\n * This entity can be referred to later by its `localId` attribute.\n */\n\nvar parseFragment = function parseFragment(maybeValue) {\n  var _maybeValue$getAttrib;\n  if (!isDOMElement(maybeValue)) {\n    return false;\n  }\n  var name = (_maybeValue$getAttrib = maybeValue.getAttribute('data-name')) !== null && _maybeValue$getAttrib !== void 0 ? _maybeValue$getAttrib : undefined;\n  var localId = maybeValue.getAttribute('data-localId');\n  if (!localId) {\n    return false;\n  }\n  return {\n    localId: localId,\n    name: name\n  };\n};\nexport var fragment = fragmentFactory({\n  parseDOM: [{\n    tag: '[data-mark-type=\"fragment\"]',\n    getAttrs: function getAttrs(maybeValue) {\n      return parseFragment(maybeValue);\n    }\n  }],\n  toDOM: function toDOM(mark, inline) {\n    var wrapperStyle = inline ? 'span' : 'div';\n    return [wrapperStyle, {\n      'data-mark-type': 'fragment',\n      'data-name': mark.attrs.name,\n      'data-localId': mark.attrs.localId\n    }];\n  }\n});\nexport var toJSON = function toJSON(mark) {\n  return {\n    type: mark.type.name,\n    attrs: _objectSpread({\n      localId: mark.attrs.localId\n    }, mark.attrs.name ? {\n      name: mark.attrs.name\n    } : {})\n  };\n};", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { border as borderFactory } from '../../next-schema/generated/markTypes';\nimport { hexToEditorBorderPaletteColor } from '../../utils/editor-palette';\nimport { N300A, N600, N1000 } from '../../utils/colors';\n\n/**\n * @name border_mark\n * @description This mark adds decoration to an element, and any element decorated with it will also have a border style.\n */\n\nvar borderColorArrayPalette = [[N300A, 'Subtle gray'], [N600, 'Gray'], [N1000, 'Bold gray']];\nexport var borderColorPalette = new Map();\nborderColorArrayPalette.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    color = _ref2[0],\n    label = _ref2[1];\n  return borderColorPalette.set(color.toLowerCase(), label);\n});\nexport var border = borderFactory({\n  parseDOM: [{\n    tag: '[data-mark-type=\"border\"]',\n    getAttrs: function getAttrs(domNode) {\n      var _dom$getAttribute, _dom$getAttribute2;\n      var dom = domNode;\n      var color = ((_dom$getAttribute = dom.getAttribute('data-color')) !== null && _dom$getAttribute !== void 0 ? _dom$getAttribute : '').toLowerCase();\n      var size = +((_dom$getAttribute2 = dom.getAttribute('data-size')) !== null && _dom$getAttribute2 !== void 0 ? _dom$getAttribute2 : '0');\n      return {\n        size: size > 3 ? 3 : size < 1 ? false : size,\n        color: borderColorPalette.has(color) ? color : false\n      };\n    }\n  }],\n  toDOM: function toDOM(mark, isInline) {\n    var wrapperStyle = isInline ? 'span' : 'div';\n\n    // Note -- while there is no way to create custom colors using default tooling\n    // the editor does supported ad hoc color values -- and there may be content\n    // which has been migrated or created via apis which use such values.\n    var paletteColorValue = hexToEditorBorderPaletteColor(mark.attrs.color) || mark.attrs.color;\n    return [wrapperStyle, {\n      'data-mark-type': 'border',\n      'data-color': mark.attrs.color,\n      'data-size': mark.attrs.size,\n      style: \"--custom-palette-color: \".concat(paletteColorValue)\n    }];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { backgroundColor as backgroundColorFactory } from '../../next-schema/generated/markTypes';\nimport { hexToEditorTextBackgroundPaletteColor } from '../../utils/editor-palette';\nimport { rgbToHex, L200, T200, P200, M200, Neutral300, O200 } from '../../utils/colors';\nimport { getGlobalTheme } from './text-color';\nimport { getDarkModeLCHColor } from '../../utils/lch-color-inversion';\n\n/**\n * @name backgroundColor_mark\n */\n\nvar colorArrayPalette = [[Neutral300, 'Gray'],\n// token: color.background.accent.gray.subtler\n[T200, 'Teal'],\n// token: color.background.accent.teal.subtler\n[L200, 'Lime'],\n// token: color.background.accent.lime.subtler\n[O200, 'Orange'],\n// token: color.background.accent.orange.subtler\n[M200, 'Magenta'],\n// token: color.background.accent.magenta.subtler\n[P200, 'Purple'] // token: color.background.accent.purple.subtler\n];\n\n// @see https://product-fabric.atlassian.net/wiki/spaces/E/pages/55979455/Colour+picker+decisions#Colourpickerdecisions-Visualdesigndecisions\nexport var backgroundColorPalette = new Map();\ncolorArrayPalette.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    color = _ref2[0],\n    label = _ref2[1];\n  return backgroundColorPalette.set(color.toLowerCase(), label);\n});\nexport var backgroundColor = backgroundColorFactory({\n  parseDOM: [{\n    style: 'background-color',\n    getAttrs: function getAttrs(maybeValue) {\n      var value = maybeValue;\n      var hexColor;\n      if (value.match(/^rgb/i)) {\n        hexColor = rgbToHex(value);\n      } else if (value[0] === '#') {\n        hexColor = value.toLowerCase();\n      }\n      // else handle other colour formats\n      return hexColor && backgroundColorPalette.has(hexColor) ? {\n        color: hexColor\n      } : false;\n    }\n  },\n  // This rule ensures when loading from a renderer or editor where the\n  // presented text color does not match the stored hex color -- that the\n  // text color is preserved.\n  //\n  // This is used to support the work-around that converts the hex color to\n  // a design system token to enable light / dark mode (through a CSS variable --custom-palette-color)\n  {\n    tag: '.fabric-background-color-mark',\n    getAttrs: function getAttrs(maybeElement) {\n      if (!(maybeElement instanceof HTMLElement)) {\n        return false;\n      }\n      var hexColor = maybeElement.dataset.backgroundCustomColor;\n      return hexColor && backgroundColorPalette.has(hexColor) ? {\n        color: hexColor\n      } : false;\n    }\n  }],\n  toDOM: function toDOM(mark) {\n    var paletteColorValue;\n    /**\n     * Documents can contain custom colors when content has been migrated from the old editor, or created via APIs.\n     *\n     * This behaviour predates the introduction of dark mode.\n     *\n     * Without the inversion logic below, text with custom colors, can be hard to read when the user loads the page in dark mode.\n     *\n     * This introduces inversion of the presentation of the custom text colors when the user is in dark mode.\n     *\n     * This can be done without additional changes to account for users copying and pasting content inside the Editor, because of\n     * how we detect text colors copied from external editor sources. Where we load the background color from a\n     * separate attribute (data-text-custom-color), instead of the inline style.\n     *\n     * See the following document for more details on this behaviour\n     * https://hello.atlassian.net/wiki/spaces/CCECO/pages/2908658046/Unsupported+custom+text+colors+in+dark+theme+Editor+Job+Story\n     */\n    var tokenColor = hexToEditorTextBackgroundPaletteColor(mark.attrs.color);\n    if (tokenColor) {\n      paletteColorValue = tokenColor;\n    } else {\n      if (getGlobalTheme().colorMode === 'dark') {\n        // if we have a custom color, we need to check if we are in dark mode\n        paletteColorValue = getDarkModeLCHColor(mark.attrs.color);\n      } else {\n        // if we are in light mode, we can just set the color\n        paletteColorValue = mark.attrs.color;\n      }\n    }\n    return ['span', _defineProperty({\n      class: 'fabric-background-color-mark',\n      // Editor common has a common style which uses this css variable as the value for\n      // the color property using the `fabric-text-background-color-mark` selector applied above.\n      style: \"--custom-palette-color: \".concat(paletteColorValue)\n    }, 'data-background-custom-color', mark.attrs.color)];\n  }\n});", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { Schema } from '@atlaskit/editor-prosemirror/model';\nimport { COLOR, FONT_STYLE, SEARCH_QUERY, LINK } from './groups';\nimport { link, em, strong, textColor, strike, subsup, underline, code, typeAheadQuery, confluenceInlineComment, breakout, alignment, indentation, annotation, unsupportedMark, unsupportedNodeAttribute, dataConsumer, fragment, border, backgroundColor } from './marks';\nimport { confluenceJiraIssue, confluenceUnsupportedBlock, confluenceUnsupportedInline, doc, paragraph, text, bulletList, orderedListWithOrder, listItemWithTask, heading, blockquoteWithNestedCodeblockOrMedia, codeBlock, extendedPanel, rule, image, mention, media, mediaInline, mediaSingleFull, mediaGroup, hardBreak, emoji, table, tableCell, tableHeader, tableRow, decisionList, decisionItem, taskList, taskItem, unknownBlock, extension, inlineExtension, bodiedExtension, multiBodiedExtension, extensionFrame, date, placeholder, layoutSection, layoutColumn, inlineCard, blockCard, unsupportedBlock, unsupportedInline, status, expandWithNestedExpand, nestedExpand, embedCard, caption } from './nodes';\nfunction addItems(builtInItems, config) {\n  var customSpecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!config) {\n    return {};\n  }\n\n  /**\n   * Add built-in Node / Mark specs\n   */\n  var items = builtInItems.reduce(function (items, _ref) {\n    var name = _ref.name,\n      spec = _ref.spec;\n    if (config.indexOf(name) !== -1) {\n      items[name] = customSpecs[name] || spec;\n    }\n    return items;\n  }, {});\n\n  /**\n   * Add Custom Node / Mark specs\n   */\n  return Object.keys(customSpecs).reduce(function (items, name) {\n    if (items[name]) {\n      return items;\n    }\n    items[name] = customSpecs[name];\n    return items;\n  }, items);\n}\n\n// We use groups to allow schemas to be constructed in different shapes without changing node/mark\n// specs, but this means nodes/marks are defined with groups that might never be used in the schema.\n// In this scenario ProseMirror will complain and prevent the schema from being constructed.\n//\n// To avoid the problem, we include items that serve to \"declare\" the groups in the schema. This\n// approach unfortunately leaves unused items in the schema, but has the benefit of avoiding the\n// need to manipulate `exclude` or content expression values for potentially every schema item.\nfunction groupDeclaration(name) {\n  return {\n    name: \"__\".concat(name, \"GroupDeclaration\"),\n    spec: {\n      group: name\n    }\n  };\n}\nvar markGroupDeclarations = [groupDeclaration(COLOR), groupDeclaration(FONT_STYLE), groupDeclaration(SEARCH_QUERY), groupDeclaration(LINK)];\nvar markGroupDeclarationsNames = markGroupDeclarations.map(function (groupMark) {\n  return groupMark.name;\n});\nvar nodesInOrder = [{\n  name: 'doc',\n  spec: doc\n}, {\n  name: 'paragraph',\n  spec: paragraph\n}, {\n  name: 'text',\n  spec: text\n}, {\n  name: 'bulletList',\n  spec: bulletList\n}, {\n  name: 'orderedList',\n  spec: orderedListWithOrder\n}, {\n  name: 'listItem',\n  spec: listItemWithTask\n}, {\n  name: 'heading',\n  spec: heading\n}, {\n  name: 'blockquote',\n  spec: blockquoteWithNestedCodeblockOrMedia\n}, {\n  name: 'codeBlock',\n  spec: codeBlock\n}, {\n  name: 'panel',\n  spec: extendedPanel(true)\n}, {\n  name: 'rule',\n  spec: rule\n}, {\n  name: 'image',\n  spec: image\n}, {\n  name: 'mention',\n  spec: mention\n}, {\n  name: 'caption',\n  spec: caption\n}, {\n  name: 'media',\n  spec: media\n}, {\n  name: 'mediaGroup',\n  spec: mediaGroup\n}, {\n  name: 'mediaSingle',\n  spec: mediaSingleFull\n}, {\n  name: 'mediaInline',\n  spec: mediaInline\n}, {\n  name: 'placeholder',\n  spec: placeholder\n}, {\n  name: 'layoutSection',\n  spec: layoutSection\n}, {\n  name: 'layoutColumn',\n  spec: layoutColumn\n}, {\n  name: 'hardBreak',\n  spec: hardBreak\n}, {\n  name: 'emoji',\n  spec: emoji\n}, {\n  name: 'table',\n  spec: table\n}, {\n  name: 'tableCell',\n  spec: tableCell\n}, {\n  name: 'tableRow',\n  spec: tableRow\n}, {\n  name: 'tableHeader',\n  spec: tableHeader\n}, {\n  name: 'confluenceJiraIssue',\n  spec: confluenceJiraIssue\n}, {\n  name: 'confluenceUnsupportedInline',\n  spec: confluenceUnsupportedInline\n}, {\n  name: 'confluenceUnsupportedBlock',\n  spec: confluenceUnsupportedBlock\n}, {\n  name: 'decisionList',\n  spec: decisionList\n}, {\n  name: 'decisionItem',\n  spec: decisionItem\n}, {\n  name: 'taskList',\n  spec: taskList\n}, {\n  name: 'taskItem',\n  spec: taskItem\n}, {\n  name: 'date',\n  spec: date\n}, {\n  name: 'status',\n  spec: status\n}, {\n  name: 'expand',\n  spec: expandWithNestedExpand\n}, {\n  name: 'nestedExpand',\n  spec: nestedExpand\n}, {\n  name: 'extension',\n  spec: extension\n}, {\n  name: 'inlineExtension',\n  spec: inlineExtension\n}, {\n  name: 'bodiedExtension',\n  spec: bodiedExtension\n}, {\n  name: 'multiBodiedExtension',\n  spec: multiBodiedExtension\n}, {\n  name: 'extensionFrame',\n  spec: extensionFrame\n}, {\n  name: 'inlineCard',\n  spec: inlineCard\n}, {\n  name: 'blockCard',\n  spec: blockCard\n}, {\n  name: 'embedCard',\n  spec: embedCard\n}, {\n  name: 'unknownBlock',\n  spec: unknownBlock\n}, {\n  name: 'unsupportedBlock',\n  spec: unsupportedBlock\n}, {\n  name: 'unsupportedInline',\n  spec: unsupportedInline\n}];\nvar marksInOrder = [{\n  name: 'link',\n  spec: link\n}, {\n  name: 'em',\n  spec: em\n}, {\n  name: 'strong',\n  spec: strong\n}, {\n  name: 'textColor',\n  spec: textColor\n}, {\n  name: 'backgroundColor',\n  spec: backgroundColor\n}, {\n  name: 'strike',\n  spec: strike\n}, {\n  name: 'subsup',\n  spec: subsup\n}, {\n  name: 'underline',\n  spec: underline\n}, {\n  name: 'code',\n  spec: code\n}, {\n  name: 'typeAheadQuery',\n  spec: typeAheadQuery\n}, {\n  name: 'alignment',\n  spec: alignment\n}, {\n  name: 'annotation',\n  spec: annotation\n}, {\n  name: 'confluenceInlineComment',\n  spec: confluenceInlineComment\n}].concat(markGroupDeclarations, [{\n  name: 'breakout',\n  spec: breakout\n}, {\n  name: 'dataConsumer',\n  spec: dataConsumer\n}, {\n  name: 'fragment',\n  spec: fragment\n}, {\n  name: 'indentation',\n  spec: indentation\n}, {\n  name: 'border',\n  spec: border\n}, {\n  name: 'unsupportedMark',\n  spec: unsupportedMark\n}, {\n  name: 'unsupportedNodeAttribute',\n  spec: unsupportedNodeAttribute\n}]);\nexport function getNodesAndMarksMap() {\n  var nodes = nodesInOrder.reduce(function (acc, _ref2) {\n    var name = _ref2.name,\n      spec = _ref2.spec;\n    // @ts-expect-error - Type for SchemaBuiltInItem is not correct\n    acc[name] = spec;\n    return acc;\n  }, {});\n  var marks = marksInOrder.reduce(function (acc, _ref3) {\n    var name = _ref3.name,\n      spec = _ref3.spec;\n    // @ts-expect-error - Type for SchemaBuiltInItem is not correct\n    acc[name] = spec;\n    return acc;\n  }, {});\n  return {\n    nodes: nodes,\n    marks: marks\n  };\n}\n\n/**\n * Creates a schema preserving order of marks and nodes.\n */\nexport function createSchema(config) {\n  var customNodeSpecs = config.customNodeSpecs,\n    customMarkSpecs = config.customMarkSpecs;\n  var nodesConfig = Object.keys(customNodeSpecs || {}).concat(config.nodes);\n  var marksConfig = Object.keys(customMarkSpecs || {}).concat(config.marks || []).concat(markGroupDeclarationsNames);\n  var nodes = addItems(nodesInOrder, nodesConfig, customNodeSpecs);\n  var marks = addItems(marksInOrder, marksConfig, customMarkSpecs);\n  nodes = sanitizeNodes(nodes, marks);\n  return new Schema({\n    nodes: nodes,\n    marks: marks\n  });\n}\nexport function sanitizeNodes(nodes, supportedMarks) {\n  var nodeNames = Object.keys(nodes);\n  nodeNames.forEach(function (nodeKey) {\n    var nodeSpec = _objectSpread({}, nodes[nodeKey]);\n    if (nodeSpec.marks && nodeSpec.marks !== '_') {\n      nodeSpec.marks = nodeSpec.marks.split(' ').filter(function (mark) {\n        return !!supportedMarks[mark];\n      }).join(' ');\n    }\n    if (nodeSpec.content) {\n      nodeSpec.content = sanitizeNodeSpecContent(nodes, nodeSpec.content);\n    }\n    nodes[nodeKey] = nodeSpec;\n  });\n  return nodes;\n}\nexport function sanitizeNodeSpecContent(nodes, rawContent) {\n  var content = rawContent.replace(/\\W/g, ' ');\n  var contentKeys = content.split(' ');\n  var unsupportedContentKeys = contentKeys.filter(function (contentKey) {\n    return !isContentSupported(nodes, contentKey);\n  });\n  return unsupportedContentKeys.reduce(function (newContent, nodeName) {\n    return sanitizedContent(newContent, nodeName);\n  }, rawContent);\n}\nfunction sanitizedContent(content, invalidContent) {\n  if (!invalidContent.length) {\n    return content || '';\n  }\n  if (!content || !content.match(/\\w/)) {\n    return '';\n  }\n  var pattern = \"(\".concat(invalidContent, \"((\\\\s)*\\\\|)+)|((\\\\|(\\\\s)*)+\").concat(invalidContent, \")|(\").concat(invalidContent, \"$)|(\").concat(invalidContent, \"(\\\\+|\\\\*))\");\n  return content.replace(new RegExp(pattern, 'g'), '').replace('  ', ' ').trim();\n}\nfunction isContentSupported(nodes, contentKey) {\n  var nodeKeys = Object.keys(nodes);\n\n  // content is with valid node\n  if (nodeKeys.indexOf(contentKey) > -1) {\n    return true;\n  }\n\n  // content is with valid group\n  for (var supportedKey in nodes) {\n    var nodeSpec = nodes[supportedKey];\n    if (nodeSpec && nodeSpec.group === contentKey) {\n      return true;\n    }\n  }\n  return false;\n}\nexport var allowCustomPanel = true;", "import memoizeOne from 'memoize-one';\nimport { extensionFrame, layoutSectionWithSingleColumn, multiBodiedExtension, expandWithNestedExpand, blockquoteWithNestedCodeblockOrMedia, listItemWithDecisionStage0, panelWithBlockquoteStage0 } from './nodes';\nimport { createSchema } from './create-schema';\nvar getDefaultSchemaConfig = function getDefaultSchemaConfig() {\n  var defaultSchemaConfig = {\n    nodes: ['doc', 'paragraph', 'text', 'bulletList', 'orderedList', 'listItem', 'heading', 'blockquote', 'codeBlock', 'panel', 'rule', 'image', 'caption', 'mention', 'media', 'mediaGroup', 'mediaSingle', 'mediaInline', 'confluenceUnsupportedBlock', 'confluenceUnsupportedInline', 'confluenceJiraIssue', 'expand', 'nestedExpand', 'extension', 'inlineExtension', 'bodiedExtension', 'hardBreak', 'emoji', 'table', 'tableCell', 'tableHeader', 'tableRow', 'decisionList', 'decisionItem', 'taskList', 'taskItem', 'unknownBlock', 'date', 'status', 'placeholder', 'layoutSection', 'layoutColumn', 'inlineCard', 'blockCard', 'embedCard', 'unsupportedBlock', 'unsupportedInline'],\n    marks: ['link', 'em', 'strong', 'strike', 'subsup', 'underline', 'code', 'textColor', 'backgroundColor', 'confluenceInlineComment', 'breakout', 'alignment', 'indentation', 'annotation', 'dataConsumer', 'border', 'unsupportedMark', 'unsupportedNodeAttribute', 'typeAheadQuery',\n    // https://product-fabric.atlassian.net/browse/ED-10214,\n    'fragment']\n  };\n  return defaultSchemaConfig;\n};\nexport var defaultSchemaConfig = getDefaultSchemaConfig();\nexport var getSchemaBasedOnStage = memoizeOne(function () {\n  var stage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'final';\n  var defaultSchemaConfig = getDefaultSchemaConfig();\n  if (stage === 'stage0') {\n    defaultSchemaConfig.customNodeSpecs = {\n      layoutSection: layoutSectionWithSingleColumn,\n      multiBodiedExtension: multiBodiedExtension,\n      extensionFrame: extensionFrame,\n      expand: expandWithNestedExpand,\n      blockquote: blockquoteWithNestedCodeblockOrMedia,\n      listItem: listItemWithDecisionStage0,\n      panel: panelWithBlockquoteStage0(true)\n    };\n  }\n  return createSchema(defaultSchemaConfig);\n});\nexport var defaultSchema = getSchemaBasedOnStage();", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { defaultSchema } from '@atlaskit/adf-schema/schema-default';\nimport MarkdownIt from 'markdown-it';\nimport { markdownItTable } from 'markdown-it-table';\nimport { MarkdownParser } from '@atlaskit/editor-prosemirror/markdown';\nimport { markdownItMedia } from './media';\nfunction filterMdToPmSchemaMapping(schema, map) {\n  return Object.keys(map).reduce(function (newMap, key) {\n    var value = map[key];\n    var block = value.block || value.node;\n    var mark = value.mark;\n    if (block && schema.nodes[block] || mark && schema.marks[mark]) {\n      newMap[key] = value;\n    }\n    return newMap;\n  }, {});\n}\nvar pmSchemaToMdMapping = {\n  nodes: {\n    blockquote: 'blockquote',\n    paragraph: 'paragraph',\n    rule: 'hr',\n    // lheading (---, ===)\n    heading: ['heading', 'lheading'],\n    codeBlock: ['code', 'fence'],\n    listItem: 'list',\n    image: 'image'\n  },\n  marks: {\n    em: 'emphasis',\n    strong: 'text',\n    link: ['link', 'autolink', 'reference', 'linkify'],\n    strike: 'strikethrough',\n    code: 'backticks'\n  }\n};\nvar mdToPmMapping = {\n  blockquote: {\n    block: 'blockquote'\n  },\n  paragraph: {\n    block: 'paragraph'\n  },\n  em: {\n    mark: 'em'\n  },\n  strong: {\n    mark: 'strong'\n  },\n  link: {\n    mark: 'link',\n    attrs: function attrs(tok) {\n      return {\n        href: tok.attrGet('href'),\n        title: tok.attrGet('title') || null\n      };\n    }\n  },\n  hr: {\n    node: 'rule'\n  },\n  heading: {\n    block: 'heading',\n    attrs: function attrs(tok) {\n      return {\n        level: +tok.tag.slice(1)\n      };\n    }\n  },\n  softbreak: {\n    node: 'hardBreak'\n  },\n  hardbreak: {\n    node: 'hardBreak'\n  },\n  code_block: {\n    block: 'codeBlock'\n  },\n  list_item: {\n    block: 'listItem'\n  },\n  bullet_list: {\n    block: 'bulletList'\n  },\n  ordered_list: {\n    block: 'orderedList',\n    attrs: function attrs(tok) {\n      return {\n        order: typeof tok.attrGet('start') === 'number' ? tok.attrGet('start') : 1\n      };\n    }\n  },\n  code_inline: {\n    mark: 'code'\n  },\n  fence: {\n    block: 'codeBlock',\n    // we trim any whitespaces around language definition\n    attrs: function attrs(tok) {\n      return {\n        language: tok.info && tok.info.trim() || null\n      };\n    }\n  },\n  media_single: {\n    block: 'mediaSingle',\n    attrs: function attrs() {\n      return {};\n    }\n  },\n  media: {\n    node: 'media',\n    attrs: function attrs(tok) {\n      return {\n        url: tok.attrGet('url'),\n        alt: tok.attrGet('alt'),\n        type: 'external'\n      };\n    }\n  },\n  emoji: {\n    node: 'emoji',\n    attrs: function attrs(tok) {\n      return {\n        shortName: \":\".concat(tok.markup, \":\"),\n        text: tok.content\n      };\n    }\n  },\n  table: {\n    block: 'table'\n  },\n  tr: {\n    block: 'tableRow'\n  },\n  th: {\n    block: 'tableHeader'\n  },\n  td: {\n    block: 'tableCell'\n  },\n  s: {\n    mark: 'strike'\n  },\n  task_list: {\n    block: 'taskList'\n  },\n  task_item: {\n    block: 'taskItem',\n    attrs: function attrs(tok) {\n      return {\n        state: tok.meta\n      };\n    }\n  }\n};\nvar md = MarkdownIt('zero', {\n  html: false\n});\nmd.enable([\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n'entity',\n// Process escaped chars and hardbreaks\n'escape']);\nexport var MarkdownTransformer = /*#__PURE__*/function () {\n  function MarkdownTransformer() {\n    var schema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSchema;\n    var tokenizer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : md;\n    _classCallCheck(this, MarkdownTransformer);\n    // Enable markdown plugins based on schema\n    ['nodes', 'marks'].forEach(function (key) {\n      for (var idx in pmSchemaToMdMapping[key]) {\n        if (schema[key][idx]) {\n          tokenizer.enable(pmSchemaToMdMapping[key][idx]);\n        }\n      }\n    });\n    if (schema.nodes.table) {\n      tokenizer.use(markdownItTable);\n    }\n    if (schema.nodes.media && schema.nodes.mediaSingle) {\n      tokenizer.use(markdownItMedia);\n    }\n    this.markdownParser = new MarkdownParser(schema, tokenizer, filterMdToPmSchemaMapping(schema, mdToPmMapping));\n  }\n  _createClass(MarkdownTransformer, [{\n    key: \"encode\",\n    value: function encode(_node) {\n      throw new Error('This is not implemented yet');\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(content) {\n      return this.markdownParser.parse(content);\n    }\n  }]);\n  return MarkdownTransformer;\n}();", "import table from './table';\n\nexport var markdownItTable = function markdownItTable(md, options) {\n  md.block.ruler.before('paragraph', 'table', table, {\n    alt: ['paragraph', 'reference']\n  });\n};", "// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n", "import decode from './lib/decode.mjs'\nimport encode from './lib/encode.mjs'\nimport format from './lib/format.mjs'\nimport parse from './lib/parse.mjs'\n\nexport {\n  decode,\n  encode,\n  format,\n  parse\n}\n", "/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n", "const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n", "export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n", "import Any from './properties/Any/regex.mjs';\nimport Cc  from './categories/Cc/regex.mjs';\nimport Cf  from './categories/Cf/regex.mjs';\nimport P   from './categories/P/regex.mjs';\nimport S   from './categories/S/regex.mjs';\nimport Z   from './categories/Z/regex.mjs';\n\nexport { Any, Cc, Cf, P, S, Z };\n", "export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/", "export default /[\\0-\\x1F\\x7F-\\x9F]/", "export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/", "export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/", "export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/", "export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/", null, null, null, null, null, null, null, "// Just a shortcut for bulk export\n\nimport parseLinkLabel from './parse_link_label.mjs'\nimport parseLinkDestination from './parse_link_destination.mjs'\nimport parseLinkTitle from './parse_link_title.mjs'\n\nexport {\n  parseLinkLabel,\n  parseLinkDestination,\n  parseLinkTitle\n}\n", "// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n", "// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n", "// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n", "/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n", "/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n", "// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n", "// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n", "// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n", "export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n", "export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n", "// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n", "// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n", "// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n", "// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n", "/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n", "// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n", "// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n", "// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n", "// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n", "// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n", "// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n", "import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n", "// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n", "// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n", "// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n", "// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n", "// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n", "/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n", "// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n", "// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n", "// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n", "// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n", "// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n", "// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n", "// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n", "// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n", "// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n", "// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n", "// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n", "// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n", "// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n", "/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n", "import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n", "import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n", "// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n", "// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n", "// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n", "import { Schema, Mark } from 'prosemirror-model';\nimport MarkdownIt from 'markdown-it';\n\n/**\nDocument schema for the data model used by CommonMark.\n*/\nconst schema = new Schema({\n    nodes: {\n        doc: {\n            content: \"block+\"\n        },\n        paragraph: {\n            content: \"inline*\",\n            group: \"block\",\n            parseDOM: [{ tag: \"p\" }],\n            toDOM() { return [\"p\", 0]; }\n        },\n        blockquote: {\n            content: \"block+\",\n            group: \"block\",\n            parseDOM: [{ tag: \"blockquote\" }],\n            toDOM() { return [\"blockquote\", 0]; }\n        },\n        horizontal_rule: {\n            group: \"block\",\n            parseDOM: [{ tag: \"hr\" }],\n            toDOM() { return [\"div\", [\"hr\"]]; }\n        },\n        heading: {\n            attrs: { level: { default: 1 } },\n            content: \"(text | image)*\",\n            group: \"block\",\n            defining: true,\n            parseDOM: [{ tag: \"h1\", attrs: { level: 1 } },\n                { tag: \"h2\", attrs: { level: 2 } },\n                { tag: \"h3\", attrs: { level: 3 } },\n                { tag: \"h4\", attrs: { level: 4 } },\n                { tag: \"h5\", attrs: { level: 5 } },\n                { tag: \"h6\", attrs: { level: 6 } }],\n            toDOM(node) { return [\"h\" + node.attrs.level, 0]; }\n        },\n        code_block: {\n            content: \"text*\",\n            group: \"block\",\n            code: true,\n            defining: true,\n            marks: \"\",\n            attrs: { params: { default: \"\" } },\n            parseDOM: [{ tag: \"pre\", preserveWhitespace: \"full\", getAttrs: node => ({ params: node.getAttribute(\"data-params\") || \"\" }) }],\n            toDOM(node) { return [\"pre\", node.attrs.params ? { \"data-params\": node.attrs.params } : {}, [\"code\", 0]]; }\n        },\n        ordered_list: {\n            content: \"list_item+\",\n            group: \"block\",\n            attrs: { order: { default: 1 }, tight: { default: false } },\n            parseDOM: [{ tag: \"ol\", getAttrs(dom) {\n                        return { order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1,\n                            tight: dom.hasAttribute(\"data-tight\") };\n                    } }],\n            toDOM(node) {\n                return [\"ol\", { start: node.attrs.order == 1 ? null : node.attrs.order,\n                        \"data-tight\": node.attrs.tight ? \"true\" : null }, 0];\n            }\n        },\n        bullet_list: {\n            content: \"list_item+\",\n            group: \"block\",\n            attrs: { tight: { default: false } },\n            parseDOM: [{ tag: \"ul\", getAttrs: dom => ({ tight: dom.hasAttribute(\"data-tight\") }) }],\n            toDOM(node) { return [\"ul\", { \"data-tight\": node.attrs.tight ? \"true\" : null }, 0]; }\n        },\n        list_item: {\n            content: \"block+\",\n            defining: true,\n            parseDOM: [{ tag: \"li\" }],\n            toDOM() { return [\"li\", 0]; }\n        },\n        text: {\n            group: \"inline\"\n        },\n        image: {\n            inline: true,\n            attrs: {\n                src: {},\n                alt: { default: null },\n                title: { default: null }\n            },\n            group: \"inline\",\n            draggable: true,\n            parseDOM: [{ tag: \"img[src]\", getAttrs(dom) {\n                        return {\n                            src: dom.getAttribute(\"src\"),\n                            title: dom.getAttribute(\"title\"),\n                            alt: dom.getAttribute(\"alt\")\n                        };\n                    } }],\n            toDOM(node) { return [\"img\", node.attrs]; }\n        },\n        hard_break: {\n            inline: true,\n            group: \"inline\",\n            selectable: false,\n            parseDOM: [{ tag: \"br\" }],\n            toDOM() { return [\"br\"]; }\n        }\n    },\n    marks: {\n        em: {\n            parseDOM: [\n                { tag: \"i\" }, { tag: \"em\" },\n                { style: \"font-style=italic\" },\n                { style: \"font-style=normal\", clearMark: m => m.type.name == \"em\" }\n            ],\n            toDOM() { return [\"em\"]; }\n        },\n        strong: {\n            parseDOM: [\n                { tag: \"strong\" },\n                { tag: \"b\", getAttrs: node => node.style.fontWeight != \"normal\" && null },\n                { style: \"font-weight=400\", clearMark: m => m.type.name == \"strong\" },\n                { style: \"font-weight\", getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null }\n            ],\n            toDOM() { return [\"strong\"]; }\n        },\n        link: {\n            attrs: {\n                href: {},\n                title: { default: null }\n            },\n            inclusive: false,\n            parseDOM: [{ tag: \"a[href]\", getAttrs(dom) {\n                        return { href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\") };\n                    } }],\n            toDOM(node) { return [\"a\", node.attrs]; }\n        },\n        code: {\n            parseDOM: [{ tag: \"code\" }],\n            toDOM() { return [\"code\"]; }\n        }\n    }\n});\n\n// @ts-ignore\nfunction maybeMerge(a, b) {\n    if (a.isText && b.isText && Mark.sameSet(a.marks, b.marks))\n        return a.withText(a.text + b.text);\n}\n// Object used to track the context of a running parse.\nclass MarkdownParseState {\n    constructor(schema, tokenHandlers) {\n        this.schema = schema;\n        this.tokenHandlers = tokenHandlers;\n        this.stack = [{ type: schema.topNodeType, attrs: null, content: [], marks: Mark.none }];\n    }\n    top() {\n        return this.stack[this.stack.length - 1];\n    }\n    push(elt) {\n        if (this.stack.length)\n            this.top().content.push(elt);\n    }\n    // Adds the given text to the current position in the document,\n    // using the current marks as styling.\n    addText(text) {\n        if (!text)\n            return;\n        let top = this.top(), nodes = top.content, last = nodes[nodes.length - 1];\n        let node = this.schema.text(text, top.marks), merged;\n        if (last && (merged = maybeMerge(last, node)))\n            nodes[nodes.length - 1] = merged;\n        else\n            nodes.push(node);\n    }\n    // Adds the given mark to the set of active marks.\n    openMark(mark) {\n        let top = this.top();\n        top.marks = mark.addToSet(top.marks);\n    }\n    // Removes the given mark from the set of active marks.\n    closeMark(mark) {\n        let top = this.top();\n        top.marks = mark.removeFromSet(top.marks);\n    }\n    parseTokens(toks) {\n        for (let i = 0; i < toks.length; i++) {\n            let tok = toks[i];\n            let handler = this.tokenHandlers[tok.type];\n            if (!handler)\n                throw new Error(\"Token type `\" + tok.type + \"` not supported by Markdown parser\");\n            handler(this, tok, toks, i);\n        }\n    }\n    // Add a node at the current position.\n    addNode(type, attrs, content) {\n        let top = this.top();\n        let node = type.createAndFill(attrs, content, top ? top.marks : []);\n        if (!node)\n            return null;\n        this.push(node);\n        return node;\n    }\n    // Wrap subsequent content in a node of the given type.\n    openNode(type, attrs) {\n        this.stack.push({ type: type, attrs: attrs, content: [], marks: Mark.none });\n    }\n    // Close and return the node that is currently on top of the stack.\n    closeNode() {\n        let info = this.stack.pop();\n        return this.addNode(info.type, info.attrs, info.content);\n    }\n}\nfunction attrs(spec, token, tokens, i) {\n    if (spec.getAttrs)\n        return spec.getAttrs(token, tokens, i);\n    // For backwards compatibility when `attrs` is a Function\n    else if (spec.attrs instanceof Function)\n        return spec.attrs(token);\n    else\n        return spec.attrs;\n}\n// Code content is represented as a single token with a `content`\n// property in Markdown-it.\nfunction noCloseToken(spec, type) {\n    return spec.noCloseToken || type == \"code_inline\" || type == \"code_block\" || type == \"fence\";\n}\nfunction withoutTrailingNewline(str) {\n    return str[str.length - 1] == \"\\n\" ? str.slice(0, str.length - 1) : str;\n}\nfunction noOp() { }\nfunction tokenHandlers(schema, tokens) {\n    let handlers = Object.create(null);\n    for (let type in tokens) {\n        let spec = tokens[type];\n        if (spec.block) {\n            let nodeType = schema.nodeType(spec.block);\n            if (noCloseToken(spec, type)) {\n                handlers[type] = (state, tok, tokens, i) => {\n                    state.openNode(nodeType, attrs(spec, tok, tokens, i));\n                    state.addText(withoutTrailingNewline(tok.content));\n                    state.closeNode();\n                };\n            }\n            else {\n                handlers[type + \"_open\"] = (state, tok, tokens, i) => state.openNode(nodeType, attrs(spec, tok, tokens, i));\n                handlers[type + \"_close\"] = state => state.closeNode();\n            }\n        }\n        else if (spec.node) {\n            let nodeType = schema.nodeType(spec.node);\n            handlers[type] = (state, tok, tokens, i) => state.addNode(nodeType, attrs(spec, tok, tokens, i));\n        }\n        else if (spec.mark) {\n            let markType = schema.marks[spec.mark];\n            if (noCloseToken(spec, type)) {\n                handlers[type] = (state, tok, tokens, i) => {\n                    state.openMark(markType.create(attrs(spec, tok, tokens, i)));\n                    state.addText(withoutTrailingNewline(tok.content));\n                    state.closeMark(markType);\n                };\n            }\n            else {\n                handlers[type + \"_open\"] = (state, tok, tokens, i) => state.openMark(markType.create(attrs(spec, tok, tokens, i)));\n                handlers[type + \"_close\"] = state => state.closeMark(markType);\n            }\n        }\n        else if (spec.ignore) {\n            if (noCloseToken(spec, type)) {\n                handlers[type] = noOp;\n            }\n            else {\n                handlers[type + \"_open\"] = noOp;\n                handlers[type + \"_close\"] = noOp;\n            }\n        }\n        else {\n            throw new RangeError(\"Unrecognized parsing spec \" + JSON.stringify(spec));\n        }\n    }\n    handlers.text = (state, tok) => state.addText(tok.content);\n    handlers.inline = (state, tok) => state.parseTokens(tok.children);\n    handlers.softbreak = handlers.softbreak || (state => state.addText(\" \"));\n    return handlers;\n}\n/**\nA configuration of a Markdown parser. Such a parser uses\n[markdown-it](https://github.com/markdown-it/markdown-it) to\ntokenize a file, and then runs the custom rules it is given over\nthe tokens to create a ProseMirror document tree.\n*/\nclass MarkdownParser {\n    /**\n    Create a parser with the given configuration. You can configure\n    the markdown-it parser to parse the dialect you want, and provide\n    a description of the ProseMirror entities those tokens map to in\n    the `tokens` object, which maps token names to descriptions of\n    what to do with them. Such a description is an object, and may\n    have the following properties:\n    */\n    constructor(\n    /**\n    The parser's document schema.\n    */\n    schema, \n    /**\n    This parser's markdown-it tokenizer.\n    */\n    tokenizer, \n    /**\n    The value of the `tokens` object used to construct this\n    parser. Can be useful to copy and modify to base other parsers\n    on.\n    */\n    tokens) {\n        this.schema = schema;\n        this.tokenizer = tokenizer;\n        this.tokens = tokens;\n        this.tokenHandlers = tokenHandlers(schema, tokens);\n    }\n    /**\n    Parse a string as [CommonMark](http://commonmark.org/) markup,\n    and create a ProseMirror document as prescribed by this parser's\n    rules.\n    \n    The second argument, when given, is passed through to the\n    [Markdown\n    parser](https://markdown-it.github.io/markdown-it/#MarkdownIt.parse).\n    */\n    parse(text, markdownEnv = {}) {\n        let state = new MarkdownParseState(this.schema, this.tokenHandlers), doc;\n        state.parseTokens(this.tokenizer.parse(text, markdownEnv));\n        do {\n            doc = state.closeNode();\n        } while (state.stack.length);\n        return doc || this.schema.topNodeType.createAndFill();\n    }\n}\nfunction listIsTight(tokens, i) {\n    while (++i < tokens.length)\n        if (tokens[i].type != \"list_item_open\")\n            return tokens[i].hidden;\n    return false;\n}\n/**\nA parser parsing unextended [CommonMark](http://commonmark.org/),\nwithout inline HTML, and producing a document in the basic schema.\n*/\nconst defaultMarkdownParser = new MarkdownParser(schema, MarkdownIt(\"commonmark\", { html: false }), {\n    blockquote: { block: \"blockquote\" },\n    paragraph: { block: \"paragraph\" },\n    list_item: { block: \"list_item\" },\n    bullet_list: { block: \"bullet_list\", getAttrs: (_, tokens, i) => ({ tight: listIsTight(tokens, i) }) },\n    ordered_list: { block: \"ordered_list\", getAttrs: (tok, tokens, i) => ({\n            order: +tok.attrGet(\"start\") || 1,\n            tight: listIsTight(tokens, i)\n        }) },\n    heading: { block: \"heading\", getAttrs: tok => ({ level: +tok.tag.slice(1) }) },\n    code_block: { block: \"code_block\", noCloseToken: true },\n    fence: { block: \"code_block\", getAttrs: tok => ({ params: tok.info || \"\" }), noCloseToken: true },\n    hr: { node: \"horizontal_rule\" },\n    image: { node: \"image\", getAttrs: tok => ({\n            src: tok.attrGet(\"src\"),\n            title: tok.attrGet(\"title\") || null,\n            alt: tok.children[0] && tok.children[0].content || null\n        }) },\n    hardbreak: { node: \"hard_break\" },\n    em: { mark: \"em\" },\n    strong: { mark: \"strong\" },\n    link: { mark: \"link\", getAttrs: tok => ({\n            href: tok.attrGet(\"href\"),\n            title: tok.attrGet(\"title\") || null\n        }) },\n    code_inline: { mark: \"code\", noCloseToken: true }\n});\n\nconst blankMark = { open: \"\", close: \"\", mixable: true };\n/**\nA specification for serializing a ProseMirror document as\nMarkdown/CommonMark text.\n*/\nclass MarkdownSerializer {\n    /**\n    Construct a serializer with the given configuration. The `nodes`\n    object should map node names in a given schema to function that\n    take a serializer state and such a node, and serialize the node.\n    */\n    constructor(\n    /**\n    The node serializer functions for this serializer.\n    */\n    nodes, \n    /**\n    The mark serializer info.\n    */\n    marks, options = {}) {\n        this.nodes = nodes;\n        this.marks = marks;\n        this.options = options;\n    }\n    /**\n    Serialize the content of the given node to\n    [CommonMark](http://commonmark.org/).\n    */\n    serialize(content, options = {}) {\n        options = Object.assign({}, this.options, options);\n        let state = new MarkdownSerializerState(this.nodes, this.marks, options);\n        state.renderContent(content);\n        return state.out;\n    }\n}\n/**\nA serializer for the [basic schema](https://prosemirror.net/docs/ref/#schema).\n*/\nconst defaultMarkdownSerializer = new MarkdownSerializer({\n    blockquote(state, node) {\n        state.wrapBlock(\"> \", null, node, () => state.renderContent(node));\n    },\n    code_block(state, node) {\n        // Make sure the front matter fences are longer than any dash sequence within it\n        const backticks = node.textContent.match(/`{3,}/gm);\n        const fence = backticks ? (backticks.sort().slice(-1)[0] + \"`\") : \"```\";\n        state.write(fence + (node.attrs.params || \"\") + \"\\n\");\n        state.text(node.textContent, false);\n        // Add a newline to the current content before adding closing marker\n        state.write(\"\\n\");\n        state.write(fence);\n        state.closeBlock(node);\n    },\n    heading(state, node) {\n        state.write(state.repeat(\"#\", node.attrs.level) + \" \");\n        state.renderInline(node, false);\n        state.closeBlock(node);\n    },\n    horizontal_rule(state, node) {\n        state.write(node.attrs.markup || \"---\");\n        state.closeBlock(node);\n    },\n    bullet_list(state, node) {\n        state.renderList(node, \"  \", () => (node.attrs.bullet || \"*\") + \" \");\n    },\n    ordered_list(state, node) {\n        let start = node.attrs.order || 1;\n        let maxW = String(start + node.childCount - 1).length;\n        let space = state.repeat(\" \", maxW + 2);\n        state.renderList(node, space, i => {\n            let nStr = String(start + i);\n            return state.repeat(\" \", maxW - nStr.length) + nStr + \". \";\n        });\n    },\n    list_item(state, node) {\n        state.renderContent(node);\n    },\n    paragraph(state, node) {\n        state.renderInline(node);\n        state.closeBlock(node);\n    },\n    image(state, node) {\n        state.write(\"![\" + state.esc(node.attrs.alt || \"\") + \"](\" + node.attrs.src.replace(/[\\(\\)]/g, \"\\\\$&\") +\n            (node.attrs.title ? ' \"' + node.attrs.title.replace(/\"/g, '\\\\\"') + '\"' : \"\") + \")\");\n    },\n    hard_break(state, node, parent, index) {\n        for (let i = index + 1; i < parent.childCount; i++)\n            if (parent.child(i).type != node.type) {\n                state.write(\"\\\\\\n\");\n                return;\n            }\n    },\n    text(state, node) {\n        state.text(node.text, !state.inAutolink);\n    }\n}, {\n    em: { open: \"*\", close: \"*\", mixable: true, expelEnclosingWhitespace: true },\n    strong: { open: \"**\", close: \"**\", mixable: true, expelEnclosingWhitespace: true },\n    link: {\n        open(state, mark, parent, index) {\n            state.inAutolink = isPlainURL(mark, parent, index);\n            return state.inAutolink ? \"<\" : \"[\";\n        },\n        close(state, mark, parent, index) {\n            let { inAutolink } = state;\n            state.inAutolink = undefined;\n            return inAutolink ? \">\"\n                : \"](\" + mark.attrs.href.replace(/[\\(\\)\"]/g, \"\\\\$&\") + (mark.attrs.title ? ` \"${mark.attrs.title.replace(/\"/g, '\\\\\"')}\"` : \"\") + \")\";\n        },\n        mixable: true\n    },\n    code: { open(_state, _mark, parent, index) { return backticksFor(parent.child(index), -1); },\n        close(_state, _mark, parent, index) { return backticksFor(parent.child(index - 1), 1); },\n        escape: false }\n});\nfunction backticksFor(node, side) {\n    let ticks = /`+/g, m, len = 0;\n    if (node.isText)\n        while (m = ticks.exec(node.text))\n            len = Math.max(len, m[0].length);\n    let result = len > 0 && side > 0 ? \" `\" : \"`\";\n    for (let i = 0; i < len; i++)\n        result += \"`\";\n    if (len > 0 && side < 0)\n        result += \" \";\n    return result;\n}\nfunction isPlainURL(link, parent, index) {\n    if (link.attrs.title || !/^\\w+:/.test(link.attrs.href))\n        return false;\n    let content = parent.child(index);\n    if (!content.isText || content.text != link.attrs.href || content.marks[content.marks.length - 1] != link)\n        return false;\n    return index == parent.childCount - 1 || !link.isInSet(parent.child(index + 1).marks);\n}\n/**\nThis is an object used to track state and expose\nmethods related to markdown serialization. Instances are passed to\nnode and mark serialization methods (see `toMarkdown`).\n*/\nclass MarkdownSerializerState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    nodes, \n    /**\n    @internal\n    */\n    marks, \n    /**\n    The options passed to the serializer.\n    */\n    options) {\n        this.nodes = nodes;\n        this.marks = marks;\n        this.options = options;\n        /**\n        @internal\n        */\n        this.delim = \"\";\n        /**\n        @internal\n        */\n        this.out = \"\";\n        /**\n        @internal\n        */\n        this.closed = null;\n        /**\n        @internal\n        */\n        this.inAutolink = undefined;\n        /**\n        @internal\n        */\n        this.atBlockStart = false;\n        /**\n        @internal\n        */\n        this.inTightList = false;\n        if (typeof this.options.tightLists == \"undefined\")\n            this.options.tightLists = false;\n        if (typeof this.options.hardBreakNodeName == \"undefined\")\n            this.options.hardBreakNodeName = \"hard_break\";\n    }\n    /**\n    @internal\n    */\n    flushClose(size = 2) {\n        if (this.closed) {\n            if (!this.atBlank())\n                this.out += \"\\n\";\n            if (size > 1) {\n                let delimMin = this.delim;\n                let trim = /\\s+$/.exec(delimMin);\n                if (trim)\n                    delimMin = delimMin.slice(0, delimMin.length - trim[0].length);\n                for (let i = 1; i < size; i++)\n                    this.out += delimMin + \"\\n\";\n            }\n            this.closed = null;\n        }\n    }\n    /**\n    @internal\n    */\n    getMark(name) {\n        let info = this.marks[name];\n        if (!info) {\n            if (this.options.strict !== false)\n                throw new Error(`Mark type \\`${name}\\` not supported by Markdown renderer`);\n            info = blankMark;\n        }\n        return info;\n    }\n    /**\n    Render a block, prefixing each line with `delim`, and the first\n    line in `firstDelim`. `node` should be the node that is closed at\n    the end of the block, and `f` is a function that renders the\n    content of the block.\n    */\n    wrapBlock(delim, firstDelim, node, f) {\n        let old = this.delim;\n        this.write(firstDelim != null ? firstDelim : delim);\n        this.delim += delim;\n        f();\n        this.delim = old;\n        this.closeBlock(node);\n    }\n    /**\n    @internal\n    */\n    atBlank() {\n        return /(^|\\n)$/.test(this.out);\n    }\n    /**\n    Ensure the current content ends with a newline.\n    */\n    ensureNewLine() {\n        if (!this.atBlank())\n            this.out += \"\\n\";\n    }\n    /**\n    Prepare the state for writing output (closing closed paragraphs,\n    adding delimiters, and so on), and then optionally add content\n    (unescaped) to the output.\n    */\n    write(content) {\n        this.flushClose();\n        if (this.delim && this.atBlank())\n            this.out += this.delim;\n        if (content)\n            this.out += content;\n    }\n    /**\n    Close the block for the given node.\n    */\n    closeBlock(node) {\n        this.closed = node;\n    }\n    /**\n    Add the given text to the document. When escape is not `false`,\n    it will be escaped.\n    */\n    text(text, escape = true) {\n        let lines = text.split(\"\\n\");\n        for (let i = 0; i < lines.length; i++) {\n            this.write();\n            // Escape exclamation marks in front of links\n            if (!escape && lines[i][0] == \"[\" && /(^|[^\\\\])\\!$/.test(this.out))\n                this.out = this.out.slice(0, this.out.length - 1) + \"\\\\!\";\n            this.out += escape ? this.esc(lines[i], this.atBlockStart) : lines[i];\n            if (i != lines.length - 1)\n                this.out += \"\\n\";\n        }\n    }\n    /**\n    Render the given node as a block.\n    */\n    render(node, parent, index) {\n        if (this.nodes[node.type.name]) {\n            this.nodes[node.type.name](this, node, parent, index);\n        }\n        else {\n            if (this.options.strict !== false) {\n                throw new Error(\"Token type `\" + node.type.name + \"` not supported by Markdown renderer\");\n            }\n            else if (!node.type.isLeaf) {\n                if (node.type.inlineContent)\n                    this.renderInline(node);\n                else\n                    this.renderContent(node);\n                if (node.isBlock)\n                    this.closeBlock(node);\n            }\n        }\n    }\n    /**\n    Render the contents of `parent` as block nodes.\n    */\n    renderContent(parent) {\n        parent.forEach((node, _, i) => this.render(node, parent, i));\n    }\n    /**\n    Render the contents of `parent` as inline content.\n    */\n    renderInline(parent, fromBlockStart = true) {\n        this.atBlockStart = fromBlockStart;\n        let active = [], trailing = \"\";\n        let progress = (node, offset, index) => {\n            let marks = node ? node.marks : [];\n            // Remove marks from `hard_break` that are the last node inside\n            // that mark to prevent parser edge cases with new lines just\n            // before closing marks.\n            if (node && node.type.name === this.options.hardBreakNodeName)\n                marks = marks.filter(m => {\n                    if (index + 1 == parent.childCount)\n                        return false;\n                    let next = parent.child(index + 1);\n                    return m.isInSet(next.marks) && (!next.isText || /\\S/.test(next.text));\n                });\n            let leading = trailing;\n            trailing = \"\";\n            // If whitespace has to be expelled from the node, adjust\n            // leading and trailing accordingly.\n            if (node && node.isText && marks.some(mark => {\n                let info = this.getMark(mark.type.name);\n                return info && info.expelEnclosingWhitespace && !mark.isInSet(active);\n            })) {\n                let [_, lead, rest] = /^(\\s*)(.*)$/m.exec(node.text);\n                if (lead) {\n                    leading += lead;\n                    node = rest ? node.withText(rest) : null;\n                    if (!node)\n                        marks = active;\n                }\n            }\n            if (node && node.isText && marks.some(mark => {\n                let info = this.getMark(mark.type.name);\n                return info && info.expelEnclosingWhitespace &&\n                    (index == parent.childCount - 1 || !mark.isInSet(parent.child(index + 1).marks));\n            })) {\n                let [_, rest, trail] = /^(.*?)(\\s*)$/m.exec(node.text);\n                if (trail) {\n                    trailing = trail;\n                    node = rest ? node.withText(rest) : null;\n                    if (!node)\n                        marks = active;\n                }\n            }\n            let inner = marks.length ? marks[marks.length - 1] : null;\n            let noEsc = inner && this.getMark(inner.type.name).escape === false;\n            let len = marks.length - (noEsc ? 1 : 0);\n            // Try to reorder 'mixable' marks, such as em and strong, which\n            // in Markdown may be opened and closed in different order, so\n            // that order of the marks for the token matches the order in\n            // active.\n            outer: for (let i = 0; i < len; i++) {\n                let mark = marks[i];\n                if (!this.getMark(mark.type.name).mixable)\n                    break;\n                for (let j = 0; j < active.length; j++) {\n                    let other = active[j];\n                    if (!this.getMark(other.type.name).mixable)\n                        break;\n                    if (mark.eq(other)) {\n                        if (i > j)\n                            marks = marks.slice(0, j).concat(mark).concat(marks.slice(j, i)).concat(marks.slice(i + 1, len));\n                        else if (j > i)\n                            marks = marks.slice(0, i).concat(marks.slice(i + 1, j)).concat(mark).concat(marks.slice(j, len));\n                        continue outer;\n                    }\n                }\n            }\n            // Find the prefix of the mark set that didn't change\n            let keep = 0;\n            while (keep < Math.min(active.length, len) && marks[keep].eq(active[keep]))\n                ++keep;\n            // Close the marks that need to be closed\n            while (keep < active.length)\n                this.text(this.markString(active.pop(), false, parent, index), false);\n            // Output any previously expelled trailing whitespace outside the marks\n            if (leading)\n                this.text(leading);\n            // Open the marks that need to be opened\n            if (node) {\n                while (active.length < len) {\n                    let add = marks[active.length];\n                    active.push(add);\n                    this.text(this.markString(add, true, parent, index), false);\n                    this.atBlockStart = false;\n                }\n                // Render the node. Special case code marks, since their content\n                // may not be escaped.\n                if (noEsc && node.isText)\n                    this.text(this.markString(inner, true, parent, index) + node.text +\n                        this.markString(inner, false, parent, index + 1), false);\n                else\n                    this.render(node, parent, index);\n                this.atBlockStart = false;\n            }\n            // After the first non-empty text node is rendered, the end of output\n            // is no longer at block start.\n            //\n            // FIXME: If a non-text node writes something to the output for this\n            // block, the end of output is also no longer at block start. But how\n            // can we detect that?\n            if ((node === null || node === void 0 ? void 0 : node.isText) && node.nodeSize > 0) {\n                this.atBlockStart = false;\n            }\n        };\n        parent.forEach(progress);\n        progress(null, 0, parent.childCount);\n        this.atBlockStart = false;\n    }\n    /**\n    Render a node's content as a list. `delim` should be the extra\n    indentation added to all lines except the first in an item,\n    `firstDelim` is a function going from an item index to a\n    delimiter for the first line of the item.\n    */\n    renderList(node, delim, firstDelim) {\n        if (this.closed && this.closed.type == node.type)\n            this.flushClose(3);\n        else if (this.inTightList)\n            this.flushClose(1);\n        let isTight = typeof node.attrs.tight != \"undefined\" ? node.attrs.tight : this.options.tightLists;\n        let prevTight = this.inTightList;\n        this.inTightList = isTight;\n        node.forEach((child, _, i) => {\n            if (i && isTight)\n                this.flushClose(1);\n            this.wrapBlock(delim, firstDelim(i), node, () => this.render(child, node, i));\n        });\n        this.inTightList = prevTight;\n    }\n    /**\n    Escape the given string so that it can safely appear in Markdown\n    content. If `startOfLine` is true, also escape characters that\n    have special meaning only at the start of the line.\n    */\n    esc(str, startOfLine = false) {\n        str = str.replace(/[`*\\\\~\\[\\]_]/g, (m, i) => m == \"_\" && i > 0 && i + 1 < str.length && str[i - 1].match(/\\w/) && str[i + 1].match(/\\w/) ? m : \"\\\\\" + m);\n        if (startOfLine)\n            str = str.replace(/^(\\+[ ]|[\\-*>])/, \"\\\\$&\").replace(/^(\\s*)(#{1,6})(\\s|$)/, '$1\\\\$2$3').replace(/^(\\s*\\d+)\\.\\s/, \"$1\\\\. \");\n        if (this.options.escapeExtraCharacters)\n            str = str.replace(this.options.escapeExtraCharacters, \"\\\\$&\");\n        return str;\n    }\n    /**\n    @internal\n    */\n    quote(str) {\n        let wrap = str.indexOf('\"') == -1 ? '\"\"' : str.indexOf(\"'\") == -1 ? \"''\" : \"()\";\n        return wrap[0] + str + wrap[1];\n    }\n    /**\n    Repeat the given string `n` times.\n    */\n    repeat(str, n) {\n        let out = \"\";\n        for (let i = 0; i < n; i++)\n            out += str;\n        return out;\n    }\n    /**\n    Get the markdown string for a given opening or closing mark.\n    */\n    markString(mark, open, parent, index) {\n        let info = this.getMark(mark.type.name);\n        let value = open ? info.open : info.close;\n        return typeof value == \"string\" ? value : value(this, mark, parent, index);\n    }\n    /**\n    Get leading and trailing whitespace from a string. Values of\n    leading or trailing property of the return object will be undefined\n    if there is no match.\n    */\n    getEnclosingWhitespace(text) {\n        return {\n            leading: (text.match(/^(\\s+)/) || [undefined])[0],\n            trailing: (text.match(/(\\s+)$/) || [undefined])[0]\n        };\n    }\n}\n\nexport { MarkdownParser, MarkdownSerializer, MarkdownSerializerState, defaultMarkdownParser, defaultMarkdownSerializer, schema };\n", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction createRule() {\n  var regx = /!\\[([^\\]]*)\\]\\(([^)]*?)\\s*(?:\"([^\")]*)\"\\s*)?\\)/g;\n  var validParentTokens = ['th_open', 'td_open', 'list_item_open'];\n\n  /**\n   * This function looks for strings that matches ![description](url) inside Inline-tokens.\n   * It will then split the Inline-token with content before and after the image, example:\n   *\n   * Input (tokens):\n   *   paragraph_open\n   *   inline - content: Hello ![](image.jpg) World!\n   *   paragraph_close\n   * Output (tokens):\n   *   paragraph_open\n   *   inline - content: Hello\n   *   paragraph_close\n   *   media_single_open\n   *   media\n   *   media_single_close\n   *   paragraph_open\n   *   inline - content: World!\n   *   paragraph_close\n   *\n   * This is applied before the inline content is parsed, to ensure that the formatting of\n   * remaining inline content (bold, links, etc.) is kept intact!\n   */\n  return function media(State) {\n    var getUrl = function getUrl(str) {\n      var res = State.md.helpers.parseLinkDestination(str, str.indexOf('(') + 1, str.length);\n      if (res.ok) {\n        var href = State.md.normalizeLink(res.str);\n        if (State.md.validateLink(href)) {\n          return href;\n        }\n      }\n      return '';\n    };\n    var createMediaTokens = function createMediaTokens(url) {\n      var alt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var mediaSingleOpen = new State.Token('media_single_open', '', 1);\n      var media = new State.Token('media', '', 0);\n      media.attrs = [['url', getUrl(url)], ['type', 'external'], ['alt', alt]];\n      var mediaSingleClose = new State.Token('media_single_close', '', -1);\n      return [mediaSingleOpen, media, mediaSingleClose];\n    };\n    var createInlineTokens = function createInlineTokens(str, openingTokens, closingTokens) {\n      if (!str || str.length === 0) {\n        return [];\n      }\n      var inlineBefore = new State.Token('inline', '', 1);\n      inlineBefore.content = str;\n      inlineBefore.children = [];\n      return [].concat(_toConsumableArray(openingTokens), [inlineBefore], _toConsumableArray(closingTokens));\n    };\n    var processedTokens = [];\n    var newTokens = State.tokens.reduce(function (tokens, token, i, arr) {\n      var matchAll = Array.from(token.content.matchAll(regx));\n      if (token.type === 'inline' && matchAll.length) {\n        var openingTokens = [];\n        var cursor = i - 1;\n        var previousToken = arr[cursor];\n        var subTree = [];\n        while (previousToken && previousToken.level > 0 && validParentTokens.indexOf(previousToken.type) === -1) {\n          openingTokens.unshift(previousToken);\n          cursor--;\n          previousToken = arr[cursor];\n        }\n        if (validParentTokens.indexOf(previousToken.type) === -1) {\n          openingTokens.unshift(previousToken);\n        } else {\n          cursor++;\n        }\n        var closingTokens = openingTokens.map(function (token) {\n          return new State.Token(token.type.replace('_open', '_close'), token.tag, -1);\n        }).reverse();\n        var inlineContentStack = token.content;\n        matchAll.forEach(function (match, j) {\n          var _match = _slicedToArray(match, 3),\n            matchString = _match[0],\n            alt = _match[1],\n            url = _match[2];\n          var start = inlineContentStack.indexOf(matchString);\n          var contentBefore = inlineContentStack.substr(0, start);\n          inlineContentStack = inlineContentStack.substr(start + matchString.length);\n          subTree = [].concat(_toConsumableArray(subTree), _toConsumableArray(createInlineTokens(contentBefore, openingTokens, closingTokens)), _toConsumableArray(createMediaTokens(url, alt)));\n        });\n        if (inlineContentStack.length) {\n          subTree = [].concat(_toConsumableArray(subTree), _toConsumableArray(createInlineTokens(inlineContentStack, openingTokens, closingTokens)));\n        }\n        processedTokens = [].concat(_toConsumableArray(processedTokens), _toConsumableArray(closingTokens.map(function (c) {\n          return c.type;\n        })));\n        tokens = [].concat(_toConsumableArray(tokens.slice(0, cursor)), _toConsumableArray(subTree));\n      } else if (processedTokens.indexOf(token.type) !== -1) {\n        // Ignore token if it's already processed\n        processedTokens.splice(processedTokens.indexOf(token.type), 1);\n      } else {\n        tokens.push(token);\n      }\n      return tokens;\n    }, []);\n    State.tokens = newTokens;\n    return true;\n  };\n}\nexport var markdownItMedia = function markdownItMedia(md) {\n  md.core.ruler.before('inline', 'media', createRule());\n};"],
  "mappings": "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AE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GA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",
  "names": ["require_entities", "encodeCache", "getEncodeCache", "encode", "code", "decodeCache", "getDecodeCache", "decode", "format", "Url", "protocolPattern", "portPattern", "simplePathPattern", "delims", "unwise", "autoEscape", "nonHostChars", "hostEndingChars", "hostnameMaxLen", "hostnamePartPattern", "hostnamePartStart", "hostlessProtocol", "slashedProtocol", "urlParse", "require_regex", "_class", "isString", "_hasOwnProperty", "has", "assign", "arrayReplaceAt", "isValidEntityCode", "fromCodePoint", "UNESCAPE_MD_RE", "ENTITY_RE", "UNESCAPE_ALL_RE", "DIGITAL_ENTITY_TEST_RE", "replaceEntityPattern", "match", "name", "code", "unescapeMd", "unescapeAll", "entity", "HTML_ESCAPE_TEST_RE", "HTML_ESCAPE_REPLACE_RE", "HTML_REPLACEMENTS", "replaceUnsafeChar", "escapeHtml", "REGEXP_ESCAPE_RE", "escapeRE", "isSpace", "isWhiteSpace", "isPunctChar", "isMdAsciiPunct", "normalizeReference", "parseLinkLabel", "unescapeAll", "parseLinkDestination", "code", "unescapeAll", "parseLinkTitle", "code", "assign", "unescapeAll", "escapeHtml", "default_rules", "Renderer", "renderAttrs", "renderToken", "Ruler", "name", "rule", "list", "NEWLINES_RE", "NULL_RE", "normalize", "block", "inline", "arrayReplaceAt", "isLinkOpen", "isLinkClose", "linkify", "text", "RARE_RE", "SCOPED_ABBR_TEST_RE", "SCOPED_ABBR_RE", "SCOPED_ABBR", "replaceFn", "match", "name", "replace_scoped", "replace_rare", "replace", "isWhiteSpace", "isPunctChar", "isMdAsciiPunct", "QUOTE_TEST_RE", "QUOTE_RE", "APOSTROPHE", "replaceAt", "process_inlines", "text", "smartquotes", "text_join", "Token", "attrIndex", "name", "attrs", "attrPush", "attrSet", "attrGet", "attrJoin", "Token", "StateCore", "md", "Ruler", "_rules", "Core", "isSpace", "getLine", "escapedSplit", "table", "code", "fence", "isSpace", "blockquote", "isSpace", "hr", "isSpace", "skipBulletListMarker", "skipOrderedListMarker", "markTightParagraphs", "list", "normalizeReference", "isSpace", "reference", "attr_name", "unquoted", "single_quoted", "double_quoted", "attr_value", "attribute", "open_tag", "close_tag", "comment", "processing", "declaration", "cdata", "HTML_TAG_RE", "HTML_OPEN_CLOSE_TAG_RE", "HTML_OPEN_CLOSE_TAG_RE", "HTML_SEQUENCES", "html_block", "isSpace", "heading", "lheading", "paragraph", "Token", "isSpace", "StateBlock", "md", "isEmpty", "skipEmptyLines", "skipSpaces", "skipSpacesBack", "skipChars", "code", "skipCharsBack", "getLines", "Ruler", "_rules", "ParserBlock", "md", "isTerminatorChar", "text", "require_linkify", "SCHEME_RE", "linkify", "match", "link", "isSpace", "newline", "isSpace", "ESCAPED", "escape", "backtick", "postProcess", "postProcess", "normalizeReference", "isSpace", "link", "attrs", "code", "normalizeReference", "isSpace", "image", "attrs", "code", "EMAIL_RE", "AUTOLINK_RE", "autolink", "HTML_TAG_RE", "isLinkOpen", "isLinkClose", "isLetter", "html_inline", "match", "has", "isValidEntityCode", "fromCodePoint", "DIGITAL_RE", "NAMED_RE", "entity", "code", "match", "processDelimiters", "link_pairs", "fragments_join", "Token", "isWhiteSpace", "isPunctChar", "isMdAsciiPunct", "StateInline", "md", "Ruler", "_rules", "_rules2", "ParserInline", "md", "require_linkify_it", "assign", "_class", "isString", "isObject", "isRegExp", "isFunction", "escapeRE", "defaultOptions", "isOptionsObj", "defaultSchemas", "text", "tlds_2ch_src_re", "tlds_default", "resetScanCache", "createValidator", "createNormalizer", "match", "compile", "tlds", "name", "Match", "createMatch", "LinkifyIt", "add", "schema", "set", "test", "pretest", "testSchemaAt", "matchAtStart", "list", "normalize", "onCompile", "Renderer", "ParserBlock", "ParserInline", "LinkifyIt", "punycode", "config", "BAD_PROTO_RE", "GOOD_DATA_RE", "validateLink", "RECODE_HOSTNAME_FOR", "normalizeLink", "normalizeLinkText", "MarkdownIt", "name", "list", "require_table", "isSpace", "code", "getLine", "escapedSplit", "table", "r", "createPMNodeSpecFactory", "toDOM", "createPMMarkSpecFactory", "attrs", "expand", "confluenceJiraIssue", "toDOM", "attrs", "name", "confluenceUnsupportedBlock", "toDOM", "attrs", "getAttrs", "name", "confluenceUnsupportedInline", "toDOM", "attrs", "getAttrs", "doc", "nodeSpecOptions", "toDOM", "blockquote", "bulletList", "toDOM", "attrs", "getLanguageFromEditorStyle", "getLanguageFromBitbucketStyle", "getLanguageFromCode", "extractLanguageFromClass", "removeLastNewLine", "code", "codeBlock", "getAttrs", "schema", "toDOM", "hardBreak", "toDOM", "getAttrs", "heading", "toDOM", "name", "attrs", "rule", "toDOM", "orderedList", "toDOM", "attrs", "resolveStart", "getAttrs", "paragraph", "getAttrs", "attrs", "toDOM", "name", "emoji", "getAttrs", "toDOM", "text", "attrs", "image", "getAttrs", "toDOM", "generateUuid", "hex2rgb", "color", "isSafeUrl", "LinkifyIt", "linkifyMatch", "text", "link", "match", "clamp", "expandShorthandHex", "rgbFromHex", "rgbToHex", "convertComponent", "rgbToXyz", "convertRgbComponent", "convertXyzComponent", "xyzToLab", "labToLch", "lchToLab", "labToXyz", "xyzToRgb", "rgbToLch", "lchToRgb", "clampLightness", "getLightness", "getDarkModeLCHColor", "USER_TYPES", "mention", "getAttrs", "attrs", "toDOM", "text", "listItem", "toDOM", "ownKeys", "r", "_objectSpread", "PanelType", "getDomAttrs", "attrs", "getParseDOMAttrs", "extendedPanel", "getAttrs", "toDOM", "panelWithBlockquoteStage0", "text", "name", "toDOM", "caption", "toDOM", "attrs", "createMediaSpec", "inline", "getAttrs", "attrs", "toDOM", "media", "camelCaseToKebabCase", "copyPrivateAttributes", "map", "mediaGroup", "toDOM", "mediaInline", "WidthType", "isDOMElement", "ownKeys", "r", "_objectSpread", "mediaSingleSpec", "getAttrs", "getAttrsFromNode", "attrs", "_objectSpread", "toDOM", "mediaSingle", "mediaSingleFull", "getValue", "getCellAttrs", "backgroundColor", "getGlobalTheme", "getCellDomAttrs", "attrs", "createTableSpec", "getAttrs", "toDOM", "table", "tableRow", "toDOM", "tableCell", "getAttrs", "toDOM", "tableHeader", "getAttrs", "toDOM", "name", "decisionList", "getAttrs", "toDOM", "attrs", "decisionItem", "getAttrs", "toDOM", "attrs", "name", "taskList", "getAttrs", "toDOM", "attrs", "taskItem", "getAttrs", "toDOM", "attrs", "date", "getAttrs", "toDOM", "attrs", "placeholder", "getAttrs", "toDOM", "text", "attrs", "layoutSection", "toDOM", "attrs", "layoutSectionFull", "layoutColumn", "getAttrs", "toDOM", "attrs", "inlineCard", "getAttrs", "toDOM", "attrs", "ownKeys", "r", "_objectSpread", "getCommonAttributesFromDom", "blockCard", "getAttrs", "toDOM", "attrs", "unsupportedBlock", "getAttrs", "toDOM", "attrs", "unsupportedInline", "getAttrs", "toDOM", "attrs", "status", "getAttrs", "toDOM", "text", "attrs", "nestedExpand", "getAttrs", "toDOM", "attrs", "embedCard", "getAttrs", "toDOM", "attrs", "isValidLayout", "name", "getExtensionAttrs", "attrs", "extension", "getAttrs", "toDOM", "attrs", "inlineExtension", "getAttrs", "toDOM", "attrs", "bodiedExtension", "getAttrs", "toDOM", "attrs", "toDOM", "attrs", "getAttrs", "em", "toDOM", "code", "getAttrs", "toDOM", "strike", "getAttrs", "toDOM", "strong", "getAttrs", "toDOM", "underline", "getAttrs", "toDOM", "ownKeys", "r", "_objectSpread", "getLinkAttrs", "attribute", "attrs", "link", "toDOM", "typeAheadQuery", "toDOM", "subsup", "getAttrs", "toDOM", "testGlobalTheme", "getGlobalTheme", "testGlobalTheme", "textColor", "getAttrs", "toDOM", "confluenceInlineComment", "toDOM", "breakout", "getAttrs", "toDOM", "alignment", "getAttrs", "toDOM", "indentation", "getAttrs", "toDOM", "ownKeys", "r", "_objectSpread", "AnnotationTypes", "AnnotationMarkStates", "annotation", "getAttrs", "attrs", "toDOM", "unsupportedMark", "toDOM", "unsupportedNodeAttribute", "toDOM", "parseDataConsumer", "dataConsumer", "getAttrs", "toDOM", "inline", "parseFragment", "name", "fragment", "getAttrs", "toDOM", "inline", "border", "getAttrs", "toDOM", "colorArrayPalette", "backgroundColor", "getAttrs", "toDOM", "getGlobalTheme", "ownKeys", "r", "_objectSpread", "config", "items", "name", "doc", "paragraph", "text", "bulletList", "heading", "codeBlock", "rule", "image", "mention", "caption", "media", "mediaGroup", "mediaSingleFull", "mediaInline", "placeholder", "layoutSection", "layoutColumn", "hardBreak", "emoji", "table", "tableCell", "tableRow", "tableHeader", "confluenceJiraIssue", "confluenceUnsupportedInline", "confluenceUnsupportedBlock", "decisionList", "decisionItem", "taskList", "taskItem", "date", "status", "nestedExpand", "extension", "inlineExtension", "bodiedExtension", "inlineCard", "blockCard", "embedCard", "unsupportedBlock", "unsupportedInline", "link", "em", "strong", "textColor", "backgroundColor", "strike", "subsup", "underline", "code", "typeAheadQuery", "alignment", "annotation", "confluenceInlineComment", "breakout", "dataConsumer", "fragment", "indentation", "border", "unsupportedMark", "unsupportedNodeAttribute", "config", "_objectSpread", "getDefaultSchemaConfig", "defaultSchemaConfig", "import_markdown_it", "markdownItTable", "md", "table", "fromCodePoint", "decode", "encode", "code", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "regex_default", "_a", "CharCodes", "BinTrieFlags", "code", "EntityDecoderState", "DecodingMode", "errors", "base", "_a", "map", "escape", "match", "EntityLevel", "EncodingMode", "fromCodePoint", "match", "name", "code", "entity", "regex_default", "code", "code", "name", "rule", "list", "name", "attrs", "md", "linkify", "text", "match", "name", "text", "linkify", "md", "code", "table", "code", "blockquote", "nextLine", "pos", "max", "heading", "paragraph", "_rules", "table", "code", "blockquote", "heading", "paragraph", "md", "md", "text", "linkify", "match", "link", "escape", "postProcess", "link", "code", "attrs", "image", "code", "attrs", "isLinkOpen", "isLinkClose", "match", "match", "code", "fromCodePoint", "_rules", "text", "linkify", "escape", "link", "image", "_rules2", "md", "regex_default", "assign", "_class", "isString", "escapeRE", "text", "match", "tlds", "name", "LinkifyIt", "schema", "list", "normalize", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "stringFromCharCode", "error", "map", "mapDomain", "ucs2decode", "ucs2encode", "basicToDigit", "digitToBasic", "adapt", "decode", "encode", "toUnicode", "toASCII", "punycode", "punycode_es6_default", "punycode", "punycode_es6_default", "name", "list", "schema", "tokenHandlers", "text", "attrs", "tokens", "doc", "fence", "link", "name", "escape", "add", "media", "getUrl", "createMediaTokens", "createInlineTokens", "token", "match", "markdownItMedia", "md", "schema", "map", "block", "attrs", "MarkdownIt", "MarkdownTransformer", "encode"]
}
