import { NodeSpec, Node } from 'prosemirror-model';
import { MediaDefinition as Media } from './media';
import { LinkDefinition } from '../marks/link';
import { RichMediaAttributes } from './types/rich-media-common';
import { CaptionDefinition as Caption } from './caption';
export declare type MediaSingleDefinition = MediaSingleFullDefinition | MediaSingleWithCaptionDefinition;
/**
 * @name mediaSingle_node
 * @additionalProperties true
 */
export interface MediaSingleBaseDefinition {
    type: 'mediaSingle';
    attrs?: RichMediaAttributes;
    marks?: Array<LinkDefinition>;
}
/**
 * @additionalProperties true
 */
export interface MediaSingleFullContent {
    /**
     * @minItems 1
     * @maxItems 1
     * @allowUnsupportedBlock true
     */
    content: Array<Media>;
}
/**
 * @name mediaSingle_full_node
 */
export declare type MediaSingleFullDefinition = MediaSingleBaseDefinition & MediaSingleFullContent;
/**
 * @additionalProperties true
 */
export interface MediaCaptionContent {
    /**
     * @minItems 1
     * @maxItems 2
     * @allowUnsupportedBlock true
     */
    content: [Media, Caption?];
}
/**
 * @name mediaSingle_caption_node
 */
export declare type MediaSingleWithCaptionDefinition = MediaSingleBaseDefinition & MediaCaptionContent;
export declare const defaultAttrs: {
    width: {
        default: null;
    };
    layout: {
        default: string;
    };
};
export declare const mediaSingle: NodeSpec;
export declare const mediaSingleWithCaption: NodeSpec;
export declare const toJSON: (node: Node) => {
    attrs: any;
};
