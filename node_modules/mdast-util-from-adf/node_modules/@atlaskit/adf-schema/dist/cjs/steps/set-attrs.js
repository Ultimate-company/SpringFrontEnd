"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SetAttrsStep = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _prosemirrorTransform = require("prosemirror-transform");

var _prosemirrorModel = require("prosemirror-model");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * For more context on what this is about:
 * @see https://discuss.prosemirror.net/t/preventing-image-placeholder-replacement-from-being-undone/1394
 */
var SetAttrsStep = /*#__PURE__*/function (_Step) {
  (0, _inherits2.default)(SetAttrsStep, _Step);

  var _super = _createSuper(SetAttrsStep);

  function SetAttrsStep(pos, attrs) {
    var _this;

    (0, _classCallCheck2.default)(this, SetAttrsStep);
    _this = _super.call(this);
    _this.pos = pos;
    _this.attrs = attrs;
    return _this;
  }

  (0, _createClass2.default)(SetAttrsStep, [{
    key: "apply",
    value: function apply(doc) {
      var target = doc.nodeAt(this.pos);

      if (!target) {
        return _prosemirrorTransform.StepResult.fail('No node at given position');
      }

      if (target.isText) {
        return _prosemirrorTransform.StepResult.fail('Target is a text node. Attributes are not allowed.');
      }

      var attrs = _objectSpread(_objectSpread({}, target.attrs || {}), this.attrs || {});

      var newNode = target.type.create(attrs, _prosemirrorModel.Fragment.empty, target.marks);
      var slice = new _prosemirrorModel.Slice(_prosemirrorModel.Fragment.from(newNode), 0, target.isLeaf ? 0 : 1);
      return _prosemirrorTransform.StepResult.fromReplace(doc, this.pos, this.pos + 1, slice);
    }
  }, {
    key: "invert",
    value: function invert(doc) {
      var target = doc.nodeAt(this.pos);
      return new SetAttrsStep(this.pos, target ? target.attrs : {});
    }
  }, {
    key: "map",
    value: function map(mapping) {
      var result = mapping.mapResult(this.pos, 1);
      return result.deleted ? null : new SetAttrsStep(result.pos, this.attrs);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        stepType: 'setAttrs',
        pos: this.pos,
        attrs: this.attrs
      };
    }
  }], [{
    key: "fromJSON",
    value: function fromJSON(_schema, json) {
      if (typeof json.pos !== 'number' || json.attrs !== null && (0, _typeof2.default)(json.attrs) !== 'object') {
        throw new RangeError('Invalid input for SetAttrsStep.fromJSON');
      }

      return new SetAttrsStep(json.pos, json.attrs);
    }
  }]);
  return SetAttrsStep;
}(_prosemirrorTransform.Step);

exports.SetAttrsStep = SetAttrsStep;

_prosemirrorTransform.Step.jsonID('setAttrs', SetAttrsStep);