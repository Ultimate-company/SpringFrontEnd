export let PanelType;

(function (PanelType) {
  PanelType["INFO"] = "info";
  PanelType["NOTE"] = "note";
  PanelType["TIP"] = "tip";
  PanelType["WARNING"] = "warning";
  PanelType["ERROR"] = "error";
  PanelType["SUCCESS"] = "success";
  PanelType["CUSTOM"] = "custom";
})(PanelType || (PanelType = {}));

const getDefaultAttrs = () => {
  let attrs = {
    panelType: {
      default: 'info'
    },
    panelIcon: {
      default: null
    },
    panelIconId: {
      default: null
    },
    panelIconText: {
      default: null
    },
    panelColor: {
      default: null
    }
  };
  return attrs;
};

const getDomAttrs = nodeAttrs => {
  let attrs = {
    'data-panel-type': nodeAttrs.panelType,
    'data-panel-icon': nodeAttrs.panelIcon,
    'data-panel-icon-id': nodeAttrs.panelIconId,
    'data-panel-icon-text': nodeAttrs.panelIconText,
    'data-panel-color': nodeAttrs.panelColor
  };
  return attrs;
};

const getParseDOMAttrs = (allowCustomPanel, dom) => {
  let parseDOMAttrs = {
    panelType: dom.getAttribute('data-panel-type')
  };

  if (allowCustomPanel) {
    parseDOMAttrs = { ...parseDOMAttrs,
      panelIcon: dom.getAttribute('data-panel-icon'),
      panelIconId: dom.getAttribute('data-panel-icon-id'),
      panelIconText: dom.getAttribute('data-panel-icon-text'),
      panelColor: dom.getAttribute('data-panel-color')
    };
  } else {
    parseDOMAttrs.panelType = parseDOMAttrs.panelType === PanelType.CUSTOM ? PanelType.INFO : parseDOMAttrs.panelType;
  }

  return parseDOMAttrs;
};

export const panel = allowCustomPanel => {
  const panelNodeSpec = {
    group: 'block',
    content: '(paragraph | heading | bulletList | orderedList | blockCard | unsupportedBlock)+',
    marks: 'unsupportedMark unsupportedNodeAttribute',
    attrs: getDefaultAttrs(),
    parseDOM: [{
      tag: 'div[data-panel-type]',
      getAttrs: dom => getParseDOMAttrs(allowCustomPanel, dom)
    }],

    toDOM(node) {
      const attrs = getDomAttrs(node.attrs);
      const contentAttrs = {
        'data-panel-content': 'true'
      };
      return ['div', attrs, ['div', contentAttrs, 0]];
    }

  };
  return panelNodeSpec;
};