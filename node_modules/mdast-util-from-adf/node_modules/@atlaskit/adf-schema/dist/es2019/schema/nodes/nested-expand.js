/**
 * @name nestedExpand_content
 * @minItems 1
 * @allowUnsupportedBlock true
 */

/**
 * @name nestedExpand_node
 */

/**
 * @name nestedExpand_with_no_marks_node
 */
export const nestedExpand = {
  inline: false,
  marks: 'unsupportedMark unsupportedNodeAttribute',
  content: '(paragraph | heading | mediaSingle | mediaGroup | unsupportedBlock)+',
  isolating: true,
  selectable: true,
  attrs: {
    title: {
      default: ''
    },
    __expanded: {
      default: true
    }
  },
  parseDOM: [{
    context: 'nestedExpand//',
    tag: '[data-node-type="nestedExpand"]',
    skip: true
  }, {
    tag: '[data-node-type="nestedExpand"] button',
    ignore: true
  }, {
    tag: '[data-node-type="expand"] button',
    ignore: true
  }, {
    tag: 'div[data-node-type="nestedExpand"]',
    getAttrs: domNode => {
      const dom = domNode;
      return {
        title: dom.getAttribute('data-title'),
        __expanded: true
      };
    }
  }],

  toDOM(node) {
    const attrs = {
      'data-node-type': 'nestedExpand',
      'data-title': node.attrs.title,
      'data-expanded': node.attrs.__expanded
    };
    return ['div', attrs, 0];
  }

};