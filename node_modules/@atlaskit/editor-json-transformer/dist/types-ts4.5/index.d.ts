import type { Node as PMNode } from '@atlaskit/editor-prosemirror/model';
import type { JSONDocNode, JSONNode } from './types';
export type { JSONDocNode, JSONNode } from './types';
interface Transformer<T> {
    encode(node: PMNode): T;
    parse(content: T): PMNode;
}
export declare enum SchemaStage {
    FINAL = "final",
    STAGE_0 = "stage0"
}
export declare class JSONTransformer implements Transformer<JSONDocNode> {
    encode(node: PMNode): JSONDocNode;
    private internalParse;
    parse(content: JSONDocNode, stage?: SchemaStage): PMNode;
    /**
     * This method is used to encode a single node
     */
    encodeNode(node: PMNode): JSONNode;
}
