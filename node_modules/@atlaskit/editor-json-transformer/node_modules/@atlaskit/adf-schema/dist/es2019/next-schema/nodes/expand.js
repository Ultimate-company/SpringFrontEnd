import { $onePlus, $or, adfNode } from '@atlaskit/adf-schema-generator';
import { breakout } from '../marks/breakout';
import { unsupportedMark } from '../marks/unsupportedMark';
import { unsupportedNodeAttribute } from '../marks/unsupportedNodeAttribute';
import { nestedExpand } from './nestedExpand';
import { nonNestableBlockContentGroup } from '../groups/nonNestableBlockContentGroup';
export const expand = adfNode('expand').define({
  isolating: true,
  selectable: true,
  marks: [unsupportedMark, unsupportedNodeAttribute],
  hasEmptyMarks: true,
  attrs: {
    title: {
      type: 'string',
      default: '',
      optional: true
    },
    __expanded: {
      type: 'boolean',
      default: true,
      optional: true
    }
  },
  content: [$onePlus($or(nonNestableBlockContentGroup, nestedExpand.use('with_no_marks')))],
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      'props.attrs.optional': {
        reason: '@DSLCompatibilityException - required for expand validator spec',
        remove: true
      }
    }
  }
}).variant('without_nested_expand', {
  content: [$onePlus($or(nonNestableBlockContentGroup))],
  ignore: ['json-schema', 'validator-spec']
}).variant('with_breakout_mark', {
  marks: [breakout, unsupportedMark, unsupportedNodeAttribute],
  content: [],
  ignore: ['pm-spec']
}).variant('with_no_mark', {
  content: [],
  marks: [],
  noMarks: true,
  ignore: []
});