import { $or, $range, adfNode } from '@atlaskit/adf-schema-generator';
import { breakout } from '../marks/breakout';
import { unsupportedMark } from '../marks/unsupportedMark';
import { unsupportedNodeAttribute } from '../marks/unsupportedNodeAttribute';
import { layoutColumn } from './layoutColumn';
import { unsupportedBlock } from './unsupportedBlock';
export const layoutSection = adfNode('layoutSection').define({
  isolating: true,
  marks: [breakout, unsupportedMark, unsupportedNodeAttribute],
  content: [$or(layoutColumn, unsupportedBlock)],
  DANGEROUS_MANUAL_OVERRIDE: {
    'pm-spec': {
      content: {
        value: '(layoutColumn | unsupportedBlock){1,3} unsupportedBlock* | unsupportedBlock+',
        reason: `The content expression is not correct or redundant around 'unsupportedBlock* | unsupportedBlock+'. This case is not supported by the DSL. Also in JSON schema there is no range for the items, so theres a mismatch between JSON and PM.`
      }
    },
    'validator-spec': {
      'props.content.allowUnsupportedBlock': {
        remove: true,
        reason: '@DSLCompatibilityException - mismatch for layoutSection'
      }
    }
  }
}).variant('with_single_column', {
  stage0: true,
  content: [$range(1, 3, $or(layoutColumn, unsupportedBlock))],
  ignore: [],
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      'props.type': {
        value: {
          type: 'enum',
          values: ['layoutSection']
        },
        reason: '@DSLCompatibilityException - mismatch for layoutSection_with_single_column'
      },
      'props.marks': {
        value: {
          items: ['breakout'],
          optional: true,
          type: 'array'
        },
        reason: '@DSLCompatibilityException - mismatch for layoutSection_with_single_column'
      }
    }
  }
}).variant('full', {
  marks: [breakout, unsupportedMark, unsupportedNodeAttribute],
  content: [$range(2, 3, $or(layoutColumn, unsupportedBlock))],
  ignore: [],
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      'props.type': {
        value: {
          type: 'enum',
          values: ['layoutSection']
        },
        reason: '@DSLCompatibilityException - mismatch for layoutSection_full'
      }
    }
  }
});