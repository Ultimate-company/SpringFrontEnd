"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inlineCard = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _annotation = require("../marks/annotation");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var inlineCard = exports.inlineCard = (0, _adfSchemaGenerator.adfNode)('inlineCard').define({
  inline: true,
  selectable: true,
  draggable: true,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  attrs: {
    anyOf: [{
      url: {
        type: 'string',
        default: null,
        validatorFn: 'safeUrl'
      }
    }, {
      data: {
        type: 'object',
        default: null
      }
    }]
  },
  stage0: {
    marks: [_annotation.annotation, _unsupportedNodeAttribute.unsupportedNodeAttribute, _unsupportedMark.unsupportedMark]
  },
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      'props.marks': {
        reason: '@DSLCompatibilityException - Annotation mark is in variant, but not full schema. However this has been added for compatibility with current validator.',
        value: {
          items: ['annotation'],
          optional: true,
          type: 'array'
        }
      }
    }
  }
}).variant('with_annotation', {
  marks: [_annotation.annotation, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute]
});