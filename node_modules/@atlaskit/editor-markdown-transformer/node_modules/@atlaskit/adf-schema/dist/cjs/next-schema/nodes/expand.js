"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expand = void 0;
var _adfSchemaGenerator = require("@atlaskit/adf-schema-generator");
var _breakout = require("../marks/breakout");
var _unsupportedMark = require("../marks/unsupportedMark");
var _unsupportedNodeAttribute = require("../marks/unsupportedNodeAttribute");
var _nestedExpand = require("./nestedExpand");
var _nonNestableBlockContentGroup = require("../groups/nonNestableBlockContentGroup");
var expand = exports.expand = (0, _adfSchemaGenerator.adfNode)('expand').define({
  isolating: true,
  selectable: true,
  marks: [_unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  hasEmptyMarks: true,
  attrs: {
    title: {
      type: 'string',
      default: '',
      optional: true
    },
    __expanded: {
      type: 'boolean',
      default: true,
      optional: true
    }
  },
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(_nonNestableBlockContentGroup.nonNestableBlockContentGroup, _nestedExpand.nestedExpand.use('with_no_marks')))],
  DANGEROUS_MANUAL_OVERRIDE: {
    'validator-spec': {
      'props.attrs.optional': {
        reason: '@DSLCompatibilityException - required for expand validator spec',
        remove: true
      }
    }
  }
}).variant('without_nested_expand', {
  content: [(0, _adfSchemaGenerator.$onePlus)((0, _adfSchemaGenerator.$or)(_nonNestableBlockContentGroup.nonNestableBlockContentGroup))],
  ignore: ['json-schema', 'validator-spec']
}).variant('with_breakout_mark', {
  marks: [_breakout.breakout, _unsupportedMark.unsupportedMark, _unsupportedNodeAttribute.unsupportedNodeAttribute],
  content: [],
  ignore: ['pm-spec']
}).variant('with_no_mark', {
  content: [],
  marks: [],
  noMarks: true,
  ignore: []
});